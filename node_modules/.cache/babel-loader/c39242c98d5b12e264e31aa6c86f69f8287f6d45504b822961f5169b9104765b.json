{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasgobert/Desktop/Apps/MOSimulator/src/features/visualization/charts/ProfitVolumeChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useCallback } from 'react';\nimport { Box, useMediaQuery } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { useLanguage } from '../../../context/LanguageContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfitVolumeChart = ({\n  salesPricePerUnit,\n  costPerUnit,\n  currentVolume\n}) => {\n  _s();\n  var _theme$palette$cmyk2, _theme$palette$cmyk4;\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const {\n    t,\n    language\n  } = useLanguage();\n  const canvasRef = useRef(null);\n  const chartInstanceRef = useRef({\n    ctx: null,\n    width: 0,\n    height: 0,\n    // Adjusted padding for mobile view\n    padding: {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    },\n    maxVolume: 1000,\n    niceMaxProfit: 0,\n    yStep: 0,\n    profitPerUnit: 0,\n    currentHoverData: null // To store data for the current hover position\n  });\n  const profitPerUnit = salesPricePerUnit - costPerUnit;\n  chartInstanceRef.current.profitPerUnit = profitPerUnit; // Store for use in draw functions\n\n  // Update padding based on screen size\n  useEffect(() => {\n    const chart = chartInstanceRef.current;\n    if (isMobile) {\n      chart.padding = {\n        left: 70,\n        right: 20,\n        top: 50,\n        bottom: 65\n      };\n    } else {\n      chart.padding = {\n        left: 100,\n        right: 30,\n        top: 60,\n        bottom: 70\n      };\n    }\n  }, [isMobile]);\n  const formatCurrency = useCallback((amount, short = false) => {\n    if (typeof amount !== 'number' || isNaN(amount)) return 'N/A';\n    const currencySymbol = t('currency');\n    if (short) {\n      if (Math.abs(amount) >= 1000000) {\n        const value = (amount / 1000000).toFixed(1);\n        return language === 'ja' ? `${value}百万${currencySymbol}` : `${currencySymbol} ${value}M`;\n      } else if (Math.abs(amount) >= 1000) {\n        const value = (amount / 1000).toFixed(0); // No decimal for K to avoid clutter\n        return language === 'ja' ? `${value}千${currencySymbol}` : `${currencySymbol} ${value}K`;\n      }\n      return language === 'ja' ? `${Math.round(amount)}${currencySymbol}` : `${currencySymbol} ${Math.round(amount)}`;\n    }\n    return language === 'ja' ? `${Math.round(amount).toLocaleString('ja-JP')}${currencySymbol}` : `${currencySymbol} ${Math.round(amount).toLocaleString('en-US')}`;\n  }, [t, language]);\n  const calculateNiceStep = (maxValue, targetSteps = 5) => {\n    if (maxValue <= 0) return 10000; // Default step if no profit or negative\n    const rawStep = maxValue / targetSteps;\n    const magnitude = Math.pow(10, Math.floor(Math.log10(rawStep)));\n    const mantissa = rawStep / magnitude;\n    let niceStep;\n    if (mantissa < 1.5) niceStep = 1;else if (mantissa < 3) niceStep = 2;else if (mantissa < 7) niceStep = 5;else niceStep = 10;\n    return Math.max(1, niceStep * magnitude); // Ensure step is at least 1\n  };\n  const toCanvasX = useCallback(volume => {\n    const chart = chartInstanceRef.current;\n    return chart.padding.left + volume / chart.maxVolume * (chart.width - chart.padding.left - chart.padding.right);\n  }, []);\n  const toCanvasY = useCallback(profit => {\n    const chart = chartInstanceRef.current;\n    // Handle case where niceMaxProfit might be 0 or negative\n    const effectiveMaxProfit = chart.niceMaxProfit <= 0 ? 1 : chart.niceMaxProfit;\n    const chartHeight = chart.height - chart.padding.top - chart.padding.bottom;\n    // Adjust for Y-axis starting at 0 or a negative value\n    const zeroY = chart.niceMinProfit >= 0 ? 0 : chart.niceMinProfit;\n    const totalYRange = effectiveMaxProfit - zeroY;\n    if (totalYRange <= 0) return chart.height - chart.padding.bottom; // Avoid division by zero\n\n    return chart.height - chart.padding.bottom - (profit - zeroY) / totalYRange * chartHeight;\n  }, []);\n\n  // --- Drawing Functions ---\n  const drawBackground = useCallback(() => {\n    const chart = chartInstanceRef.current;\n    const {\n      ctx,\n      width,\n      height\n    } = chart;\n    ctx.fillStyle = '#f7f9f7'; // Very light green/grayish background\n    ctx.fillRect(0, 0, width, height);\n\n    // Draw chart title at the top\n    ctx.font = `bold ${isMobile ? '12px' : '14px'} sans-serif`;\n    ctx.fillStyle = '#333333';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'top';\n    const chartTitle = language === 'ja' ? '利益と販売量の関係' : 'Profit vs. Sales Volume';\n    ctx.fillText(chartTitle, width / 2, isMobile ? 10 : 20);\n  }, [language, isMobile]);\n  const drawGridAndAxes = useCallback(() => {\n    const chart = chartInstanceRef.current;\n    const {\n      ctx,\n      width,\n      height,\n      padding,\n      niceMaxProfit,\n      niceMinProfit,\n      yStep,\n      maxVolume\n    } = chart;\n    const chartHeight = height - padding.top - padding.bottom;\n    ctx.beginPath();\n    ctx.strokeStyle = '#e0e0e0';\n    ctx.lineWidth = 1;\n\n    // Vertical grid lines (reduce frequency on mobile)\n    const xStep = isMobile ? 200 : 100;\n    for (let i = 0; i <= maxVolume; i += xStep) {\n      const x = toCanvasX(i);\n      ctx.moveTo(x, padding.top);\n      ctx.lineTo(x, height - padding.bottom);\n    }\n\n    // Horizontal grid lines\n    for (let i = niceMinProfit; i <= niceMaxProfit; i += yStep) {\n      // Ensure we don't draw too many lines if yStep is very small relative to range\n      if ((niceMaxProfit - niceMinProfit) / yStep > 20 && i !== 0 && i !== niceMinProfit && i !== niceMaxProfit) {\n        if (i % (yStep * 2) !== 0 && i !== 0) continue; // Skip some lines if too dense\n      }\n      const y = toCanvasY(i);\n      ctx.moveTo(padding.left, y);\n      ctx.lineTo(width - padding.right, y);\n    }\n    ctx.stroke();\n\n    // Draw axes\n    ctx.beginPath();\n    ctx.strokeStyle = '#aaaaaa';\n    ctx.lineWidth = 1.5;\n    ctx.moveTo(padding.left, height - padding.bottom); // X-axis\n    ctx.lineTo(width - padding.right, height - padding.bottom);\n    ctx.moveTo(padding.left, padding.top); // Y-axis\n    ctx.lineTo(padding.left, height - padding.bottom);\n    ctx.stroke();\n  }, [toCanvasX, toCanvasY, isMobile]);\n  const drawLabelsAndTitles = useCallback(() => {\n    const chart = chartInstanceRef.current;\n    const {\n      ctx,\n      width,\n      height,\n      padding,\n      niceMaxProfit,\n      niceMinProfit,\n      yStep,\n      maxVolume\n    } = chart;\n\n    // Y-axis labels\n    ctx.textAlign = 'right';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = '#555555'; // Darker for better readability\n    ctx.font = `${isMobile ? '10px' : '11px'} sans-serif`;\n\n    // Use fewer labels on mobile\n    const yLabelStep = isMobile ? yStep * 2 : yStep;\n    for (let i = niceMinProfit; i <= niceMaxProfit; i += yLabelStep) {\n      if ((niceMaxProfit - niceMinProfit) / yLabelStep > 20 && i !== 0 && i !== niceMinProfit && i !== niceMaxProfit) {\n        if (i % (yLabelStep * 2) !== 0 && i !== 0) continue;\n      }\n      const y = toCanvasY(i);\n      ctx.fillText(formatCurrency(i, true), padding.left - 10, y);\n    }\n\n    // X-axis labels - fewer labels on mobile\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'top';\n    const xLabelStep = isMobile ? maxVolume >= 500 ? 200 : 100 : maxVolume >= 500 ? 100 : 50;\n    for (let i = 0; i <= maxVolume; i += xLabelStep) {\n      const x = toCanvasX(i);\n      ctx.fillText(i.toString(), x, height - padding.bottom + 8);\n    }\n\n    // Axis titles\n    ctx.font = `bold ${isMobile ? '10px' : '12px'} sans-serif`;\n    ctx.fillStyle = '#333333';\n    ctx.textAlign = 'center';\n\n    // X-axis title - Use default text if translation key fails\n    const xAxisTitle = language === 'ja' ? '月間販売量 (個)' : 'Monthly Sales Volume (units)';\n    ctx.fillText(xAxisTitle, padding.left + (width - padding.left - padding.right) / 2, height - padding.bottom + (isMobile ? 22 : 30));\n\n    // Y-axis title - Use default text if translation key fails\n    const yAxisTitle = language === 'ja' ? '月間利益 (円)' : 'Monthly Profit (JPY)';\n    ctx.save();\n    // Moved position further left to avoid overlap with Y-axis labels\n    // Position at 15 pixels from the left edge of the canvas\n    ctx.translate(isMobile ? 10 : 15, padding.top + (height - padding.top - padding.bottom) / 2);\n    ctx.rotate(-Math.PI / 2);\n    ctx.textAlign = 'center';\n    ctx.fillText(yAxisTitle, 0, 0);\n    ctx.restore();\n  }, [toCanvasX, toCanvasY, formatCurrency, language, isMobile]);\n  const drawProfitLine = useCallback(() => {\n    var _theme$palette$cmyk;\n    const chart = chartInstanceRef.current;\n    const {\n      ctx,\n      profitPerUnit,\n      maxVolume\n    } = chart;\n    ctx.beginPath();\n    // Use theme color, ensure theme.palette.cmyk.yellow is defined\n    ctx.strokeStyle = ((_theme$palette$cmyk = theme.palette.cmyk) === null || _theme$palette$cmyk === void 0 ? void 0 : _theme$palette$cmyk.yellow) || '#FFD700';\n    ctx.lineWidth = 2.5;\n    ctx.moveTo(toCanvasX(0), toCanvasY(0)); // Start at 0,0\n    for (let volume = 0; volume <= maxVolume; volume += 10) {\n      // Plot points for the line\n      const profit = volume * profitPerUnit;\n      ctx.lineTo(toCanvasX(volume), toCanvasY(profit));\n    }\n    ctx.stroke();\n  }, [toCanvasX, toCanvasY, (_theme$palette$cmyk2 = theme.palette.cmyk) === null || _theme$palette$cmyk2 === void 0 ? void 0 : _theme$palette$cmyk2.yellow]);\n  const drawTooltipAndPoint = useCallback((volume, profit) => {\n    var _theme$palette$cmyk3;\n    const chart = chartInstanceRef.current;\n    const {\n      ctx,\n      height,\n      padding,\n      profitPerUnit\n    } = chart;\n    if (!ctx) return;\n    const pointX = toCanvasX(volume);\n    const pointY = toCanvasY(profit);\n\n    // Dashed line\n    ctx.beginPath();\n    ctx.strokeStyle = '#888888';\n    ctx.setLineDash([3, 3]);\n    ctx.lineWidth = 1;\n    ctx.moveTo(pointX, height - padding.bottom);\n    ctx.lineTo(pointX, pointY);\n    ctx.moveTo(padding.left, pointY);\n    ctx.lineTo(pointX, pointY);\n    ctx.stroke();\n    ctx.setLineDash([]);\n\n    // Point\n    ctx.beginPath();\n    ctx.arc(pointX, pointY, isMobile ? 4 : 5, 0, Math.PI * 2);\n    ctx.fillStyle = ((_theme$palette$cmyk3 = theme.palette.cmyk) === null || _theme$palette$cmyk3 === void 0 ? void 0 : _theme$palette$cmyk3.yellow) || '#FFD700';\n    ctx.fill();\n    ctx.strokeStyle = '#555555';\n    ctx.lineWidth = 1.5;\n    ctx.stroke();\n\n    // Tooltip - simplified for mobile\n    const volumeLabel = language === 'ja' ? '販売量' : 'Volume';\n    const profitLabel = language === 'ja' ? '利益' : 'Profit';\n    const tooltipText = `${volumeLabel}: ${volume}, ${profitLabel}: ${formatCurrency(profit)}`;\n\n    // Smaller font on mobile\n    ctx.font = `bold ${isMobile ? '10px' : '11px'} sans-serif`;\n    const textWidth = ctx.measureText(tooltipText).width;\n    const tooltipWidth = Math.max(textWidth) + 20;\n    const tooltipHeight = isMobile ? 24 : 30; // Smaller height on mobile\n\n    let tooltipX = pointX + 15;\n    let tooltipY = pointY - 15 - tooltipHeight;\n\n    // Adjust tooltip position to stay within canvas\n    if (tooltipX + tooltipWidth > chart.width - chart.padding.right) {\n      tooltipX = pointX - 15 - tooltipWidth;\n    }\n    if (tooltipY < chart.padding.top) {\n      tooltipY = pointY + 15;\n    }\n\n    // If tooltip still goes out of bounds on mobile, position it at the top right corner\n    if (isMobile && (tooltipX < 0 || tooltipX + tooltipWidth > chart.width || tooltipY < 0 || tooltipY + tooltipHeight > chart.height)) {\n      tooltipX = chart.width - tooltipWidth - 10;\n      tooltipY = chart.padding.top + 10;\n    }\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.9)';\n    ctx.strokeStyle = 'rgba(100, 100, 100, 0.7)';\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.roundRect(tooltipX, tooltipY, tooltipWidth, tooltipHeight, 5); // Using roundRect\n    ctx.fill();\n    ctx.stroke();\n    ctx.fillStyle = '#333333';\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    ctx.fillText(tooltipText, tooltipX + 10, tooltipY + tooltipHeight / 2);\n  }, [toCanvasX, toCanvasY, formatCurrency, (_theme$palette$cmyk4 = theme.palette.cmyk) === null || _theme$palette$cmyk4 === void 0 ? void 0 : _theme$palette$cmyk4.yellow, language, isMobile]);\n\n  // Main drawing effect\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || typeof salesPricePerUnit !== 'number' || typeof costPerUnit !== 'number') {\n      // Clear canvas if data is invalid or not present\n      if (canvas) {\n        const context = canvas.getContext('2d');\n        context.clearRect(0, 0, canvas.width, canvas.height);\n      }\n      return;\n    }\n    const chart = chartInstanceRef.current;\n    chart.ctx = canvas.getContext('2d');\n    chart.width = canvas.width;\n    chart.height = canvas.height;\n    chart.profitPerUnit = salesPricePerUnit - costPerUnit;\n\n    // Calculate Y-axis scale\n    const maxPossibleProfit = chart.maxVolume * chart.profitPerUnit;\n    const minPossibleProfit = 0 * chart.profitPerUnit; // Could be negative if profitPerUnit is negative\n\n    if (chart.profitPerUnit > 0) {\n      chart.niceMinProfit = 0;\n      chart.niceMaxProfit = Math.ceil(maxPossibleProfit * 1.1 / calculateNiceStep(maxPossibleProfit * 1.1)) * calculateNiceStep(maxPossibleProfit * 1.1);\n      if (chart.niceMaxProfit <= 0) chart.niceMaxProfit = calculateNiceStep(100000); // Default if profit is tiny\n    } else {\n      // Handles zero or negative profit per unit\n      chart.niceMaxProfit = calculateNiceStep(100000); // A small positive default max\n      chart.niceMinProfit = Math.floor(minPossibleProfit * 1.1 / calculateNiceStep(Math.abs(minPossibleProfit * 1.1))) * calculateNiceStep(Math.abs(minPossibleProfit * 1.1));\n      if (chart.niceMinProfit >= 0 && minPossibleProfit < 0) chart.niceMinProfit = -calculateNiceStep(100000); // Default negative if profit is tiny negative\n      if (chart.profitPerUnit === 0) chart.niceMinProfit = 0;\n    }\n    // Ensure niceMaxProfit is always greater than niceMinProfit\n    if (chart.niceMaxProfit <= chart.niceMinProfit) {\n      chart.niceMaxProfit = chart.niceMinProfit + calculateNiceStep(Math.abs(chart.niceMinProfit) || 100000);\n    }\n    chart.yStep = calculateNiceStep(chart.niceMaxProfit - chart.niceMinProfit, isMobile ? 3 : 5);\n    if (chart.yStep === 0) chart.yStep = (chart.niceMaxProfit - chart.niceMinProfit) / (isMobile ? 3 : 5) || 1;\n\n    // --- Main Draw Function (Static Elements) ---\n    const drawStaticChart = () => {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n      drawBackground();\n      drawGridAndAxes();\n      drawLabelsAndTitles();\n      drawProfitLine();\n    };\n    drawStaticChart(); // Initial draw of static elements\n\n    // Draw the point for currentVolume (if provided) on top of the static chart\n    if (typeof currentVolume === 'number') {\n      const currentProfit = currentVolume * chart.profitPerUnit;\n      // Store it for potential redraw on hover end\n      chart.currentHoverData = {\n        volume: currentVolume,\n        profit: currentProfit,\n        isCurrentVolumePoint: true\n      };\n      drawTooltipAndPoint(currentVolume, currentProfit);\n    } else {\n      chart.currentHoverData = null;\n    }\n\n    // --- Mouse Move Handler for Tooltips (More Efficient) ---\n    const handleMouseMove = e => {\n      const rect = canvas.getBoundingClientRect();\n      const mouseX = e.clientX - rect.left;\n      const mouseY = e.clientY - rect.top;\n      const {\n        padding,\n        width,\n        height,\n        maxVolume,\n        profitPerUnit\n      } = chartInstanceRef.current;\n      if (mouseX >= padding.left && mouseX <= width - padding.right && mouseY >= padding.top && mouseY <= height - padding.bottom) {\n        const volume = Math.max(0, Math.min(maxVolume, Math.round((mouseX - padding.left) / (width - padding.left - padding.right) * maxVolume)));\n        const profit = volume * profitPerUnit;\n\n        // Redraw static parts, then the new hover point\n        drawStaticChart();\n        chartInstanceRef.current.currentHoverData = {\n          volume,\n          profit,\n          isCurrentVolumePoint: false\n        };\n        drawTooltipAndPoint(volume, profit);\n      } else {\n        // If mouse moves out, redraw static chart and the original currentVolume point if it exists\n        if (chartInstanceRef.current.currentHoverData && !chartInstanceRef.current.currentHoverData.isCurrentVolumePoint) {\n          drawStaticChart();\n          if (typeof currentVolume === 'number') {\n            const cvProfit = currentVolume * chartInstanceRef.current.profitPerUnit;\n            chartInstanceRef.current.currentHoverData = {\n              volume: currentVolume,\n              profit: cvProfit,\n              isCurrentVolumePoint: true\n            };\n            drawTooltipAndPoint(currentVolume, cvProfit);\n          } else {\n            chartInstanceRef.current.currentHoverData = null;\n          }\n        }\n      }\n    };\n    canvas.addEventListener('mousemove', handleMouseMove);\n    // Optional: Add a mouseleave listener to clear the hover tooltip and redraw the currentVolume point\n    const handleMouseLeave = () => {\n      drawStaticChart();\n      if (typeof currentVolume === 'number') {\n        const cvProfit = currentVolume * chartInstanceRef.current.profitPerUnit;\n        chartInstanceRef.current.currentHoverData = {\n          volume: currentVolume,\n          profit: cvProfit,\n          isCurrentVolumePoint: true\n        };\n        drawTooltipAndPoint(currentVolume, cvProfit);\n      } else {\n        chartInstanceRef.current.currentHoverData = null;\n      }\n    };\n    canvas.addEventListener('mouseleave', handleMouseLeave);\n\n    // Touch handler for mobile\n    const handleTouch = e => {\n      if (e.touches && e.touches[0]) {\n        const touch = e.touches[0];\n        const rect = canvas.getBoundingClientRect();\n        const touchX = touch.clientX - rect.left;\n        const touchY = touch.clientY - rect.top;\n        const {\n          padding,\n          width,\n          height,\n          maxVolume,\n          profitPerUnit\n        } = chartInstanceRef.current;\n        if (touchX >= padding.left && touchX <= width - padding.right && touchY >= padding.top && touchY <= height - padding.bottom) {\n          const volume = Math.max(0, Math.min(maxVolume, Math.round((touchX - padding.left) / (width - padding.left - padding.right) * maxVolume)));\n          const profit = volume * profitPerUnit;\n\n          // Redraw static parts, then the new touch point\n          drawStaticChart();\n          chartInstanceRef.current.currentHoverData = {\n            volume,\n            profit,\n            isCurrentVolumePoint: false\n          };\n          drawTooltipAndPoint(volume, profit);\n\n          // Prevent scrolling while interacting with the chart\n          e.preventDefault();\n        }\n      }\n    };\n    canvas.addEventListener('touchstart', handleTouch, {\n      passive: false\n    });\n    canvas.addEventListener('touchmove', handleTouch, {\n      passive: false\n    });\n\n    // Remove touch listeners on cleanup\n    return () => {\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('mouseleave', handleMouseLeave);\n      canvas.removeEventListener('touchstart', handleTouch);\n      canvas.removeEventListener('touchmove', handleTouch);\n    };\n  }, [salesPricePerUnit, costPerUnit, currentVolume, theme,\n  // theme.palette.cmyk.yellow is used\n  language, t,\n  // For localization in formatCurrency and titles\n  formatCurrency, calculateNiceStep, toCanvasX, toCanvasY,\n  // Memoized helpers\n  drawBackground, drawGridAndAxes, drawLabelsAndTitles, drawProfitLine, drawTooltipAndPoint,\n  // Memoized draw functions\n  isMobile // Added isMobile dependency\n  ]);\n\n  // Dynamic aspect ratio for mobile\n  const aspectRatio = isMobile ? '4 / 3' : '16 / 9';\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      height: 'auto',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        maxWidth: isMobile ? '100%' : '600px',\n        aspectRatio: aspectRatio,\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 600 /* Base width */,\n        height: isMobile ? 450 : 337.5 /* Adjusted height for mobile */,\n        style: {\n          display: 'block',\n          width: '100%',\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 452,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfitVolumeChart, \"uNtZGutAp3uHY2A6ZCDpVJwjCC0=\", false, function () {\n  return [useTheme, useMediaQuery, useLanguage];\n});\n_c = ProfitVolumeChart;\nexport default ProfitVolumeChart;\nvar _c;\n$RefreshReg$(_c, \"ProfitVolumeChart\");","map":{"version":3,"names":["React","useEffect","useRef","useCallback","Box","useMediaQuery","useTheme","useLanguage","jsxDEV","_jsxDEV","ProfitVolumeChart","salesPricePerUnit","costPerUnit","currentVolume","_s","_theme$palette$cmyk2","_theme$palette$cmyk4","theme","isMobile","breakpoints","down","t","language","canvasRef","chartInstanceRef","ctx","width","height","padding","left","right","top","bottom","maxVolume","niceMaxProfit","yStep","profitPerUnit","currentHoverData","current","chart","formatCurrency","amount","short","isNaN","currencySymbol","Math","abs","value","toFixed","round","toLocaleString","calculateNiceStep","maxValue","targetSteps","rawStep","magnitude","pow","floor","log10","mantissa","niceStep","max","toCanvasX","volume","toCanvasY","profit","effectiveMaxProfit","chartHeight","zeroY","niceMinProfit","totalYRange","drawBackground","fillStyle","fillRect","font","textAlign","textBaseline","chartTitle","fillText","drawGridAndAxes","beginPath","strokeStyle","lineWidth","xStep","i","x","moveTo","lineTo","y","stroke","drawLabelsAndTitles","yLabelStep","xLabelStep","toString","xAxisTitle","yAxisTitle","save","translate","rotate","PI","restore","drawProfitLine","_theme$palette$cmyk","palette","cmyk","yellow","drawTooltipAndPoint","_theme$palette$cmyk3","pointX","pointY","setLineDash","arc","fill","volumeLabel","profitLabel","tooltipText","textWidth","measureText","tooltipWidth","tooltipHeight","tooltipX","tooltipY","roundRect","canvas","context","getContext","clearRect","maxPossibleProfit","minPossibleProfit","ceil","drawStaticChart","currentProfit","isCurrentVolumePoint","handleMouseMove","e","rect","getBoundingClientRect","mouseX","clientX","mouseY","clientY","min","cvProfit","addEventListener","handleMouseLeave","handleTouch","touches","touch","touchX","touchY","preventDefault","passive","removeEventListener","aspectRatio","sx","display","flexDirection","alignItems","children","maxWidth","mb","ref","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nicholasgobert/Desktop/Apps/MOSimulator/src/features/visualization/charts/ProfitVolumeChart.js"],"sourcesContent":["import React, { useEffect, useRef, useCallback } from 'react';\nimport { Box, useMediaQuery } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { useLanguage } from '../../../context/LanguageContext';\n\nconst ProfitVolumeChart = ({ salesPricePerUnit, costPerUnit, currentVolume }) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const { t, language } = useLanguage();\n  const canvasRef = useRef(null);\n  const chartInstanceRef = useRef({ \n    ctx: null, \n    width: 0, \n    height: 0, \n    // Adjusted padding for mobile view\n    padding: { \n      left: 0, \n      right: 0, \n      top: 0, \n      bottom: 0 \n    }, \n    maxVolume: 1000,\n    niceMaxProfit: 0,\n    yStep: 0,\n    profitPerUnit: 0,\n    currentHoverData: null // To store data for the current hover position\n  });\n\n  const profitPerUnit = salesPricePerUnit - costPerUnit;\n  chartInstanceRef.current.profitPerUnit = profitPerUnit; // Store for use in draw functions\n\n  // Update padding based on screen size\n  useEffect(() => {\n    const chart = chartInstanceRef.current;\n    if (isMobile) {\n      chart.padding = { left: 70, right: 20, top: 50, bottom: 65 };\n    } else {\n      chart.padding = { left: 100, right: 30, top: 60, bottom: 70 };\n    }\n  }, [isMobile]);\n\n  const formatCurrency = useCallback((amount, short = false) => {\n    if (typeof amount !== 'number' || isNaN(amount)) return 'N/A';\n    const currencySymbol = t('currency');\n    \n    if (short) {\n      if (Math.abs(amount) >= 1000000) {\n        const value = (amount / 1000000).toFixed(1);\n        return language === 'ja' ? `${value}百万${currencySymbol}` : `${currencySymbol} ${value}M`;\n      } else if (Math.abs(amount) >= 1000) {\n        const value = (amount / 1000).toFixed(0); // No decimal for K to avoid clutter\n        return language === 'ja' ? `${value}千${currencySymbol}` : `${currencySymbol} ${value}K`;\n      }\n      return language === 'ja' ? `${Math.round(amount)}${currencySymbol}` : `${currencySymbol} ${Math.round(amount)}`;\n    }\n    return language === 'ja' ? `${Math.round(amount).toLocaleString('ja-JP')}${currencySymbol}` : `${currencySymbol} ${Math.round(amount).toLocaleString('en-US')}`;\n  }, [t, language]);\n\n  const calculateNiceStep = (maxValue, targetSteps = 5) => {\n    if (maxValue <= 0) return 10000; // Default step if no profit or negative\n    const rawStep = maxValue / targetSteps;\n    const magnitude = Math.pow(10, Math.floor(Math.log10(rawStep)));\n    const mantissa = rawStep / magnitude;\n    let niceStep;\n    if (mantissa < 1.5) niceStep = 1;\n    else if (mantissa < 3) niceStep = 2;\n    else if (mantissa < 7) niceStep = 5;\n    else niceStep = 10;\n    return Math.max(1, niceStep * magnitude); // Ensure step is at least 1\n  };\n\n  const toCanvasX = useCallback((volume) => {\n    const chart = chartInstanceRef.current;\n    return chart.padding.left + (volume / chart.maxVolume) * (chart.width - chart.padding.left - chart.padding.right);\n  }, []);\n\n  const toCanvasY = useCallback((profit) => {\n    const chart = chartInstanceRef.current;\n    // Handle case where niceMaxProfit might be 0 or negative\n    const effectiveMaxProfit = chart.niceMaxProfit <= 0 ? 1 : chart.niceMaxProfit;\n    const chartHeight = chart.height - chart.padding.top - chart.padding.bottom;\n    // Adjust for Y-axis starting at 0 or a negative value\n    const zeroY = chart.niceMinProfit >= 0 ? 0 : chart.niceMinProfit;\n    const totalYRange = effectiveMaxProfit - zeroY;\n    if (totalYRange <= 0) return chart.height - chart.padding.bottom; // Avoid division by zero\n\n    return chart.height - chart.padding.bottom - ((profit - zeroY) / totalYRange) * chartHeight;\n  }, []);\n\n\n  // --- Drawing Functions ---\n  const drawBackground = useCallback(() => {\n    const chart = chartInstanceRef.current;\n    const { ctx, width, height } = chart;\n    ctx.fillStyle = '#f7f9f7'; // Very light green/grayish background\n    ctx.fillRect(0, 0, width, height);\n    \n    // Draw chart title at the top\n    ctx.font = `bold ${isMobile ? '12px' : '14px'} sans-serif`;\n    ctx.fillStyle = '#333333';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'top';\n    const chartTitle = language === 'ja' ? '利益と販売量の関係' : 'Profit vs. Sales Volume';\n    ctx.fillText(chartTitle, width / 2, isMobile ? 10 : 20);\n  }, [language, isMobile]);\n\n  const drawGridAndAxes = useCallback(() => {\n    const chart = chartInstanceRef.current;\n    const { ctx, width, height, padding, niceMaxProfit, niceMinProfit, yStep, maxVolume } = chart;\n    const chartHeight = height - padding.top - padding.bottom;\n\n    ctx.beginPath();\n    ctx.strokeStyle = '#e0e0e0';\n    ctx.lineWidth = 1;\n\n    // Vertical grid lines (reduce frequency on mobile)\n    const xStep = isMobile ? 200 : 100;\n    for (let i = 0; i <= maxVolume; i += xStep) {\n      const x = toCanvasX(i);\n      ctx.moveTo(x, padding.top);\n      ctx.lineTo(x, height - padding.bottom);\n    }\n\n    // Horizontal grid lines\n    for (let i = niceMinProfit; i <= niceMaxProfit; i += yStep) {\n      // Ensure we don't draw too many lines if yStep is very small relative to range\n      if ((niceMaxProfit - niceMinProfit) / yStep > 20 && i !== 0 && i !== niceMinProfit && i !== niceMaxProfit) {\n          if (i % (yStep * 2) !== 0 && i !== 0) continue; // Skip some lines if too dense\n      }\n      const y = toCanvasY(i);\n      ctx.moveTo(padding.left, y);\n      ctx.lineTo(width - padding.right, y);\n    }\n    ctx.stroke();\n\n    // Draw axes\n    ctx.beginPath();\n    ctx.strokeStyle = '#aaaaaa';\n    ctx.lineWidth = 1.5;\n    ctx.moveTo(padding.left, height - padding.bottom); // X-axis\n    ctx.lineTo(width - padding.right, height - padding.bottom);\n    ctx.moveTo(padding.left, padding.top); // Y-axis\n    ctx.lineTo(padding.left, height - padding.bottom);\n    ctx.stroke();\n  }, [toCanvasX, toCanvasY, isMobile]);\n\n  const drawLabelsAndTitles = useCallback(() => {\n    const chart = chartInstanceRef.current;\n    const { ctx, width, height, padding, niceMaxProfit, niceMinProfit, yStep, maxVolume } = chart;\n\n    // Y-axis labels\n    ctx.textAlign = 'right';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = '#555555'; // Darker for better readability\n    ctx.font = `${isMobile ? '10px' : '11px'} sans-serif`;\n\n    // Use fewer labels on mobile\n    const yLabelStep = isMobile ? yStep * 2 : yStep;\n    \n    for (let i = niceMinProfit; i <= niceMaxProfit; i += yLabelStep) {\n       if ((niceMaxProfit - niceMinProfit) / yLabelStep > 20 && i !== 0 && i !== niceMinProfit && i !== niceMaxProfit) {\n          if (i % (yLabelStep * 2) !== 0 && i !== 0) continue;\n      }\n      const y = toCanvasY(i);\n      ctx.fillText(formatCurrency(i, true), padding.left - 10, y);\n    }\n\n    // X-axis labels - fewer labels on mobile\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'top';\n    const xLabelStep = isMobile ? (maxVolume >= 500 ? 200 : 100) : (maxVolume >= 500 ? 100 : 50);\n    \n    for (let i = 0; i <= maxVolume; i += xLabelStep) {\n      const x = toCanvasX(i);\n      ctx.fillText(i.toString(), x, height - padding.bottom + 8);\n    }\n\n    // Axis titles\n    ctx.font = `bold ${isMobile ? '10px' : '12px'} sans-serif`;\n    ctx.fillStyle = '#333333';\n    ctx.textAlign = 'center';\n    \n    // X-axis title - Use default text if translation key fails\n    const xAxisTitle = language === 'ja' ? '月間販売量 (個)' : 'Monthly Sales Volume (units)';\n    ctx.fillText(xAxisTitle, \n                 padding.left + (width - padding.left - padding.right) / 2, \n                 height - padding.bottom + (isMobile ? 22 : 30));\n\n    // Y-axis title - Use default text if translation key fails\n    const yAxisTitle = language === 'ja' ? '月間利益 (円)' : 'Monthly Profit (JPY)';\n    ctx.save();\n    // Moved position further left to avoid overlap with Y-axis labels\n    // Position at 15 pixels from the left edge of the canvas\n    ctx.translate(isMobile ? 10 : 15, padding.top + (height - padding.top - padding.bottom) / 2);\n    ctx.rotate(-Math.PI / 2);\n    ctx.textAlign = 'center';\n    ctx.fillText(yAxisTitle, 0, 0);\n    ctx.restore();\n  }, [toCanvasX, toCanvasY, formatCurrency, language, isMobile]);\n\n  const drawProfitLine = useCallback(() => {\n    const chart = chartInstanceRef.current;\n    const { ctx, profitPerUnit, maxVolume } = chart;\n\n    ctx.beginPath();\n    // Use theme color, ensure theme.palette.cmyk.yellow is defined\n    ctx.strokeStyle = theme.palette.cmyk?.yellow || '#FFD700'; \n    ctx.lineWidth = 2.5;\n    \n    ctx.moveTo(toCanvasX(0), toCanvasY(0)); // Start at 0,0\n    for (let volume = 0; volume <= maxVolume; volume += 10) { // Plot points for the line\n      const profit = volume * profitPerUnit;\n      ctx.lineTo(toCanvasX(volume), toCanvasY(profit));\n    }\n    ctx.stroke();\n  }, [toCanvasX, toCanvasY, theme.palette.cmyk?.yellow]);\n\n  const drawTooltipAndPoint = useCallback((volume, profit) => {\n    const chart = chartInstanceRef.current;\n    const { ctx, height, padding, profitPerUnit } = chart;\n    if (!ctx) return;\n\n    const pointX = toCanvasX(volume);\n    const pointY = toCanvasY(profit);\n\n    // Dashed line\n    ctx.beginPath();\n    ctx.strokeStyle = '#888888';\n    ctx.setLineDash([3, 3]);\n    ctx.lineWidth = 1;\n    ctx.moveTo(pointX, height - padding.bottom);\n    ctx.lineTo(pointX, pointY);\n    ctx.moveTo(padding.left, pointY);\n    ctx.lineTo(pointX, pointY);\n    ctx.stroke();\n    ctx.setLineDash([]);\n\n    // Point\n    ctx.beginPath();\n    ctx.arc(pointX, pointY, isMobile ? 4 : 5, 0, Math.PI * 2);\n    ctx.fillStyle = theme.palette.cmyk?.yellow || '#FFD700';\n    ctx.fill();\n    ctx.strokeStyle = '#555555';\n    ctx.lineWidth = 1.5;\n    ctx.stroke();\n\n    // Tooltip - simplified for mobile\n    const volumeLabel = language === 'ja' ? '販売量' : 'Volume';\n    const profitLabel = language === 'ja' ? '利益' : 'Profit';\n    const tooltipText = `${volumeLabel}: ${volume}, ${profitLabel}: ${formatCurrency(profit)}`;\n\n    // Smaller font on mobile\n    ctx.font = `bold ${isMobile ? '10px' : '11px'} sans-serif`;\n    const textWidth = ctx.measureText(tooltipText).width;\n    const tooltipWidth = Math.max(textWidth) + 20;\n    const tooltipHeight = isMobile ? 24 : 30; // Smaller height on mobile\n    \n    let tooltipX = pointX + 15;\n    let tooltipY = pointY - 15 - tooltipHeight;\n\n    // Adjust tooltip position to stay within canvas\n    if (tooltipX + tooltipWidth > chart.width - chart.padding.right) {\n      tooltipX = pointX - 15 - tooltipWidth;\n    }\n    if (tooltipY < chart.padding.top) {\n      tooltipY = pointY + 15;\n    }\n\n    // If tooltip still goes out of bounds on mobile, position it at the top right corner\n    if (isMobile && (tooltipX < 0 || tooltipX + tooltipWidth > chart.width || tooltipY < 0 || tooltipY + tooltipHeight > chart.height)) {\n      tooltipX = chart.width - tooltipWidth - 10; \n      tooltipY = chart.padding.top + 10;\n    }\n\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.9)';\n    ctx.strokeStyle = 'rgba(100, 100, 100, 0.7)';\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.roundRect(tooltipX, tooltipY, tooltipWidth, tooltipHeight, 5); // Using roundRect\n    ctx.fill();\n    ctx.stroke();\n    \n    ctx.fillStyle = '#333333';\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    ctx.fillText(tooltipText, tooltipX + 10, tooltipY + tooltipHeight / 2);\n\n  }, [toCanvasX, toCanvasY, formatCurrency, theme.palette.cmyk?.yellow, language, isMobile]);\n\n\n  // Main drawing effect\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || typeof salesPricePerUnit !== 'number' || typeof costPerUnit !== 'number') {\n      // Clear canvas if data is invalid or not present\n      if(canvas) {\n        const context = canvas.getContext('2d');\n        context.clearRect(0, 0, canvas.width, canvas.height);\n      }\n      return;\n    }\n    \n    const chart = chartInstanceRef.current;\n    chart.ctx = canvas.getContext('2d');\n    chart.width = canvas.width;\n    chart.height = canvas.height;\n    chart.profitPerUnit = salesPricePerUnit - costPerUnit;\n\n    // Calculate Y-axis scale\n    const maxPossibleProfit = chart.maxVolume * chart.profitPerUnit;\n    const minPossibleProfit = 0 * chart.profitPerUnit; // Could be negative if profitPerUnit is negative\n\n    if (chart.profitPerUnit > 0) {\n        chart.niceMinProfit = 0;\n        chart.niceMaxProfit = Math.ceil((maxPossibleProfit * 1.1) / calculateNiceStep(maxPossibleProfit * 1.1)) * calculateNiceStep(maxPossibleProfit * 1.1);\n        if (chart.niceMaxProfit <=0) chart.niceMaxProfit = calculateNiceStep(100000); // Default if profit is tiny\n    } else { // Handles zero or negative profit per unit\n        chart.niceMaxProfit = calculateNiceStep(100000); // A small positive default max\n        chart.niceMinProfit = Math.floor((minPossibleProfit * 1.1) / calculateNiceStep(Math.abs(minPossibleProfit * 1.1))) * calculateNiceStep(Math.abs(minPossibleProfit * 1.1));\n        if (chart.niceMinProfit >=0 && minPossibleProfit < 0) chart.niceMinProfit = -calculateNiceStep(100000); // Default negative if profit is tiny negative\n        if (chart.profitPerUnit === 0) chart.niceMinProfit = 0;\n    }\n    // Ensure niceMaxProfit is always greater than niceMinProfit\n    if (chart.niceMaxProfit <= chart.niceMinProfit) {\n        chart.niceMaxProfit = chart.niceMinProfit + calculateNiceStep(Math.abs(chart.niceMinProfit) || 100000);\n    }\n\n    chart.yStep = calculateNiceStep(chart.niceMaxProfit - chart.niceMinProfit, isMobile ? 3 : 5);\n    if (chart.yStep === 0) chart.yStep = (chart.niceMaxProfit - chart.niceMinProfit) / (isMobile ? 3 : 5) || 1;\n\n\n    // --- Main Draw Function (Static Elements) ---\n    const drawStaticChart = () => {\n        chart.ctx.clearRect(0, 0, chart.width, chart.height);\n        drawBackground();\n        drawGridAndAxes();\n        drawLabelsAndTitles();\n        drawProfitLine();\n    };\n\n    drawStaticChart(); // Initial draw of static elements\n\n    // Draw the point for currentVolume (if provided) on top of the static chart\n    if (typeof currentVolume === 'number') {\n        const currentProfit = currentVolume * chart.profitPerUnit;\n        // Store it for potential redraw on hover end\n        chart.currentHoverData = { volume: currentVolume, profit: currentProfit, isCurrentVolumePoint: true };\n        drawTooltipAndPoint(currentVolume, currentProfit);\n    } else {\n        chart.currentHoverData = null;\n    }\n\n    // --- Mouse Move Handler for Tooltips (More Efficient) ---\n    const handleMouseMove = (e) => {\n      const rect = canvas.getBoundingClientRect();\n      const mouseX = e.clientX - rect.left;\n      const mouseY = e.clientY - rect.top;\n      const { padding, width, height, maxVolume, profitPerUnit } = chartInstanceRef.current;\n\n      if (mouseX >= padding.left && mouseX <= width - padding.right &&\n          mouseY >= padding.top && mouseY <= height - padding.bottom) {\n        \n        const volume = Math.max(0, Math.min(maxVolume, Math.round(((mouseX - padding.left) / (width - padding.left - padding.right)) * maxVolume)));\n        const profit = volume * profitPerUnit;\n\n        // Redraw static parts, then the new hover point\n        drawStaticChart(); \n        chartInstanceRef.current.currentHoverData = { volume, profit, isCurrentVolumePoint: false };\n        drawTooltipAndPoint(volume, profit);\n\n      } else {\n        // If mouse moves out, redraw static chart and the original currentVolume point if it exists\n        if (chartInstanceRef.current.currentHoverData && !chartInstanceRef.current.currentHoverData.isCurrentVolumePoint) {\n            drawStaticChart();\n            if (typeof currentVolume === 'number') {\n                const cvProfit = currentVolume * chartInstanceRef.current.profitPerUnit;\n                chartInstanceRef.current.currentHoverData = { volume: currentVolume, profit: cvProfit, isCurrentVolumePoint: true };\n                drawTooltipAndPoint(currentVolume, cvProfit);\n            } else {\n                chartInstanceRef.current.currentHoverData = null;\n            }\n        }\n      }\n    };\n\n    canvas.addEventListener('mousemove', handleMouseMove);\n    // Optional: Add a mouseleave listener to clear the hover tooltip and redraw the currentVolume point\n    const handleMouseLeave = () => {\n        drawStaticChart();\n        if (typeof currentVolume === 'number') {\n            const cvProfit = currentVolume * chartInstanceRef.current.profitPerUnit;\n            chartInstanceRef.current.currentHoverData = { volume: currentVolume, profit: cvProfit, isCurrentVolumePoint: true };\n            drawTooltipAndPoint(currentVolume, cvProfit);\n        } else {\n            chartInstanceRef.current.currentHoverData = null;\n        }\n    };\n    canvas.addEventListener('mouseleave', handleMouseLeave);\n\n    // Touch handler for mobile\n    const handleTouch = (e) => {\n      if (e.touches && e.touches[0]) {\n        const touch = e.touches[0];\n        const rect = canvas.getBoundingClientRect();\n        const touchX = touch.clientX - rect.left;\n        const touchY = touch.clientY - rect.top;\n        const { padding, width, height, maxVolume, profitPerUnit } = chartInstanceRef.current;\n\n        if (touchX >= padding.left && touchX <= width - padding.right &&\n            touchY >= padding.top && touchY <= height - padding.bottom) {\n          \n          const volume = Math.max(0, Math.min(maxVolume, Math.round(((touchX - padding.left) / (width - padding.left - padding.right)) * maxVolume)));\n          const profit = volume * profitPerUnit;\n\n          // Redraw static parts, then the new touch point\n          drawStaticChart();\n          chartInstanceRef.current.currentHoverData = { volume, profit, isCurrentVolumePoint: false };\n          drawTooltipAndPoint(volume, profit);\n          \n          // Prevent scrolling while interacting with the chart\n          e.preventDefault();\n        }\n      }\n    };\n\n    canvas.addEventListener('touchstart', handleTouch, { passive: false });\n    canvas.addEventListener('touchmove', handleTouch, { passive: false });\n\n    // Remove touch listeners on cleanup\n    return () => {\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('mouseleave', handleMouseLeave);\n      canvas.removeEventListener('touchstart', handleTouch);\n      canvas.removeEventListener('touchmove', handleTouch);\n    };\n\n  }, [\n    salesPricePerUnit, \n    costPerUnit, \n    currentVolume, \n    theme, // theme.palette.cmyk.yellow is used\n    language, t, // For localization in formatCurrency and titles\n    formatCurrency, calculateNiceStep, toCanvasX, toCanvasY, // Memoized helpers\n    drawBackground, drawGridAndAxes, drawLabelsAndTitles, drawProfitLine, drawTooltipAndPoint, // Memoized draw functions\n    isMobile // Added isMobile dependency\n  ]);\n  \n  // Dynamic aspect ratio for mobile\n  const aspectRatio = isMobile ? '4 / 3' : '16 / 9';\n  \n  return (\n    <Box sx={{ width: '100%', height: 'auto', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      <Box sx={{ \n        width: '100%', \n        maxWidth: isMobile ? '100%' : '600px', \n        aspectRatio: aspectRatio, \n        mb: 2 \n      }}> \n        <canvas \n            ref={canvasRef} \n            width={600}  /* Base width */\n            height={isMobile ? 450 : 337.5} /* Adjusted height for mobile */\n            style={{ display: 'block', width: '100%', height: '100%'}} \n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default ProfitVolumeChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}