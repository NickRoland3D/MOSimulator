{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback, useEffect } from 'react';\nimport { useLanguage } from '../context/LanguageContext';\nimport { calculateResults } from '../services/calculationService';\nimport { formatCurrency, formatPercent, formatNumber } from '../utils/formatters';\nimport { validateAllInputs, areAllInputsValid } from '../utils/validation';\n\n/**\n * Custom hook for managing simulation state and calculations\n * Handles inputs, results, validation, and formatting\n * \n * @param {Object} initialInputs - Initial input values for the simulation\n * @returns {Object} - State and methods for simulation management\n */\nconst useSimulation = initialInputs => {\n  _s();\n  // State management for inputs, results, and validation\n  const [inputs, setInputs] = useState(initialInputs);\n  const [results, setResults] = useState(null);\n  const [isValid, setIsValid] = useState(true);\n  const [isCalculating, setIsCalculating] = useState(false);\n  const {\n    language,\n    t\n  } = useLanguage();\n\n  // Initialize results on mount\n  useEffect(() => {\n    try {\n      const initialResults = calculateResults(initialInputs);\n      setResults(initialResults);\n\n      // Validate initial inputs\n      const validationResults = validateAllInputs(initialInputs);\n      setIsValid(areAllInputsValid(validationResults));\n    } catch (error) {\n      console.error('Error initializing simulation:', error);\n      setResults(null);\n      setIsValid(false);\n    }\n  }, [initialInputs]);\n\n  // Handle input changes with debouncing for performance\n  const handleInputChange = useCallback((name, value) => {\n    setInputs(prevInputs => {\n      const newInputs = {\n        ...prevInputs,\n        [name]: value\n      };\n\n      // Validate inputs\n      const validationResults = validateAllInputs(newInputs);\n      const valid = areAllInputsValid(validationResults);\n      setIsValid(valid);\n\n      // Update results if inputs are valid\n      if (valid) {\n        setIsCalculating(true);\n\n        // Use setTimeout to prevent UI blocking during calculation\n        setTimeout(() => {\n          try {\n            const newResults = calculateResults(newInputs);\n            setResults(newResults);\n          } catch (error) {\n            console.error('Error calculating results:', error);\n          } finally {\n            setIsCalculating(false);\n          }\n        }, 0);\n      }\n      return newInputs;\n    });\n  }, []);\n\n  // Formatted output helpers using utility functions\n  const formatCurrencyValue = useCallback(amount => {\n    return formatCurrency(amount, language, t('currency'));\n  }, [language, t]);\n  const formatPercentValue = useCallback(value => {\n    return formatPercent(value);\n  }, []);\n  const formatNumberValue = useCallback((value, decimals = 0) => {\n    return formatNumber(value, decimals, language);\n  }, [language]);\n\n  // Reset simulation to default values\n  const resetSimulation = useCallback(() => {\n    setInputs(initialInputs);\n    try {\n      const initialResults = calculateResults(initialInputs);\n      setResults(initialResults);\n      setIsValid(true);\n    } catch (error) {\n      console.error('Error resetting simulation:', error);\n      setResults(null);\n      setIsValid(false);\n    }\n  }, [initialInputs]);\n\n  // Return state and methods\n  return {\n    inputs,\n    results,\n    isValid,\n    isCalculating,\n    handleInputChange,\n    formatCurrencyValue,\n    formatPercentValue,\n    formatNumberValue,\n    resetSimulation\n  };\n};\n_s(useSimulation, \"KbIN8cspxbfJKwkd0TF9AeOE4Xk=\", false, function () {\n  return [useLanguage];\n});\nexport default useSimulation;","map":{"version":3,"names":["useState","useCallback","useEffect","useLanguage","calculateResults","formatCurrency","formatPercent","formatNumber","validateAllInputs","areAllInputsValid","useSimulation","initialInputs","_s","inputs","setInputs","results","setResults","isValid","setIsValid","isCalculating","setIsCalculating","language","t","initialResults","validationResults","error","console","handleInputChange","name","value","prevInputs","newInputs","valid","setTimeout","newResults","formatCurrencyValue","amount","formatPercentValue","formatNumberValue","decimals","resetSimulation"],"sources":["/Users/nicholasgobert/Desktop/Apps/MOSimulator/src/hooks/useSimulation.js"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport { useLanguage } from '../context/LanguageContext';\nimport { calculateResults } from '../services/calculationService';\nimport { formatCurrency, formatPercent, formatNumber } from '../utils/formatters';\nimport { validateAllInputs, areAllInputsValid } from '../utils/validation';\n\n/**\n * Custom hook for managing simulation state and calculations\n * Handles inputs, results, validation, and formatting\n * \n * @param {Object} initialInputs - Initial input values for the simulation\n * @returns {Object} - State and methods for simulation management\n */\nconst useSimulation = (initialInputs) => {\n  // State management for inputs, results, and validation\n  const [inputs, setInputs] = useState(initialInputs);\n  const [results, setResults] = useState(null);\n  const [isValid, setIsValid] = useState(true);\n  const [isCalculating, setIsCalculating] = useState(false);\n  const { language, t } = useLanguage();\n\n  // Initialize results on mount\n  useEffect(() => {\n    try {\n      const initialResults = calculateResults(initialInputs);\n      setResults(initialResults);\n      \n      // Validate initial inputs\n      const validationResults = validateAllInputs(initialInputs);\n      setIsValid(areAllInputsValid(validationResults));\n    } catch (error) {\n      console.error('Error initializing simulation:', error);\n      setResults(null);\n      setIsValid(false);\n    }\n  }, [initialInputs]);\n\n  // Handle input changes with debouncing for performance\n  const handleInputChange = useCallback((name, value) => {\n    setInputs(prevInputs => {\n      const newInputs = { ...prevInputs, [name]: value };\n      \n      // Validate inputs\n      const validationResults = validateAllInputs(newInputs);\n      const valid = areAllInputsValid(validationResults);\n      setIsValid(valid);\n      \n      // Update results if inputs are valid\n      if (valid) {\n        setIsCalculating(true);\n        \n        // Use setTimeout to prevent UI blocking during calculation\n        setTimeout(() => {\n          try {\n            const newResults = calculateResults(newInputs);\n            setResults(newResults);\n          } catch (error) {\n            console.error('Error calculating results:', error);\n          } finally {\n            setIsCalculating(false);\n          }\n        }, 0);\n      }\n      \n      return newInputs;\n    });\n  }, []);\n\n  // Formatted output helpers using utility functions\n  const formatCurrencyValue = useCallback((amount) => {\n    return formatCurrency(amount, language, t('currency'));\n  }, [language, t]);\n\n  const formatPercentValue = useCallback((value) => {\n    return formatPercent(value);\n  }, []);\n\n  const formatNumberValue = useCallback((value, decimals = 0) => {\n    return formatNumber(value, decimals, language);\n  }, [language]);\n\n  // Reset simulation to default values\n  const resetSimulation = useCallback(() => {\n    setInputs(initialInputs);\n    \n    try {\n      const initialResults = calculateResults(initialInputs);\n      setResults(initialResults);\n      setIsValid(true);\n    } catch (error) {\n      console.error('Error resetting simulation:', error);\n      setResults(null);\n      setIsValid(false);\n    }\n  }, [initialInputs]);\n\n  // Return state and methods\n  return {\n    inputs,\n    results,\n    isValid,\n    isCalculating,\n    handleInputChange,\n    formatCurrencyValue,\n    formatPercentValue,\n    formatNumberValue,\n    resetSimulation\n  };\n};\n\nexport default useSimulation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}