{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasgobert/Desktop/Apps/MO180SalesSimulator/src/components/Charts/PaybackGauge.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\n/**\n * PaybackGauge Component\n * Minimal design with simplified lines and improved aesthetics\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaybackGauge = ({\n  paybackPeriod\n}) => {\n  _s();\n  const theme = useTheme();\n  const canvasRef = useRef(null);\n\n  // Handle \"no profit\" case\n  const noProfitCase = paybackPeriod === '-';\n\n  // Define colors for the gauge segments - using more subtle colors to match the overall aesthetic\n  const colors = {\n    low: '#c5389e',\n    // Magenta for 0-25 months\n    medium: '#f7b463',\n    // Orange for 25-50 months\n    high: '#1c796a',\n    // Teal for 50-75 months\n    noProfit: '#cccccc' // Gray for no profit\n  };\n\n  // Get the value color (magenta to match the reference)\n  const getValueColor = () => {\n    if (noProfitCase) return '#999999';\n    return colors.low; // Always use magenta for the value display\n  };\n\n  // Draw the gauge using canvas\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    const width = canvas.width;\n    const height = canvas.height;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n\n    // Center of the gauge\n    const centerX = width / 2;\n    const centerY = height - 30; // Position the center lower to match reference\n\n    // Gauge radius\n    const radius = Math.min(centerX, centerY) * 0.85;\n\n    // Gauge angles\n    const startAngle = Math.PI; // 180 degrees (left)\n    const endAngle = 2 * Math.PI; // 360 degrees (right)\n    const totalAngle = endAngle - startAngle;\n\n    // Gauge thickness\n    const thickness = radius * 0.12;\n\n    // Draw the gauge background (3 colored segments)\n    const drawGaugeSegment = (startPercent, endPercent, color) => {\n      const segmentStartAngle = startAngle + startPercent * totalAngle;\n      const segmentEndAngle = startAngle + endPercent * totalAngle;\n      ctx.beginPath();\n      ctx.arc(centerX, centerY, radius, segmentStartAngle, segmentEndAngle);\n      ctx.arc(centerX, centerY, radius - thickness, segmentEndAngle, segmentStartAngle, true);\n      ctx.closePath();\n      ctx.fillStyle = color;\n      ctx.fill();\n    };\n\n    // Draw three colored segments\n    drawGaugeSegment(0, 1 / 3, colors.low); // Magenta (0-25 months)\n    drawGaugeSegment(1 / 3, 2 / 3, colors.medium); // Orange (25-50 months)\n    drawGaugeSegment(2 / 3, 1, colors.high); // Teal (50-75 months)\n\n    // Draw only essential tick marks and labels (15, 30, 45, 60)\n    ctx.strokeStyle = '#cccccc';\n    ctx.fillStyle = '#999999';\n    ctx.font = '11px Arial';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    // Only draw major ticks at 15, 30, 45, 60\n    const majorTicks = [0, 15, 30, 45, 60, 75];\n    for (let i of majorTicks) {\n      const percent = i / 75;\n      const angle = startAngle + percent * totalAngle;\n\n      // Calculate tick positions\n      const innerX = centerX + (radius - thickness / 2) * Math.cos(angle);\n      const innerY = centerY + (radius - thickness / 2) * Math.sin(angle);\n\n      // Draw label\n      const labelX = centerX + (radius + 20) * Math.cos(angle);\n      const labelY = centerY + (radius + 20) * Math.sin(angle);\n      ctx.fillText(i.toString(), labelX, labelY);\n    }\n\n    // Calculate needle position based on payback period\n    let needleValue = noProfitCase ? 75 : Math.min(paybackPeriod, 75);\n    const needlePercent = needleValue / 75;\n    const needleAngle = startAngle + needlePercent * totalAngle;\n\n    // Draw simplified needle\n    const needleLength = radius * 0.85;\n    ctx.beginPath();\n    ctx.moveTo(centerX, centerY);\n    ctx.lineTo(centerX + needleLength * Math.cos(needleAngle), centerY + needleLength * Math.sin(needleAngle));\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = '#000000';\n    ctx.stroke();\n\n    // Draw center pivot (white circle)\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, 8, 0, Math.PI * 2);\n    ctx.fillStyle = '#ffffff';\n    ctx.strokeStyle = '#cccccc';\n    ctx.lineWidth = 1;\n    ctx.fill();\n    ctx.stroke();\n  }, [paybackPeriod, noProfitCase, colors]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Investment Payback Period\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'relative',\n        width: '100%',\n        height: '200px',\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 400,\n        height: 250,\n        style: {\n          maxWidth: '100%',\n          maxHeight: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        align: \"center\",\n        sx: {\n          position: 'absolute',\n          bottom: '0',\n          left: '50%',\n          transform: 'translateX(-50%)',\n          fontWeight: 'bold',\n          color: getValueColor(),\n          fontSize: '3.5rem'\n        },\n        children: noProfitCase ? '-' : Math.round(paybackPeriod)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      align: \"center\",\n      sx: {\n        mt: 2\n      },\n      children: noProfitCase ? 'No profit with current parameters' : paybackPeriod <= 25 ? 'Excellent payback period' : paybackPeriod <= 50 ? 'Good payback period' : 'Extended payback period'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(PaybackGauge, \"kdrREFZ0jLaicLxmNBI1E0NiK+c=\", false, function () {\n  return [useTheme];\n});\n_c = PaybackGauge;\nexport default PaybackGauge;\nvar _c;\n$RefreshReg$(_c, \"PaybackGauge\");","map":{"version":3,"names":["React","useEffect","useRef","Box","Typography","useTheme","jsxDEV","_jsxDEV","PaybackGauge","paybackPeriod","_s","theme","canvasRef","noProfitCase","colors","low","medium","high","noProfit","getValueColor","canvas","current","ctx","getContext","width","height","clearRect","centerX","centerY","radius","Math","min","startAngle","PI","endAngle","totalAngle","thickness","drawGaugeSegment","startPercent","endPercent","color","segmentStartAngle","segmentEndAngle","beginPath","arc","closePath","fillStyle","fill","strokeStyle","font","textAlign","textBaseline","majorTicks","i","percent","angle","innerX","cos","innerY","sin","labelX","labelY","fillText","toString","needleValue","needlePercent","needleAngle","needleLength","moveTo","lineTo","lineWidth","stroke","sx","display","flexDirection","alignItems","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","position","mt","ref","style","maxWidth","maxHeight","bottom","left","transform","fontWeight","fontSize","round","_c","$RefreshReg$"],"sources":["/Users/nicholasgobert/Desktop/Apps/MO180SalesSimulator/src/components/Charts/PaybackGauge.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\n/**\n * PaybackGauge Component\n * Minimal design with simplified lines and improved aesthetics\n */\nconst PaybackGauge = ({ paybackPeriod }) => {\n  const theme = useTheme();\n  const canvasRef = useRef(null);\n  \n  // Handle \"no profit\" case\n  const noProfitCase = paybackPeriod === '-';\n  \n  // Define colors for the gauge segments - using more subtle colors to match the overall aesthetic\n  const colors = {\n    low: '#c5389e',      // Magenta for 0-25 months\n    medium: '#f7b463',   // Orange for 25-50 months\n    high: '#1c796a',     // Teal for 50-75 months\n    noProfit: '#cccccc'  // Gray for no profit\n  };\n  \n  // Get the value color (magenta to match the reference)\n  const getValueColor = () => {\n    if (noProfitCase) return '#999999';\n    return colors.low; // Always use magenta for the value display\n  };\n  \n  // Draw the gauge using canvas\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const ctx = canvas.getContext('2d');\n    const width = canvas.width;\n    const height = canvas.height;\n    \n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n    \n    // Center of the gauge\n    const centerX = width / 2;\n    const centerY = height - 30; // Position the center lower to match reference\n    \n    // Gauge radius\n    const radius = Math.min(centerX, centerY) * 0.85;\n    \n    // Gauge angles\n    const startAngle = Math.PI;        // 180 degrees (left)\n    const endAngle = 2 * Math.PI;      // 360 degrees (right)\n    const totalAngle = endAngle - startAngle;\n    \n    // Gauge thickness\n    const thickness = radius * 0.12;\n    \n    // Draw the gauge background (3 colored segments)\n    const drawGaugeSegment = (startPercent, endPercent, color) => {\n      const segmentStartAngle = startAngle + (startPercent * totalAngle);\n      const segmentEndAngle = startAngle + (endPercent * totalAngle);\n      \n      ctx.beginPath();\n      ctx.arc(centerX, centerY, radius, segmentStartAngle, segmentEndAngle);\n      ctx.arc(centerX, centerY, radius - thickness, segmentEndAngle, segmentStartAngle, true);\n      ctx.closePath();\n      ctx.fillStyle = color;\n      ctx.fill();\n    };\n    \n    // Draw three colored segments\n    drawGaugeSegment(0, 1/3, colors.low);      // Magenta (0-25 months)\n    drawGaugeSegment(1/3, 2/3, colors.medium); // Orange (25-50 months)\n    drawGaugeSegment(2/3, 1, colors.high);     // Teal (50-75 months)\n    \n    // Draw only essential tick marks and labels (15, 30, 45, 60)\n    ctx.strokeStyle = '#cccccc';\n    ctx.fillStyle = '#999999';\n    ctx.font = '11px Arial';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    \n    // Only draw major ticks at 15, 30, 45, 60\n    const majorTicks = [0, 15, 30, 45, 60, 75];\n    \n    for (let i of majorTicks) {\n      const percent = i / 75;\n      const angle = startAngle + (percent * totalAngle);\n      \n      // Calculate tick positions\n      const innerX = centerX + (radius - thickness/2) * Math.cos(angle);\n      const innerY = centerY + (radius - thickness/2) * Math.sin(angle);\n      \n      // Draw label\n      const labelX = centerX + (radius + 20) * Math.cos(angle);\n      const labelY = centerY + (radius + 20) * Math.sin(angle);\n      ctx.fillText(i.toString(), labelX, labelY);\n    }\n    \n    // Calculate needle position based on payback period\n    let needleValue = noProfitCase ? 75 : Math.min(paybackPeriod, 75);\n    const needlePercent = needleValue / 75;\n    const needleAngle = startAngle + (needlePercent * totalAngle);\n    \n    // Draw simplified needle\n    const needleLength = radius * 0.85;\n    \n    ctx.beginPath();\n    ctx.moveTo(centerX, centerY);\n    ctx.lineTo(\n      centerX + needleLength * Math.cos(needleAngle),\n      centerY + needleLength * Math.sin(needleAngle)\n    );\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = '#000000';\n    ctx.stroke();\n    \n    // Draw center pivot (white circle)\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, 8, 0, Math.PI * 2);\n    ctx.fillStyle = '#ffffff';\n    ctx.strokeStyle = '#cccccc';\n    ctx.lineWidth = 1;\n    ctx.fill();\n    ctx.stroke();\n    \n  }, [paybackPeriod, noProfitCase, colors]);\n  \n  return (\n    <Box sx={{ width: '100%', height: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      <Typography variant=\"h6\" align=\"center\" gutterBottom>\n        Investment Payback Period\n      </Typography>\n      \n      {/* Gauge Canvas with more vertical space */}\n      <Box sx={{ position: 'relative', width: '100%', height: '200px', mt: 2 }}>\n        <canvas ref={canvasRef} width={400} height={250} style={{ maxWidth: '100%', maxHeight: '100%' }} />\n        \n        {/* Value Display - Centered at bottom, using magenta color */}\n        <Typography\n          variant=\"h2\"\n          align=\"center\"\n          sx={{\n            position: 'absolute',\n            bottom: '0',\n            left: '50%',\n            transform: 'translateX(-50%)',\n            fontWeight: 'bold',\n            color: getValueColor(),\n            fontSize: '3.5rem',\n          }}\n        >\n          {noProfitCase ? '-' : Math.round(paybackPeriod)}\n        </Typography>\n      </Box>\n      \n      {/* Simple status text */}\n      <Typography variant=\"body1\" align=\"center\" sx={{ mt: 2 }}>\n        {noProfitCase \n          ? 'No profit with current parameters' \n          : paybackPeriod <= 25 \n            ? 'Excellent payback period' \n            : paybackPeriod <= 50 \n              ? 'Good payback period' \n              : 'Extended payback period'}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default PaybackGauge;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}