{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasgobert/Desktop/Apps/MO180SalesSimulator/src/components/Charts/PaybackGauge.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\n/**\n * PaybackGauge Component\n * Redesigned to match reference screenshot with colored segments and clean aesthetic\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaybackGauge = ({\n  paybackPeriod\n}) => {\n  _s();\n  const theme = useTheme();\n  const canvasRef = useRef(null);\n\n  // Handle \"no profit\" case\n  const noProfitCase = paybackPeriod === '-';\n\n  // Define colors for the gauge segments\n  const colors = {\n    low: '#c5389e',\n    // Magenta for 0-25 months\n    medium: '#f7b463',\n    // Orange for 25-50 months\n    high: '#1c796a',\n    // Teal for 50-75 months\n    noProfit: '#cccccc' // Gray for no profit\n  };\n\n  // Get the color based on the payback period\n  const getPaybackColor = () => {\n    if (noProfitCase) return colors.noProfit;\n    if (paybackPeriod <= 25) return colors.low;\n    if (paybackPeriod <= 50) return colors.medium;\n    return colors.high;\n  };\n\n  // Draw the gauge using canvas\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    const width = canvas.width;\n    const height = canvas.height;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n\n    // Center of the gauge\n    const centerX = width / 2;\n    const centerY = height - 50; // Position the center near the bottom\n\n    // Gauge radius\n    const radius = Math.min(centerX, centerY) * 0.9;\n\n    // Gauge angles\n    const startAngle = Math.PI; // 180 degrees (left)\n    const endAngle = 2 * Math.PI; // 360 degrees (right)\n    const totalAngle = endAngle - startAngle;\n\n    // Segment angles\n    const segmentAngle = totalAngle / 3;\n\n    // Gauge thickness\n    const thickness = radius * 0.15;\n\n    // Draw the gauge background (3 colored segments)\n    const drawGaugeSegment = (startPercent, endPercent, color) => {\n      const segmentStartAngle = startAngle + startPercent * totalAngle;\n      const segmentEndAngle = startAngle + endPercent * totalAngle;\n      ctx.beginPath();\n      ctx.arc(centerX, centerY, radius, segmentStartAngle, segmentEndAngle);\n      ctx.arc(centerX, centerY, radius - thickness, segmentEndAngle, segmentStartAngle, true);\n      ctx.closePath();\n      ctx.fillStyle = color;\n      ctx.fill();\n    };\n\n    // Draw three colored segments\n    drawGaugeSegment(0, 1 / 3, colors.low); // Magenta (0-25 months)\n    drawGaugeSegment(1 / 3, 2 / 3, colors.medium); // Orange (25-50 months)\n    drawGaugeSegment(2 / 3, 1, colors.high); // Teal (50-75 months)\n\n    // Draw tick marks and labels\n    ctx.strokeStyle = '#999999';\n    ctx.fillStyle = '#999999';\n    ctx.font = '12px Arial';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    const tickLength = 10;\n    const labelDistance = radius + 20;\n\n    // Draw major ticks and labels at 0, 15, 30, 45, 60, 75\n    for (let i = 0; i <= 75; i += 15) {\n      const percent = i / 75;\n      const angle = startAngle + percent * totalAngle;\n\n      // Calculate tick positions\n      const innerX = centerX + (radius - thickness) * Math.cos(angle);\n      const innerY = centerY + (radius - thickness) * Math.sin(angle);\n      const outerX = centerX + (radius + tickLength) * Math.cos(angle);\n      const outerY = centerY + (radius + tickLength) * Math.sin(angle);\n\n      // Draw tick line\n      ctx.beginPath();\n      ctx.moveTo(innerX, innerY);\n      ctx.lineTo(outerX, outerY);\n      ctx.stroke();\n\n      // Draw label\n      const labelX = centerX + labelDistance * Math.cos(angle);\n      const labelY = centerY + labelDistance * Math.sin(angle);\n      ctx.fillText(i.toString(), labelX, labelY);\n    }\n\n    // Draw minor ticks\n    ctx.strokeStyle = '#cccccc';\n    for (let i = 0; i <= 75; i += 5) {\n      // Skip major ticks\n      if (i % 15 === 0) continue;\n      const percent = i / 75;\n      const angle = startAngle + percent * totalAngle;\n\n      // Calculate tick positions (shorter than major ticks)\n      const innerX = centerX + (radius - thickness) * Math.cos(angle);\n      const innerY = centerY + (radius - thickness) * Math.sin(angle);\n      const outerX = centerX + (radius + 5) * Math.cos(angle);\n      const outerY = centerY + (radius + 5) * Math.sin(angle);\n\n      // Draw tick line\n      ctx.beginPath();\n      ctx.moveTo(innerX, innerY);\n      ctx.lineTo(outerX, outerY);\n      ctx.stroke();\n    }\n\n    // Calculate needle position based on payback period\n    let needleValue = noProfitCase ? 75 : Math.min(paybackPeriod, 75);\n    const needlePercent = needleValue / 75;\n    const needleAngle = startAngle + needlePercent * totalAngle;\n\n    // Draw the teardrop-shaped needle\n    ctx.fillStyle = '#000000';\n    ctx.beginPath();\n    ctx.save();\n    ctx.translate(centerX, centerY);\n    ctx.rotate(needleAngle);\n\n    // Teardrop shape\n    ctx.moveTo(0, -5);\n    ctx.bezierCurveTo(15, -10, radius * 0.7, -6, radius * 0.85, 0);\n    ctx.bezierCurveTo(radius * 0.7, 6, 15, 10, 0, 5);\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n\n    // Draw center pivot point\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, 10, 0, Math.PI * 2);\n    ctx.fillStyle = '#f5f5f5';\n    ctx.strokeStyle = '#999999';\n    ctx.lineWidth = 2;\n    ctx.fill();\n    ctx.stroke();\n  }, [paybackPeriod, noProfitCase, colors]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Investment Payback Period\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'relative',\n        width: '100%',\n        height: '250px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 400,\n        height: 300,\n        style: {\n          maxWidth: '100%',\n          maxHeight: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        align: \"center\",\n        sx: {\n          position: 'absolute',\n          bottom: '20px',\n          left: '50%',\n          transform: 'translateX(-50%)',\n          fontWeight: 'bold',\n          color: getPaybackColor(),\n          transition: 'color 0.5s ease'\n        },\n        children: noProfitCase ? 'N/A' : Math.round(paybackPeriod)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"text.secondary\",\n      align: \"center\",\n      sx: {\n        mt: 2\n      },\n      children: noProfitCase ? 'Current parameters do not yield profit' : paybackPeriod <= 25 ? 'Excellent payback period' : paybackPeriod <= 50 ? 'Good payback period' : 'Extended payback period'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_s(PaybackGauge, \"kdrREFZ0jLaicLxmNBI1E0NiK+c=\", false, function () {\n  return [useTheme];\n});\n_c = PaybackGauge;\nexport default PaybackGauge;\nvar _c;\n$RefreshReg$(_c, \"PaybackGauge\");","map":{"version":3,"names":["React","useEffect","useRef","Box","Typography","useTheme","jsxDEV","_jsxDEV","PaybackGauge","paybackPeriod","_s","theme","canvasRef","noProfitCase","colors","low","medium","high","noProfit","getPaybackColor","canvas","current","ctx","getContext","width","height","clearRect","centerX","centerY","radius","Math","min","startAngle","PI","endAngle","totalAngle","segmentAngle","thickness","drawGaugeSegment","startPercent","endPercent","color","segmentStartAngle","segmentEndAngle","beginPath","arc","closePath","fillStyle","fill","strokeStyle","font","textAlign","textBaseline","tickLength","labelDistance","i","percent","angle","innerX","cos","innerY","sin","outerX","outerY","moveTo","lineTo","stroke","labelX","labelY","fillText","toString","needleValue","needlePercent","needleAngle","save","translate","rotate","bezierCurveTo","restore","lineWidth","sx","display","flexDirection","alignItems","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","position","ref","style","maxWidth","maxHeight","bottom","left","transform","fontWeight","transition","round","mt","_c","$RefreshReg$"],"sources":["/Users/nicholasgobert/Desktop/Apps/MO180SalesSimulator/src/components/Charts/PaybackGauge.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\n/**\n * PaybackGauge Component\n * Redesigned to match reference screenshot with colored segments and clean aesthetic\n */\nconst PaybackGauge = ({ paybackPeriod }) => {\n  const theme = useTheme();\n  const canvasRef = useRef(null);\n  \n  // Handle \"no profit\" case\n  const noProfitCase = paybackPeriod === '-';\n  \n  // Define colors for the gauge segments\n  const colors = {\n    low: '#c5389e',      // Magenta for 0-25 months\n    medium: '#f7b463',   // Orange for 25-50 months\n    high: '#1c796a',     // Teal for 50-75 months\n    noProfit: '#cccccc'  // Gray for no profit\n  };\n  \n  // Get the color based on the payback period\n  const getPaybackColor = () => {\n    if (noProfitCase) return colors.noProfit;\n    if (paybackPeriod <= 25) return colors.low;\n    if (paybackPeriod <= 50) return colors.medium;\n    return colors.high;\n  };\n  \n  // Draw the gauge using canvas\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const ctx = canvas.getContext('2d');\n    const width = canvas.width;\n    const height = canvas.height;\n    \n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n    \n    // Center of the gauge\n    const centerX = width / 2;\n    const centerY = height - 50; // Position the center near the bottom\n    \n    // Gauge radius\n    const radius = Math.min(centerX, centerY) * 0.9;\n    \n    // Gauge angles\n    const startAngle = Math.PI;        // 180 degrees (left)\n    const endAngle = 2 * Math.PI;      // 360 degrees (right)\n    const totalAngle = endAngle - startAngle;\n    \n    // Segment angles\n    const segmentAngle = totalAngle / 3;\n    \n    // Gauge thickness\n    const thickness = radius * 0.15;\n    \n    // Draw the gauge background (3 colored segments)\n    const drawGaugeSegment = (startPercent, endPercent, color) => {\n      const segmentStartAngle = startAngle + (startPercent * totalAngle);\n      const segmentEndAngle = startAngle + (endPercent * totalAngle);\n      \n      ctx.beginPath();\n      ctx.arc(centerX, centerY, radius, segmentStartAngle, segmentEndAngle);\n      ctx.arc(centerX, centerY, radius - thickness, segmentEndAngle, segmentStartAngle, true);\n      ctx.closePath();\n      ctx.fillStyle = color;\n      ctx.fill();\n    };\n    \n    // Draw three colored segments\n    drawGaugeSegment(0, 1/3, colors.low);      // Magenta (0-25 months)\n    drawGaugeSegment(1/3, 2/3, colors.medium); // Orange (25-50 months)\n    drawGaugeSegment(2/3, 1, colors.high);     // Teal (50-75 months)\n    \n    // Draw tick marks and labels\n    ctx.strokeStyle = '#999999';\n    ctx.fillStyle = '#999999';\n    ctx.font = '12px Arial';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    \n    const tickLength = 10;\n    const labelDistance = radius + 20;\n    \n    // Draw major ticks and labels at 0, 15, 30, 45, 60, 75\n    for (let i = 0; i <= 75; i += 15) {\n      const percent = i / 75;\n      const angle = startAngle + (percent * totalAngle);\n      \n      // Calculate tick positions\n      const innerX = centerX + (radius - thickness) * Math.cos(angle);\n      const innerY = centerY + (radius - thickness) * Math.sin(angle);\n      const outerX = centerX + (radius + tickLength) * Math.cos(angle);\n      const outerY = centerY + (radius + tickLength) * Math.sin(angle);\n      \n      // Draw tick line\n      ctx.beginPath();\n      ctx.moveTo(innerX, innerY);\n      ctx.lineTo(outerX, outerY);\n      ctx.stroke();\n      \n      // Draw label\n      const labelX = centerX + labelDistance * Math.cos(angle);\n      const labelY = centerY + labelDistance * Math.sin(angle);\n      ctx.fillText(i.toString(), labelX, labelY);\n    }\n    \n    // Draw minor ticks\n    ctx.strokeStyle = '#cccccc';\n    for (let i = 0; i <= 75; i += 5) {\n      // Skip major ticks\n      if (i % 15 === 0) continue;\n      \n      const percent = i / 75;\n      const angle = startAngle + (percent * totalAngle);\n      \n      // Calculate tick positions (shorter than major ticks)\n      const innerX = centerX + (radius - thickness) * Math.cos(angle);\n      const innerY = centerY + (radius - thickness) * Math.sin(angle);\n      const outerX = centerX + (radius + 5) * Math.cos(angle);\n      const outerY = centerY + (radius + 5) * Math.sin(angle);\n      \n      // Draw tick line\n      ctx.beginPath();\n      ctx.moveTo(innerX, innerY);\n      ctx.lineTo(outerX, outerY);\n      ctx.stroke();\n    }\n    \n    // Calculate needle position based on payback period\n    let needleValue = noProfitCase ? 75 : Math.min(paybackPeriod, 75);\n    const needlePercent = needleValue / 75;\n    const needleAngle = startAngle + (needlePercent * totalAngle);\n    \n    // Draw the teardrop-shaped needle\n    ctx.fillStyle = '#000000';\n    ctx.beginPath();\n    ctx.save();\n    ctx.translate(centerX, centerY);\n    ctx.rotate(needleAngle);\n    \n    // Teardrop shape\n    ctx.moveTo(0, -5);\n    ctx.bezierCurveTo(15, -10, radius * 0.7, -6, radius * 0.85, 0);\n    ctx.bezierCurveTo(radius * 0.7, 6, 15, 10, 0, 5);\n    ctx.closePath();\n    \n    ctx.fill();\n    ctx.restore();\n    \n    // Draw center pivot point\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, 10, 0, Math.PI * 2);\n    ctx.fillStyle = '#f5f5f5';\n    ctx.strokeStyle = '#999999';\n    ctx.lineWidth = 2;\n    ctx.fill();\n    ctx.stroke();\n    \n  }, [paybackPeriod, noProfitCase, colors]);\n  \n  return (\n    <Box sx={{ width: '100%', height: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      <Typography variant=\"h6\" align=\"center\" gutterBottom>\n        Investment Payback Period\n      </Typography>\n      \n      {/* Gauge Canvas */}\n      <Box sx={{ position: 'relative', width: '100%', height: '250px' }}>\n        <canvas ref={canvasRef} width={400} height={300} style={{ maxWidth: '100%', maxHeight: '100%' }} />\n        \n        {/* Value Display */}\n        <Typography\n          variant=\"h3\"\n          align=\"center\"\n          sx={{\n            position: 'absolute',\n            bottom: '20px',\n            left: '50%',\n            transform: 'translateX(-50%)',\n            fontWeight: 'bold',\n            color: getPaybackColor(),\n            transition: 'color 0.5s ease'\n          }}\n        >\n          {noProfitCase ? 'N/A' : Math.round(paybackPeriod)}\n        </Typography>\n      </Box>\n      \n      <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{ mt: 2 }}>\n        {noProfitCase \n          ? 'Current parameters do not yield profit' \n          : paybackPeriod <= 25 \n            ? 'Excellent payback period' \n            : paybackPeriod <= 50 \n              ? 'Good payback period' \n              : 'Extended payback period'}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default PaybackGauge;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}