{"ast":null,"code":"import { jsPDF } from 'jspdf';\nimport 'jspdf-autotable';\nimport { useLanguage } from '../../context/LanguageContext';\n\n/**\n * Generate a PDF report from the simulation results\n * @param {Object} results - The simulation results\n * @param {Function} t - Translation function\n * @returns {jsPDF} - The PDF document\n */\nexport const generatePDF = (results, t) => {\n  var _results$inputs, _results$inputs2, _results$inputs3, _results$inputs4, _results$inputs5, _results$inputs6, _results$inputs7;\n  // Create a new PDF document\n  const doc = new jsPDF();\n\n  // Helper function to format numbers with commas as thousands separators\n  const formatNumber = (num, decimals = 0) => {\n    if (typeof num === 'string') return num;\n    return num.toLocaleString(undefined, {\n      minimumFractionDigits: decimals,\n      maximumFractionDigits: decimals\n    });\n  };\n\n  // Helper function to format currency\n  const formatCurrency = amount => {\n    // Get the current language from the results\n    const currentLang = results.language || 'en';\n\n    // Place the currency symbol after the number for Japanese\n    if (currentLang === 'ja') {\n      return `${formatNumber(Math.round(amount))}${t('currency')}`;\n    }\n    // Default format for other languages\n    return `${t('currency')} ${formatNumber(Math.round(amount))}`;\n  };\n\n  // Helper function to format percentage\n  const formatPercent = value => {\n    return `${value.toFixed(2)}%`;\n  };\n\n  // Set document properties\n  doc.setProperties({\n    title: `${t('mo180Simulator')} - ${t('simulationResults')}`,\n    subject: t('profitabilityAnalysis'),\n    author: 'Roland DG',\n    creator: 'MO-180 Cost Simulator'\n  });\n\n  // Add title\n  doc.setFontSize(20);\n  doc.setTextColor(33, 33, 33);\n  doc.text(t('mo180Simulator'), 105, 20, {\n    align: 'center'\n  });\n  doc.setFontSize(14);\n  doc.text(t('simulationResults'), 105, 30, {\n    align: 'center'\n  });\n\n  // Add date\n  const currentDate = new Date().toLocaleDateString();\n  doc.setFontSize(10);\n  doc.text(`${t('generatedOn')}: ${currentDate}`, 195, 40, {\n    align: 'right'\n  });\n\n  // Add key financial metrics\n  doc.setFontSize(14);\n  doc.setTextColor(0, 100, 80);\n  doc.text(t('keySummary'), 20, 50);\n\n  // Create table for key metrics\n  doc.autoTable({\n    startY: 55,\n    margin: {\n      left: 20\n    },\n    head: [[t('metric'), t('value')]],\n    body: [[t('monthlySales'), formatCurrency(results.monthlySales)], [t('monthlyGrossProfit'), formatCurrency(results.monthlyGrossProfit)], [t('grossProfitMargin'), formatPercent(results.grossProfitMargin)], [t('investmentPaybackPeriod'), results.paybackPeriod === '-' ? 'N/A' : `${results.paybackPeriod.toFixed(1)} ${t('months')}`], [t('costPerUnit'), formatCurrency(results.costPerUnit)], [t('operatingHours'), `${results.operatingHours.toFixed(1)} ${t('hours')}`]],\n    theme: 'striped',\n    headStyles: {\n      fillColor: [0, 141, 112],\n      textColor: [255, 255, 255],\n      fontStyle: 'bold'\n    },\n    columnStyles: {\n      0: {\n        cellWidth: 80\n      },\n      1: {\n        cellWidth: 80,\n        halign: 'right'\n      }\n    }\n  });\n\n  // Add production details\n  const productionY = doc.previousAutoTable.finalY + 15;\n  doc.setFontSize(14);\n  doc.setTextColor(0, 100, 80);\n  doc.text(t('productionDetails'), 20, productionY);\n\n  // Create table for production details\n  doc.autoTable({\n    startY: productionY + 5,\n    margin: {\n      left: 20\n    },\n    head: [[t('metric'), t('value')]],\n    body: [[t('itemsPerPrintJob'), `${formatNumber(results.itemsPerPrintJob)} ${t('units')}`], [t('monthlyPrintJobs'), `${formatNumber(results.monthlyPrintJobs)} ${t('jobs')}`]],\n    theme: 'striped',\n    headStyles: {\n      fillColor: [0, 141, 112],\n      textColor: [255, 255, 255],\n      fontStyle: 'bold'\n    },\n    columnStyles: {\n      0: {\n        cellWidth: 80\n      },\n      1: {\n        cellWidth: 80,\n        halign: 'right'\n      }\n    }\n  });\n\n  // Add ink usage details\n  const inkY = doc.previousAutoTable.finalY + 15;\n  doc.setFontSize(14);\n  doc.setTextColor(0, 100, 80);\n  doc.text(t('inkUsagePerItem'), 20, inkY);\n\n  // Create table for ink usage\n  doc.autoTable({\n    startY: inkY + 5,\n    margin: {\n      left: 20\n    },\n    head: [[t('inkType'), t('volume')]],\n    body: [[t('white'), `${results.inkUsage.white} ${t('cc')}`], [t('cmyk'), `${results.inkUsage.cmyk} ${t('cc')}`], [t('primer'), `${results.inkUsage.primer} ${t('cc')}`], [t('inkCostPerUnit'), formatCurrency(results.inkCostPerUnit)]],\n    theme: 'striped',\n    headStyles: {\n      fillColor: [0, 141, 112],\n      textColor: [255, 255, 255],\n      fontStyle: 'bold'\n    },\n    columnStyles: {\n      0: {\n        cellWidth: 80\n      },\n      1: {\n        cellWidth: 80,\n        halign: 'right'\n      }\n    }\n  });\n\n  // Add simulation parameters\n  const paramsY = doc.previousAutoTable.finalY + 15;\n  doc.setFontSize(14);\n  doc.setTextColor(0, 100, 80);\n  doc.text(t('simulationParameters'), 20, paramsY);\n\n  // Create table for simulation parameters\n  doc.autoTable({\n    startY: paramsY + 5,\n    margin: {\n      left: 20\n    },\n    head: [[t('parameter'), t('value')]],\n    body: [[t('productDimensions'), `${((_results$inputs = results.inputs) === null || _results$inputs === void 0 ? void 0 : _results$inputs.shortEdge) || 0} x ${((_results$inputs2 = results.inputs) === null || _results$inputs2 === void 0 ? void 0 : _results$inputs2.longEdge) || 0} mm`], [t('monthlySalesTarget'), `${formatNumber(((_results$inputs3 = results.inputs) === null || _results$inputs3 === void 0 ? void 0 : _results$inputs3.monthlySalesVolume) || 0)} ${t('units')}`], [t('salesPricePerUnit'), formatCurrency(((_results$inputs4 = results.inputs) === null || _results$inputs4 === void 0 ? void 0 : _results$inputs4.salesPricePerUnit) || 0)], [t('materialCostPerUnit'), formatCurrency(((_results$inputs5 = results.inputs) === null || _results$inputs5 === void 0 ? void 0 : _results$inputs5.materialCostPerUnit) || 0)], [t('laborCostPerHour'), formatCurrency(((_results$inputs6 = results.inputs) === null || _results$inputs6 === void 0 ? void 0 : _results$inputs6.laborCostPerHour) || 0)], [t('inkPrice'), `${((_results$inputs7 = results.inputs) === null || _results$inputs7 === void 0 ? void 0 : _results$inputs7.inkPricePerCC) || 0} ${t('currency')}/${t('cc')}`]],\n    theme: 'striped',\n    headStyles: {\n      fillColor: [0, 141, 112],\n      textColor: [255, 255, 255],\n      fontStyle: 'bold'\n    },\n    columnStyles: {\n      0: {\n        cellWidth: 80\n      },\n      1: {\n        cellWidth: 80,\n        halign: 'right'\n      }\n    }\n  });\n\n  // Add footer\n  const pageCount = doc.internal.getNumberOfPages();\n  for (let i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.setFontSize(10);\n    doc.setTextColor(128, 128, 128);\n    doc.text(`Roland DG MO-180 UV Printer - ${t('page')} ${i} ${t('of')} ${pageCount}`, 105, 285, {\n      align: 'center'\n    });\n  }\n  return doc;\n};\n\n/**\n * Download the PDF report\n * @param {Object} results - The simulation results\n * @param {Function} t - Translation function\n */\nexport const downloadPDF = (results, t) => {\n  const doc = generatePDF(results, t);\n  doc.save(`MO180-Simulation-${new Date().toISOString().split('T')[0]}.pdf`);\n};\nexport default downloadPDF;","map":{"version":3,"names":["jsPDF","useLanguage","generatePDF","results","t","_results$inputs","_results$inputs2","_results$inputs3","_results$inputs4","_results$inputs5","_results$inputs6","_results$inputs7","doc","formatNumber","num","decimals","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","formatCurrency","amount","currentLang","language","Math","round","formatPercent","value","toFixed","setProperties","title","subject","author","creator","setFontSize","setTextColor","text","align","currentDate","Date","toLocaleDateString","autoTable","startY","margin","left","head","body","monthlySales","monthlyGrossProfit","grossProfitMargin","paybackPeriod","costPerUnit","operatingHours","theme","headStyles","fillColor","textColor","fontStyle","columnStyles","cellWidth","halign","productionY","previousAutoTable","finalY","itemsPerPrintJob","monthlyPrintJobs","inkY","inkUsage","white","cmyk","primer","inkCostPerUnit","paramsY","inputs","shortEdge","longEdge","monthlySalesVolume","salesPricePerUnit","materialCostPerUnit","laborCostPerHour","inkPricePerCC","pageCount","internal","getNumberOfPages","i","setPage","downloadPDF","save","toISOString","split"],"sources":["/Users/nicholasgobert/Desktop/Apps/MOSimulator/src/utils/pdf/generatePDF.js"],"sourcesContent":["import { jsPDF } from 'jspdf';\nimport 'jspdf-autotable';\nimport { useLanguage } from '../../context/LanguageContext';\n\n/**\n * Generate a PDF report from the simulation results\n * @param {Object} results - The simulation results\n * @param {Function} t - Translation function\n * @returns {jsPDF} - The PDF document\n */\nexport const generatePDF = (results, t) => {\n  // Create a new PDF document\n  const doc = new jsPDF();\n  \n  // Helper function to format numbers with commas as thousands separators\n  const formatNumber = (num, decimals = 0) => {\n    if (typeof num === 'string') return num;\n    return num.toLocaleString(undefined, { \n      minimumFractionDigits: decimals,\n      maximumFractionDigits: decimals\n    });\n  };\n\n  // Helper function to format currency\n  const formatCurrency = (amount) => {\n    // Get the current language from the results\n    const currentLang = results.language || 'en';\n    \n    // Place the currency symbol after the number for Japanese\n    if (currentLang === 'ja') {\n      return `${formatNumber(Math.round(amount))}${t('currency')}`;\n    }\n    // Default format for other languages\n    return `${t('currency')} ${formatNumber(Math.round(amount))}`;\n  };\n\n  // Helper function to format percentage\n  const formatPercent = (value) => {\n    return `${value.toFixed(2)}%`;\n  };\n\n  // Set document properties\n  doc.setProperties({\n    title: `${t('mo180Simulator')} - ${t('simulationResults')}`,\n    subject: t('profitabilityAnalysis'),\n    author: 'Roland DG',\n    creator: 'MO-180 Cost Simulator'\n  });\n\n  // Add title\n  doc.setFontSize(20);\n  doc.setTextColor(33, 33, 33);\n  doc.text(t('mo180Simulator'), 105, 20, { align: 'center' });\n  \n  doc.setFontSize(14);\n  doc.text(t('simulationResults'), 105, 30, { align: 'center' });\n\n  // Add date\n  const currentDate = new Date().toLocaleDateString();\n  doc.setFontSize(10);\n  doc.text(`${t('generatedOn')}: ${currentDate}`, 195, 40, { align: 'right' });\n\n  // Add key financial metrics\n  doc.setFontSize(14);\n  doc.setTextColor(0, 100, 80);\n  doc.text(t('keySummary'), 20, 50);\n\n  // Create table for key metrics\n  doc.autoTable({\n    startY: 55,\n    margin: { left: 20 },\n    head: [\n      [t('metric'), t('value')]\n    ],\n    body: [\n      [t('monthlySales'), formatCurrency(results.monthlySales)],\n      [t('monthlyGrossProfit'), formatCurrency(results.monthlyGrossProfit)],\n      [t('grossProfitMargin'), formatPercent(results.grossProfitMargin)],\n      [t('investmentPaybackPeriod'), results.paybackPeriod === '-' ? 'N/A' : `${results.paybackPeriod.toFixed(1)} ${t('months')}`],\n      [t('costPerUnit'), formatCurrency(results.costPerUnit)],\n      [t('operatingHours'), `${results.operatingHours.toFixed(1)} ${t('hours')}`]\n    ],\n    theme: 'striped',\n    headStyles: {\n      fillColor: [0, 141, 112],\n      textColor: [255, 255, 255],\n      fontStyle: 'bold'\n    },\n    columnStyles: {\n      0: { cellWidth: 80 },\n      1: { cellWidth: 80, halign: 'right' }\n    }\n  });\n\n  // Add production details\n  const productionY = doc.previousAutoTable.finalY + 15;\n  doc.setFontSize(14);\n  doc.setTextColor(0, 100, 80);\n  doc.text(t('productionDetails'), 20, productionY);\n\n  // Create table for production details\n  doc.autoTable({\n    startY: productionY + 5,\n    margin: { left: 20 },\n    head: [\n      [t('metric'), t('value')]\n    ],\n    body: [\n      [t('itemsPerPrintJob'), `${formatNumber(results.itemsPerPrintJob)} ${t('units')}`],\n      [t('monthlyPrintJobs'), `${formatNumber(results.monthlyPrintJobs)} ${t('jobs')}`]\n    ],\n    theme: 'striped',\n    headStyles: {\n      fillColor: [0, 141, 112],\n      textColor: [255, 255, 255],\n      fontStyle: 'bold'\n    },\n    columnStyles: {\n      0: { cellWidth: 80 },\n      1: { cellWidth: 80, halign: 'right' }\n    }\n  });\n\n  // Add ink usage details\n  const inkY = doc.previousAutoTable.finalY + 15;\n  doc.setFontSize(14);\n  doc.setTextColor(0, 100, 80);\n  doc.text(t('inkUsagePerItem'), 20, inkY);\n\n  // Create table for ink usage\n  doc.autoTable({\n    startY: inkY + 5,\n    margin: { left: 20 },\n    head: [\n      [t('inkType'), t('volume')]\n    ],\n    body: [\n      [t('white'), `${results.inkUsage.white} ${t('cc')}`],\n      [t('cmyk'), `${results.inkUsage.cmyk} ${t('cc')}`],\n      [t('primer'), `${results.inkUsage.primer} ${t('cc')}`],\n      [t('inkCostPerUnit'), formatCurrency(results.inkCostPerUnit)]\n    ],\n    theme: 'striped',\n    headStyles: {\n      fillColor: [0, 141, 112],\n      textColor: [255, 255, 255],\n      fontStyle: 'bold'\n    },\n    columnStyles: {\n      0: { cellWidth: 80 },\n      1: { cellWidth: 80, halign: 'right' }\n    }\n  });\n\n  // Add simulation parameters\n  const paramsY = doc.previousAutoTable.finalY + 15;\n  doc.setFontSize(14);\n  doc.setTextColor(0, 100, 80);\n  doc.text(t('simulationParameters'), 20, paramsY);\n\n  // Create table for simulation parameters\n  doc.autoTable({\n    startY: paramsY + 5,\n    margin: { left: 20 },\n    head: [\n      [t('parameter'), t('value')]\n    ],\n    body: [\n      [t('productDimensions'), `${results.inputs?.shortEdge || 0} x ${results.inputs?.longEdge || 0} mm`],\n      [t('monthlySalesTarget'), `${formatNumber(results.inputs?.monthlySalesVolume || 0)} ${t('units')}`],\n      [t('salesPricePerUnit'), formatCurrency(results.inputs?.salesPricePerUnit || 0)],\n      [t('materialCostPerUnit'), formatCurrency(results.inputs?.materialCostPerUnit || 0)],\n      [t('laborCostPerHour'), formatCurrency(results.inputs?.laborCostPerHour || 0)],\n      [t('inkPrice'), `${results.inputs?.inkPricePerCC || 0} ${t('currency')}/${t('cc')}`]\n    ],\n    theme: 'striped',\n    headStyles: {\n      fillColor: [0, 141, 112],\n      textColor: [255, 255, 255],\n      fontStyle: 'bold'\n    },\n    columnStyles: {\n      0: { cellWidth: 80 },\n      1: { cellWidth: 80, halign: 'right' }\n    }\n  });\n\n  // Add footer\n  const pageCount = doc.internal.getNumberOfPages();\n  for (let i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.setFontSize(10);\n    doc.setTextColor(128, 128, 128);\n    doc.text(`Roland DG MO-180 UV Printer - ${t('page')} ${i} ${t('of')} ${pageCount}`, 105, 285, { align: 'center' });\n  }\n\n  return doc;\n};\n\n/**\n * Download the PDF report\n * @param {Object} results - The simulation results\n * @param {Function} t - Translation function\n */\nexport const downloadPDF = (results, t) => {\n  const doc = generatePDF(results, t);\n  doc.save(`MO180-Simulation-${new Date().toISOString().split('T')[0]}.pdf`);\n};\n\nexport default downloadPDF;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}