{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasgobert/Desktop/Apps/MOSimulator/src/features/simulation/SimulationForm.js\",\n  _s = $RefreshSig$();\n// MO Simulator/src/features/simulation/SimulationForm.js\n\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Tooltip, useMediaQuery } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { useLanguage } from '../../context/LanguageContext';\nimport PrinterInfoPopover from './components/PrinterInfoPopover';\nimport ProductDimensionsCard from './components/ProductDimensionsCard';\nimport SalesVolumeCard from './components/SalesVolumeCard';\nimport PriceParametersCard from './components/PriceParametersCard';\nimport { InfoIcon } from './components/Icons';\nimport { validateInput, validateAllInputs } from '../../utils/validation';\n\n/**\n * SimulationForm Component\n * Main form component for simulation inputs with validation\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimulationForm = ({\n  inputs,\n  onInputChange\n}) => {\n  _s();\n  const theme = useTheme();\n  const {\n    t,\n    language\n  } = useLanguage();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  // State for form validation and focus tracking\n  const [errors, setErrors] = useState({});\n  const [focusedInput, setFocusedInput] = useState(null);\n\n  // Printer info popover state\n  const [infoAnchorEl, setInfoAnchorEl] = useState(null);\n  const infoPopoverOpen = Boolean(infoAnchorEl);\n\n  // Validate all inputs on initial load\n  useEffect(() => {\n    const initialValidation = validateAllInputs(inputs);\n    const initialErrors = {};\n\n    // Only store actual error messages\n    Object.entries(initialValidation).forEach(([field, result]) => {\n      if (!result.valid) {\n        initialErrors[field] = result.errors[0];\n      }\n    });\n    setErrors(initialErrors);\n  }, []);\n\n  // Handle input change with validation\n  const handleValidatedInputChange = (name, value) => {\n    // Validate the input\n    const validationResult = validateInput(name, value);\n\n    // Update errors state\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [name]: validationResult.valid ? null : validationResult.errors[0]\n    }));\n\n    // If valid or empty (for optional fields), propagate the change\n    onInputChange(name, value);\n  };\n\n  // Handle input focus\n  const handleInputFocus = name => {\n    setFocusedInput(name);\n  };\n\n  // Handle input blur with additional validation\n  const handleInputBlur = name => {\n    setFocusedInput(null);\n\n    // Validate again on blur to catch any issues\n    const validationResult = validateInput(name, inputs[name]);\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [name]: validationResult.valid ? null : validationResult.errors[0]\n    }));\n\n    // Handle empty inputs on blur - set to default or minimum value\n    if (inputs[name] === '' || inputs[name] === null || inputs[name] === undefined) {\n      // Set minimum values based on the field\n      const defaultValues = {\n        shortEdge: 10,\n        longEdge: 10,\n        salesPricePerUnit: 0,\n        monthlySalesVolume: 0,\n        materialCostPerUnit: 0,\n        laborCostPerHour: 0,\n        inkPricePerCC: 0\n      };\n      onInputChange(name, defaultValues[name] || 0);\n    }\n  };\n\n  // Handle printer info popover\n  const handleInfoClick = event => {\n    setInfoAnchorEl(event.currentTarget);\n  };\n  const handleInfoClose = () => {\n    setInfoAnchorEl(null);\n  };\n\n  // Handle initial investment change from the printer info popover\n  const handleInitialInvestmentChange = value => {\n    handleValidatedInputChange('initialInvestment', value);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        mb: 3.5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        sx: {\n          fontWeight: 600,\n          mt: 1,\n          color: 'text.primary',\n          fontSize: isMobile ? '1.25rem' : '1.5rem'\n        },\n        children: t('simulationParameters')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: t('printerSpecifications'),\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          component: \"span\",\n          onClick: handleInfoClick,\n          sx: {\n            cursor: 'pointer',\n            color: 'text.secondary',\n            transition: 'all 0.2s',\n            '&:hover': {\n              color: 'primary.main'\n            },\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PrinterInfoPopover, {\n        open: infoPopoverOpen,\n        anchorEl: infoAnchorEl,\n        handleClose: handleInfoClose,\n        initialInvestment: inputs.initialInvestment,\n        onInitialInvestmentChange: handleInitialInvestmentChange,\n        error: errors.initialInvestment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProductDimensionsCard, {\n      inputs: inputs,\n      errors: errors,\n      onInputChange: handleValidatedInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SalesVolumeCard, {\n      inputs: inputs,\n      errors: errors,\n      focusedInput: focusedInput,\n      onInputChange: handleValidatedInputChange,\n      onInputFocus: handleInputFocus,\n      onInputBlur: handleInputBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PriceParametersCard, {\n      inputs: inputs,\n      errors: errors,\n      onInputChange: handleValidatedInputChange,\n      onInputFocus: handleInputFocus,\n      onInputBlur: handleInputBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(SimulationForm, \"poJElFu9LnlkQr10G7Vk11zxyzw=\", false, function () {\n  return [useTheme, useLanguage, useMediaQuery];\n});\n_c = SimulationForm;\nexport default SimulationForm;\nvar _c;\n$RefreshReg$(_c, \"SimulationForm\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Tooltip","useMediaQuery","useTheme","useLanguage","PrinterInfoPopover","ProductDimensionsCard","SalesVolumeCard","PriceParametersCard","InfoIcon","validateInput","validateAllInputs","jsxDEV","_jsxDEV","SimulationForm","inputs","onInputChange","_s","theme","t","language","isMobile","breakpoints","down","errors","setErrors","focusedInput","setFocusedInput","infoAnchorEl","setInfoAnchorEl","infoPopoverOpen","Boolean","initialValidation","initialErrors","Object","entries","forEach","field","result","valid","handleValidatedInputChange","name","value","validationResult","prevErrors","handleInputFocus","handleInputBlur","undefined","defaultValues","shortEdge","longEdge","salesPricePerUnit","monthlySalesVolume","materialCostPerUnit","laborCostPerHour","inkPricePerCC","handleInfoClick","event","currentTarget","handleInfoClose","handleInitialInvestmentChange","children","sx","display","justifyContent","alignItems","mb","variant","gutterBottom","fontWeight","mt","color","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","title","component","onClick","cursor","transition","open","anchorEl","handleClose","initialInvestment","onInitialInvestmentChange","error","onInputFocus","onInputBlur","_c","$RefreshReg$"],"sources":["/Users/nicholasgobert/Desktop/Apps/MOSimulator/src/features/simulation/SimulationForm.js"],"sourcesContent":["// MO Simulator/src/features/simulation/SimulationForm.js\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Tooltip,\n  useMediaQuery\n} from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { useLanguage } from '../../context/LanguageContext';\nimport PrinterInfoPopover from './components/PrinterInfoPopover';\nimport ProductDimensionsCard from './components/ProductDimensionsCard';\nimport SalesVolumeCard from './components/SalesVolumeCard';\nimport PriceParametersCard from './components/PriceParametersCard';\nimport { InfoIcon } from './components/Icons';\nimport { validateInput, validateAllInputs } from '../../utils/validation';\n\n/**\n * SimulationForm Component\n * Main form component for simulation inputs with validation\n */\nconst SimulationForm = ({ inputs, onInputChange }) => {\n  const theme = useTheme();\n  const { t, language } = useLanguage();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  \n  // State for form validation and focus tracking\n  const [errors, setErrors] = useState({});\n  const [focusedInput, setFocusedInput] = useState(null);\n  \n  // Printer info popover state\n  const [infoAnchorEl, setInfoAnchorEl] = useState(null);\n  const infoPopoverOpen = Boolean(infoAnchorEl);\n\n  // Validate all inputs on initial load\n  useEffect(() => {\n    const initialValidation = validateAllInputs(inputs);\n    const initialErrors = {};\n    \n    // Only store actual error messages\n    Object.entries(initialValidation).forEach(([field, result]) => {\n      if (!result.valid) {\n        initialErrors[field] = result.errors[0];\n      }\n    });\n    \n    setErrors(initialErrors);\n  }, []);\n  \n  // Handle input change with validation\n  const handleValidatedInputChange = (name, value) => {\n    // Validate the input\n    const validationResult = validateInput(name, value);\n    \n    // Update errors state\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [name]: validationResult.valid ? null : validationResult.errors[0]\n    }));\n    \n    // If valid or empty (for optional fields), propagate the change\n    onInputChange(name, value);\n  };\n  \n  // Handle input focus\n  const handleInputFocus = (name) => {\n    setFocusedInput(name);\n  };\n  \n  // Handle input blur with additional validation\n  const handleInputBlur = (name) => {\n    setFocusedInput(null);\n    \n    // Validate again on blur to catch any issues\n    const validationResult = validateInput(name, inputs[name]);\n    \n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [name]: validationResult.valid ? null : validationResult.errors[0]\n    }));\n    \n    // Handle empty inputs on blur - set to default or minimum value\n    if (inputs[name] === '' || inputs[name] === null || inputs[name] === undefined) {\n      // Set minimum values based on the field\n      const defaultValues = {\n        shortEdge: 10,\n        longEdge: 10,\n        salesPricePerUnit: 0,\n        monthlySalesVolume: 0,\n        materialCostPerUnit: 0,\n        laborCostPerHour: 0,\n        inkPricePerCC: 0\n      };\n      \n      onInputChange(name, defaultValues[name] || 0);\n    }\n  };\n  \n  // Handle printer info popover\n  const handleInfoClick = (event) => {\n    setInfoAnchorEl(event.currentTarget);\n  };\n\n  const handleInfoClose = () => {\n    setInfoAnchorEl(null);\n  };\n\n  // Handle initial investment change from the printer info popover\n  const handleInitialInvestmentChange = (value) => {\n    handleValidatedInputChange('initialInvestment', value);\n  };\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3.5 }}>\n        <Typography variant=\"h5\" gutterBottom sx={{\n          fontWeight: 600,\n          mt: 1,\n          color: 'text.primary',\n          fontSize: isMobile ? '1.25rem' : '1.5rem'\n        }}>\n          {t('simulationParameters')}\n        </Typography>\n        <Tooltip title={t('printerSpecifications')}>\n          <Box\n            component=\"span\"\n            onClick={handleInfoClick}\n            sx={{\n              cursor: 'pointer',\n              color: 'text.secondary',\n              transition: 'all 0.2s',\n              '&:hover': {\n                color: 'primary.main',\n              },\n              display: 'flex',\n              alignItems: 'center'\n            }}\n          >\n            <InfoIcon />\n          </Box>\n        </Tooltip>\n        <PrinterInfoPopover\n          open={infoPopoverOpen}\n          anchorEl={infoAnchorEl}\n          handleClose={handleInfoClose}\n          initialInvestment={inputs.initialInvestment}\n          onInitialInvestmentChange={handleInitialInvestmentChange}\n          error={errors.initialInvestment}\n        />\n      </Box>\n\n      {/* Product Dimensions Card */}\n      <ProductDimensionsCard\n        inputs={inputs}\n        errors={errors}\n        onInputChange={handleValidatedInputChange}\n      />\n      \n      {/* Sales Volume Card */}\n      <SalesVolumeCard\n        inputs={inputs}\n        errors={errors}\n        focusedInput={focusedInput}\n        onInputChange={handleValidatedInputChange}\n        onInputFocus={handleInputFocus}\n        onInputBlur={handleInputBlur}\n      />\n      \n      {/* Price Parameters Card */}\n      <PriceParametersCard\n        inputs={inputs}\n        errors={errors}\n        onInputChange={handleValidatedInputChange}\n        onInputFocus={handleInputFocus}\n        onInputBlur={handleInputBlur}\n      />\n    </Box>\n  );\n};\n\nexport default SimulationForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}