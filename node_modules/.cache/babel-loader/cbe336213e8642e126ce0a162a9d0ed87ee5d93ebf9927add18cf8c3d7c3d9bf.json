{"ast":null,"code":"/**\n * Generate a printable HTML representation of the simulation results\n * @param {Object} results - The simulation results\n * @param {Function} t - Translation function\n * @returns {String} - HTML content to be printed\n */\nexport const generatePrintableHTML = (results, t) => {\n  var _results$inputs, _results$inputs2, _results$inputs3, _results$inputs4, _results$inputs5, _results$inputs6, _results$inputs7, _results$inputs8, _results$inputs9;\n  // Helper function to format numbers with commas as thousands separators\n  const formatNumber = (num, decimals = 0) => {\n    if (typeof num === 'string') return num;\n    return num.toLocaleString(undefined, {\n      minimumFractionDigits: decimals,\n      maximumFractionDigits: decimals\n    });\n  };\n\n  // Helper function to format currency\n  const formatCurrency = amount => {\n    // Get the current language from the results\n    const currentLang = results.language || 'en';\n\n    // Place the currency symbol after the number for Japanese\n    if (currentLang === 'ja') {\n      return `${formatNumber(Math.round(amount))}${t('currency')}`;\n    }\n    // Default format for other languages\n    return `${t('currency')} ${formatNumber(Math.round(amount))}`;\n  };\n\n  // Helper function to format percentage\n  const formatPercent = value => {\n    return `${value.toFixed(2)}%`;\n  };\n\n  // Generate HTML content with 2-column layout\n  const htmlContent = `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <title>${t('mo180Simulator')} - ${t('simulationResults')}</title>\n      <meta charset=\"UTF-8\">\n      <style>\n        body {\n          font-family: Arial, sans-serif;\n          padding: 20px;\n          max-width: 1000px;\n          margin: 0 auto;\n          color: #333;\n        }\n        h1, h2, h3 {\n          color: #008d70;\n        }\n        .header {\n          border-bottom: 2px solid #008d70;\n          padding-bottom: 10px;\n          margin-bottom: 20px;\n        }\n        .date {\n          font-size: 14px;\n          color: #777;\n          text-align: right;\n          margin-bottom: 20px;\n        }\n        .content-wrapper {\n          display: flex;\n          flex-direction: row;\n          gap: 30px;\n        }\n        .left-column {\n          flex: 0 0 35%;\n        }\n        .right-column {\n          flex: 0 0 60%;\n        }\n        table {\n          width: 100%;\n          border-collapse: collapse;\n          margin-bottom: 30px;\n        }\n        th {\n          background-color: #008d70;\n          color: white;\n          padding: 10px;\n          text-align: left;\n        }\n        td {\n          padding: 8px;\n          border-bottom: 1px solid #ddd;\n        }\n        tr:nth-child(even) {\n          background-color: #f2f2f2;\n        }\n        .value-cell {\n          text-align: right;\n        }\n        .parameters-table {\n          background-color: #f9f9f9;\n          border: 1px solid #ddd;\n        }\n        .parameters-table th {\n          background-color: #006b55;\n        }\n        .footer {\n          margin-top: 30px;\n          text-align: center;\n          color: #777;\n          font-size: 12px;\n          border-top: 1px solid #ddd;\n          padding-top: 10px;\n        }\n        .summary-section {\n          background-color: #f0f9f7;\n          border-radius: 8px;\n          padding: 15px;\n          margin-bottom: 30px;\n          border: 1px solid #b3e0d9;\n        }\n        .summary-table {\n          border: none;\n          margin-bottom: 0;\n        }\n        .summary-table td {\n          border-bottom: 1px solid #b3e0d9;\n        }\n        .summary-table tr:last-child td {\n          border-bottom: none;\n        }\n        @media print {\n          body {\n            padding: 0;\n          }\n          .no-print {\n            display: none;\n          }\n          .content-wrapper {\n            display: flex;\n            flex-direction: row;\n          }\n          .left-column {\n            width: 35%;\n          }\n          .right-column {\n            width: 60%;\n          }\n        }\n      </style>\n    </head>\n    <body>\n      <div class=\"header\">\n        <h1>${t('mo180Simulator')}</h1>\n        <h2>${t('simulationResults')}</h2>\n      </div>\n      \n      <div class=\"date\">\n        ${t('generatedOn')}: ${new Date().toLocaleDateString()}\n      </div>\n      \n      <div class=\"content-wrapper\">\n        <!-- Left column - Input parameters -->\n        <div class=\"left-column\">\n          <h3>${t('simulationParameters')}</h3>\n          <table class=\"parameters-table\">\n            <tr>\n              <th>${t('parameter')}</th>\n              <th>${t('value')}</th>\n            </tr>\n            <tr>\n              <td>${t('productDimensions')}</td>\n              <td class=\"value-cell\">${((_results$inputs = results.inputs) === null || _results$inputs === void 0 ? void 0 : _results$inputs.shortEdge) || 0} x ${((_results$inputs2 = results.inputs) === null || _results$inputs2 === void 0 ? void 0 : _results$inputs2.longEdge) || 0} mm</td>\n            </tr>\n            <tr>\n              <td>${t('monthlySalesTarget')}</td>\n              <td class=\"value-cell\">${formatNumber(((_results$inputs3 = results.inputs) === null || _results$inputs3 === void 0 ? void 0 : _results$inputs3.monthlySalesVolume) || 0)} ${t('units')}</td>\n            </tr>\n            <tr>\n              <td>${t('salesPricePerUnit')}</td>\n              <td class=\"value-cell\">${formatCurrency(((_results$inputs4 = results.inputs) === null || _results$inputs4 === void 0 ? void 0 : _results$inputs4.salesPricePerUnit) || 0)}</td>\n            </tr>\n            <tr>\n              <td>${t('materialCostPerUnit')}</td>\n              <td class=\"value-cell\">${formatCurrency(((_results$inputs5 = results.inputs) === null || _results$inputs5 === void 0 ? void 0 : _results$inputs5.materialCostPerUnit) || 0)}</td>\n            </tr>\n            <tr>\n              <td>${t('laborCostPerHour')}</td>\n              <td class=\"value-cell\">${formatCurrency(((_results$inputs6 = results.inputs) === null || _results$inputs6 === void 0 ? void 0 : _results$inputs6.laborCostPerHour) || 0)}</td>\n            </tr>\n            <tr>\n              <td>${t('inkPrice')}</td>\n              <td class=\"value-cell\">${((_results$inputs7 = results.inputs) === null || _results$inputs7 === void 0 ? void 0 : _results$inputs7.inkPricePerCC) || 0} ${t('currency')}/${t('cc')}</td>\n            </tr>\n          </table>\n          \n          <h3>${t('inkUsagePerItem')}</h3>\n          <table>\n            <tr>\n              <th>${t('inkType')}</th>\n              <th>${t('volume')}</th>\n            </tr>\n            <tr>\n              <td>${t('white')}</td>\n              <td class=\"value-cell\">${results.inkUsage.white} ${t('cc')}</td>\n            </tr>\n            <tr>\n              <td>${t('cmyk')}</td>\n              <td class=\"value-cell\">${results.inkUsage.cmyk} ${t('cc')}</td>\n            </tr>\n            <tr>\n              <td>${t('primer')}</td>\n              <td class=\"value-cell\">${results.inkUsage.primer} ${t('cc')}</td>\n            </tr>\n            <tr>\n              <td>${t('inkCostPerUnit')}</td>\n              <td class=\"value-cell\">${formatCurrency(results.inkCostPerUnit)}</td>\n            </tr>\n          </table>\n        </div>\n        \n        <!-- Right column - Results -->\n        <div class=\"right-column\">\n          <div class=\"summary-section\">\n            <h3>${t('keySummary')}</h3>\n            <table class=\"summary-table\">\n              <tr>\n                <td><strong>${t('monthlySales')}</strong></td>\n                <td class=\"value-cell\"><strong>${formatCurrency(results.monthlySales)}</strong></td>\n              </tr>\n              <tr>\n                <td><strong>${t('monthlyGrossProfit')}</strong></td>\n                <td class=\"value-cell\"><strong>${formatCurrency(results.monthlyGrossProfit)}</strong></td>\n              </tr>\n              <tr>\n                <td><strong>${t('grossProfitMargin')}</strong></td>\n                <td class=\"value-cell\"><strong>${formatPercent(results.grossProfitMargin)}</strong></td>\n              </tr>\n              <tr>\n                <td><strong>${t('investmentPaybackPeriod')}</strong></td>\n                <td class=\"value-cell\"><strong>${results.paybackPeriod === '-' ? 'N/A' : `${results.paybackPeriod.toFixed(1)} ${t('months')}`}</strong></td>\n              </tr>\n            </table>\n          </div>\n          \n          <h3>${t('costBreakdownPerUnit')}</h3>\n          <table>\n            <tr>\n              <th>${t('metric')}</th>\n              <th>${t('value')}</th>\n            </tr>\n            <tr>\n              <td>${t('costPerUnit')}</td>\n              <td class=\"value-cell\">${formatCurrency(results.costPerUnit)}</td>\n            </tr>\n            <tr>\n              <td>${t('material')}</td>\n              <td class=\"value-cell\">${formatCurrency(((_results$inputs8 = results.inputs) === null || _results$inputs8 === void 0 ? void 0 : _results$inputs8.materialCostPerUnit) || 0)}</td>\n            </tr>\n            <tr>\n              <td>${t('ink')}</td>\n              <td class=\"value-cell\">${formatCurrency(results.inkCostPerUnit)}</td>\n            </tr>\n            <tr>\n              <td>${t('labor')}</td>\n              <td class=\"value-cell\">${formatCurrency((results.costPerUnit || 0) - (((_results$inputs9 = results.inputs) === null || _results$inputs9 === void 0 ? void 0 : _results$inputs9.materialCostPerUnit) || 0) - (results.inkCostPerUnit || 0))}</td>\n            </tr>\n          </table>\n          \n          <h3>${t('productionDetails')}</h3>\n          <table>\n            <tr>\n              <th>${t('metric')}</th>\n              <th>${t('value')}</th>\n            </tr>\n            <tr>\n              <td>${t('operatingHours')}</td>\n              <td class=\"value-cell\">${results.operatingHours.toFixed(1)} ${t('hours')}</td>\n            </tr>\n            <tr>\n              <td>${t('itemsPerPrintJob')}</td>\n              <td class=\"value-cell\">${formatNumber(results.itemsPerPrintJob)} ${t('units')}</td>\n            </tr>\n            <tr>\n              <td>${t('monthlyPrintJobs')}</td>\n              <td class=\"value-cell\">${formatNumber(results.monthlyPrintJobs)} ${t('jobs')}</td>\n            </tr>\n          </table>\n        </div>\n      </div>\n      \n      <div class=\"footer\">\n        Roland DG MO-180 UV Printer | ${t('mo180Simulator')} | ${new Date().toLocaleDateString()}\n      </div>\n      \n      <button class=\"no-print\" onclick=\"window.print()\" style=\"margin-top: 20px; padding: 10px 20px; background-color: #008d70; color: white; border: none; border-radius: 4px; cursor: pointer;\">\n        ${t('downloadPDF')}\n      </button>\n    </body>\n    </html>\n  `;\n  return htmlContent;\n};\n\n/**\n * Open a new window with printable content\n * @param {Object} results - The simulation results\n * @param {Function} t - Translation function\n */\nexport const printResults = (results, t) => {\n  const html = generatePrintableHTML(results, t);\n  const printWindow = window.open('', '_blank');\n  printWindow.document.write(html);\n  printWindow.document.close();\n  // The user can click the print button in the new window\n};\nexport default printResults;","map":{"version":3,"names":["generatePrintableHTML","results","t","_results$inputs","_results$inputs2","_results$inputs3","_results$inputs4","_results$inputs5","_results$inputs6","_results$inputs7","_results$inputs8","_results$inputs9","formatNumber","num","decimals","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","formatCurrency","amount","currentLang","language","Math","round","formatPercent","value","toFixed","htmlContent","Date","toLocaleDateString","inputs","shortEdge","longEdge","monthlySalesVolume","salesPricePerUnit","materialCostPerUnit","laborCostPerHour","inkPricePerCC","inkUsage","white","cmyk","primer","inkCostPerUnit","monthlySales","monthlyGrossProfit","grossProfitMargin","paybackPeriod","costPerUnit","operatingHours","itemsPerPrintJob","monthlyPrintJobs","printResults","html","printWindow","window","open","document","write","close"],"sources":["/Users/nicholasgobert/Desktop/Apps/MOSimulator/src/utils/pdf/generatePDF.js"],"sourcesContent":["/**\n * Generate a printable HTML representation of the simulation results\n * @param {Object} results - The simulation results\n * @param {Function} t - Translation function\n * @returns {String} - HTML content to be printed\n */\nexport const generatePrintableHTML = (results, t) => {\n  // Helper function to format numbers with commas as thousands separators\n  const formatNumber = (num, decimals = 0) => {\n    if (typeof num === 'string') return num;\n    return num.toLocaleString(undefined, { \n      minimumFractionDigits: decimals,\n      maximumFractionDigits: decimals\n    });\n  };\n\n  // Helper function to format currency\n  const formatCurrency = (amount) => {\n    // Get the current language from the results\n    const currentLang = results.language || 'en';\n    \n    // Place the currency symbol after the number for Japanese\n    if (currentLang === 'ja') {\n      return `${formatNumber(Math.round(amount))}${t('currency')}`;\n    }\n    // Default format for other languages\n    return `${t('currency')} ${formatNumber(Math.round(amount))}`;\n  };\n\n  // Helper function to format percentage\n  const formatPercent = (value) => {\n    return `${value.toFixed(2)}%`;\n  };\n\n  // Generate HTML content with 2-column layout\n  const htmlContent = `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <title>${t('mo180Simulator')} - ${t('simulationResults')}</title>\n      <meta charset=\"UTF-8\">\n      <style>\n        body {\n          font-family: Arial, sans-serif;\n          padding: 20px;\n          max-width: 1000px;\n          margin: 0 auto;\n          color: #333;\n        }\n        h1, h2, h3 {\n          color: #008d70;\n        }\n        .header {\n          border-bottom: 2px solid #008d70;\n          padding-bottom: 10px;\n          margin-bottom: 20px;\n        }\n        .date {\n          font-size: 14px;\n          color: #777;\n          text-align: right;\n          margin-bottom: 20px;\n        }\n        .content-wrapper {\n          display: flex;\n          flex-direction: row;\n          gap: 30px;\n        }\n        .left-column {\n          flex: 0 0 35%;\n        }\n        .right-column {\n          flex: 0 0 60%;\n        }\n        table {\n          width: 100%;\n          border-collapse: collapse;\n          margin-bottom: 30px;\n        }\n        th {\n          background-color: #008d70;\n          color: white;\n          padding: 10px;\n          text-align: left;\n        }\n        td {\n          padding: 8px;\n          border-bottom: 1px solid #ddd;\n        }\n        tr:nth-child(even) {\n          background-color: #f2f2f2;\n        }\n        .value-cell {\n          text-align: right;\n        }\n        .parameters-table {\n          background-color: #f9f9f9;\n          border: 1px solid #ddd;\n        }\n        .parameters-table th {\n          background-color: #006b55;\n        }\n        .footer {\n          margin-top: 30px;\n          text-align: center;\n          color: #777;\n          font-size: 12px;\n          border-top: 1px solid #ddd;\n          padding-top: 10px;\n        }\n        .summary-section {\n          background-color: #f0f9f7;\n          border-radius: 8px;\n          padding: 15px;\n          margin-bottom: 30px;\n          border: 1px solid #b3e0d9;\n        }\n        .summary-table {\n          border: none;\n          margin-bottom: 0;\n        }\n        .summary-table td {\n          border-bottom: 1px solid #b3e0d9;\n        }\n        .summary-table tr:last-child td {\n          border-bottom: none;\n        }\n        @media print {\n          body {\n            padding: 0;\n          }\n          .no-print {\n            display: none;\n          }\n          .content-wrapper {\n            display: flex;\n            flex-direction: row;\n          }\n          .left-column {\n            width: 35%;\n          }\n          .right-column {\n            width: 60%;\n          }\n        }\n      </style>\n    </head>\n    <body>\n      <div class=\"header\">\n        <h1>${t('mo180Simulator')}</h1>\n        <h2>${t('simulationResults')}</h2>\n      </div>\n      \n      <div class=\"date\">\n        ${t('generatedOn')}: ${new Date().toLocaleDateString()}\n      </div>\n      \n      <div class=\"content-wrapper\">\n        <!-- Left column - Input parameters -->\n        <div class=\"left-column\">\n          <h3>${t('simulationParameters')}</h3>\n          <table class=\"parameters-table\">\n            <tr>\n              <th>${t('parameter')}</th>\n              <th>${t('value')}</th>\n            </tr>\n            <tr>\n              <td>${t('productDimensions')}</td>\n              <td class=\"value-cell\">${results.inputs?.shortEdge || 0} x ${results.inputs?.longEdge || 0} mm</td>\n            </tr>\n            <tr>\n              <td>${t('monthlySalesTarget')}</td>\n              <td class=\"value-cell\">${formatNumber(results.inputs?.monthlySalesVolume || 0)} ${t('units')}</td>\n            </tr>\n            <tr>\n              <td>${t('salesPricePerUnit')}</td>\n              <td class=\"value-cell\">${formatCurrency(results.inputs?.salesPricePerUnit || 0)}</td>\n            </tr>\n            <tr>\n              <td>${t('materialCostPerUnit')}</td>\n              <td class=\"value-cell\">${formatCurrency(results.inputs?.materialCostPerUnit || 0)}</td>\n            </tr>\n            <tr>\n              <td>${t('laborCostPerHour')}</td>\n              <td class=\"value-cell\">${formatCurrency(results.inputs?.laborCostPerHour || 0)}</td>\n            </tr>\n            <tr>\n              <td>${t('inkPrice')}</td>\n              <td class=\"value-cell\">${results.inputs?.inkPricePerCC || 0} ${t('currency')}/${t('cc')}</td>\n            </tr>\n          </table>\n          \n          <h3>${t('inkUsagePerItem')}</h3>\n          <table>\n            <tr>\n              <th>${t('inkType')}</th>\n              <th>${t('volume')}</th>\n            </tr>\n            <tr>\n              <td>${t('white')}</td>\n              <td class=\"value-cell\">${results.inkUsage.white} ${t('cc')}</td>\n            </tr>\n            <tr>\n              <td>${t('cmyk')}</td>\n              <td class=\"value-cell\">${results.inkUsage.cmyk} ${t('cc')}</td>\n            </tr>\n            <tr>\n              <td>${t('primer')}</td>\n              <td class=\"value-cell\">${results.inkUsage.primer} ${t('cc')}</td>\n            </tr>\n            <tr>\n              <td>${t('inkCostPerUnit')}</td>\n              <td class=\"value-cell\">${formatCurrency(results.inkCostPerUnit)}</td>\n            </tr>\n          </table>\n        </div>\n        \n        <!-- Right column - Results -->\n        <div class=\"right-column\">\n          <div class=\"summary-section\">\n            <h3>${t('keySummary')}</h3>\n            <table class=\"summary-table\">\n              <tr>\n                <td><strong>${t('monthlySales')}</strong></td>\n                <td class=\"value-cell\"><strong>${formatCurrency(results.monthlySales)}</strong></td>\n              </tr>\n              <tr>\n                <td><strong>${t('monthlyGrossProfit')}</strong></td>\n                <td class=\"value-cell\"><strong>${formatCurrency(results.monthlyGrossProfit)}</strong></td>\n              </tr>\n              <tr>\n                <td><strong>${t('grossProfitMargin')}</strong></td>\n                <td class=\"value-cell\"><strong>${formatPercent(results.grossProfitMargin)}</strong></td>\n              </tr>\n              <tr>\n                <td><strong>${t('investmentPaybackPeriod')}</strong></td>\n                <td class=\"value-cell\"><strong>${results.paybackPeriod === '-' ? 'N/A' : `${results.paybackPeriod.toFixed(1)} ${t('months')}`}</strong></td>\n              </tr>\n            </table>\n          </div>\n          \n          <h3>${t('costBreakdownPerUnit')}</h3>\n          <table>\n            <tr>\n              <th>${t('metric')}</th>\n              <th>${t('value')}</th>\n            </tr>\n            <tr>\n              <td>${t('costPerUnit')}</td>\n              <td class=\"value-cell\">${formatCurrency(results.costPerUnit)}</td>\n            </tr>\n            <tr>\n              <td>${t('material')}</td>\n              <td class=\"value-cell\">${formatCurrency(results.inputs?.materialCostPerUnit || 0)}</td>\n            </tr>\n            <tr>\n              <td>${t('ink')}</td>\n              <td class=\"value-cell\">${formatCurrency(results.inkCostPerUnit)}</td>\n            </tr>\n            <tr>\n              <td>${t('labor')}</td>\n              <td class=\"value-cell\">${formatCurrency((results.costPerUnit || 0) - (results.inputs?.materialCostPerUnit || 0) - (results.inkCostPerUnit || 0))}</td>\n            </tr>\n          </table>\n          \n          <h3>${t('productionDetails')}</h3>\n          <table>\n            <tr>\n              <th>${t('metric')}</th>\n              <th>${t('value')}</th>\n            </tr>\n            <tr>\n              <td>${t('operatingHours')}</td>\n              <td class=\"value-cell\">${results.operatingHours.toFixed(1)} ${t('hours')}</td>\n            </tr>\n            <tr>\n              <td>${t('itemsPerPrintJob')}</td>\n              <td class=\"value-cell\">${formatNumber(results.itemsPerPrintJob)} ${t('units')}</td>\n            </tr>\n            <tr>\n              <td>${t('monthlyPrintJobs')}</td>\n              <td class=\"value-cell\">${formatNumber(results.monthlyPrintJobs)} ${t('jobs')}</td>\n            </tr>\n          </table>\n        </div>\n      </div>\n      \n      <div class=\"footer\">\n        Roland DG MO-180 UV Printer | ${t('mo180Simulator')} | ${new Date().toLocaleDateString()}\n      </div>\n      \n      <button class=\"no-print\" onclick=\"window.print()\" style=\"margin-top: 20px; padding: 10px 20px; background-color: #008d70; color: white; border: none; border-radius: 4px; cursor: pointer;\">\n        ${t('downloadPDF')}\n      </button>\n    </body>\n    </html>\n  `;\n\n  return htmlContent;\n};\n\n/**\n * Open a new window with printable content\n * @param {Object} results - The simulation results\n * @param {Function} t - Translation function\n */\nexport const printResults = (results, t) => {\n  const html = generatePrintableHTML(results, t);\n  const printWindow = window.open('', '_blank');\n  printWindow.document.write(html);\n  printWindow.document.close();\n  // The user can click the print button in the new window\n};\n\nexport default printResults;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}