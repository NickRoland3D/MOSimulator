{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasgobert/Desktop/Apps/MO180SalesSimulator/src/components/Charts/PaybackGauge.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\n/**\n * PaybackGauge Component\n * Clean, minimal design with standard colors and improved spacing\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaybackGauge = ({\n  paybackPeriod\n}) => {\n  _s();\n  const theme = useTheme();\n  const canvasRef = useRef(null);\n\n  // Handle \"no profit\" case\n  const noProfitCase = paybackPeriod === '-';\n\n  // Define standard colors for the gauge segments\n  const colors = {\n    low: '#d84d9f',\n    // Standard magenta for 0-25 months\n    medium: '#f5b040',\n    // Standard orange for 25-50 months\n    high: '#20816e',\n    // Standard teal for 50-75 months\n    noProfit: '#cccccc' // Gray for no profit\n  };\n\n  // Get the value color based on the gauge section\n  const getValueColor = () => {\n    if (noProfitCase) return '#999999';\n    if (paybackPeriod <= 25) return colors.low;\n    if (paybackPeriod <= 50) return colors.medium;\n    return colors.high;\n  };\n\n  // Draw the gauge using canvas\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    const width = canvas.width;\n    const height = canvas.height;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n\n    // Center of the gauge\n    const centerX = width / 2;\n    const centerY = height * 0.6; // Position gauge higher in the canvas\n\n    // Gauge radius\n    const radius = Math.min(centerX, centerY) * 0.8;\n\n    // Gauge angles\n    const startAngle = Math.PI; // 180 degrees (left)\n    const endAngle = 2 * Math.PI; // 360 degrees (right)\n    const totalAngle = endAngle - startAngle;\n\n    // Gauge thickness\n    const thickness = radius * 0.15;\n\n    // Draw the gauge background (3 colored segments)\n    const drawGaugeSegment = (startPercent, endPercent, color) => {\n      const segmentStartAngle = startAngle + startPercent * totalAngle;\n      const segmentEndAngle = startAngle + endPercent * totalAngle;\n      ctx.beginPath();\n      ctx.arc(centerX, centerY, radius, segmentStartAngle, segmentEndAngle);\n      ctx.arc(centerX, centerY, radius - thickness, segmentEndAngle, segmentStartAngle, true);\n      ctx.closePath();\n      ctx.fillStyle = color;\n      ctx.fill();\n    };\n\n    // Draw three colored segments\n    drawGaugeSegment(0, 1 / 3, colors.low); // Magenta (0-25 months)\n    drawGaugeSegment(1 / 3, 2 / 3, colors.medium); // Orange (25-50 months)\n    drawGaugeSegment(2 / 3, 1, colors.high); // Teal (50-75 months)\n\n    // Draw minimal but essential labels\n    ctx.fillStyle = '#999999';\n    ctx.font = '11px Arial';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    // Only draw labels for 0, 15, 30, 45, 60, 75\n    const majorTicks = [0, 15, 30, 45, 60, 75];\n    for (let i of majorTicks) {\n      const percent = i / 75;\n      const angle = startAngle + percent * totalAngle;\n\n      // Draw label\n      const labelX = centerX + (radius + 20) * Math.cos(angle);\n      const labelY = centerY + (radius + 20) * Math.sin(angle);\n      ctx.fillText(i.toString(), labelX, labelY);\n    }\n\n    // Calculate needle position based on payback period\n    let needleValue = noProfitCase ? 75 : Math.min(paybackPeriod, 75);\n    const needlePercent = needleValue / 75;\n    const needleAngle = startAngle + needlePercent * totalAngle;\n\n    // Draw simplified needle - thin black line\n    const needleLength = radius * 0.9;\n    ctx.beginPath();\n    ctx.moveTo(centerX, centerY);\n    ctx.lineTo(centerX + needleLength * Math.cos(needleAngle), centerY + needleLength * Math.sin(needleAngle));\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = '#000000';\n    ctx.stroke();\n\n    // Draw center pivot (white circle)\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, 7, 0, Math.PI * 2);\n    ctx.fillStyle = '#ffffff';\n    ctx.strokeStyle = '#dddddd';\n    ctx.lineWidth = 1;\n    ctx.fill();\n    ctx.stroke();\n  }, [paybackPeriod, noProfitCase, colors]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      py: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Investment Payback Period\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'relative',\n        width: '100%',\n        height: '220px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 400,\n        height: 250,\n        style: {\n          maxWidth: '100%',\n          maxHeight: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        sx: {\n          position: 'absolute',\n          bottom: '20px',\n          right: '30%',\n          // Position it to the right side\n          fontWeight: 'bold',\n          color: getValueColor(),\n          fontSize: '4rem'\n        },\n        children: noProfitCase ? '-' : Math.round(paybackPeriod)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      align: \"center\",\n      sx: {\n        mt: 3,\n        fontWeight: 500\n      },\n      children: noProfitCase ? 'No profit with current parameters' : paybackPeriod <= 25 ? 'Excellent payback period' : paybackPeriod <= 50 ? 'Good payback period' : 'Extended payback period'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(PaybackGauge, \"kdrREFZ0jLaicLxmNBI1E0NiK+c=\", false, function () {\n  return [useTheme];\n});\n_c = PaybackGauge;\nexport default PaybackGauge;\nvar _c;\n$RefreshReg$(_c, \"PaybackGauge\");","map":{"version":3,"names":["React","useEffect","useRef","Box","Typography","useTheme","jsxDEV","_jsxDEV","PaybackGauge","paybackPeriod","_s","theme","canvasRef","noProfitCase","colors","low","medium","high","noProfit","getValueColor","canvas","current","ctx","getContext","width","height","clearRect","centerX","centerY","radius","Math","min","startAngle","PI","endAngle","totalAngle","thickness","drawGaugeSegment","startPercent","endPercent","color","segmentStartAngle","segmentEndAngle","beginPath","arc","closePath","fillStyle","fill","font","textAlign","textBaseline","majorTicks","i","percent","angle","labelX","cos","labelY","sin","fillText","toString","needleValue","needlePercent","needleAngle","needleLength","moveTo","lineTo","lineWidth","strokeStyle","stroke","sx","display","flexDirection","alignItems","py","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","position","justifyContent","mt","ref","style","maxWidth","maxHeight","bottom","right","fontWeight","fontSize","round","_c","$RefreshReg$"],"sources":["/Users/nicholasgobert/Desktop/Apps/MO180SalesSimulator/src/components/Charts/PaybackGauge.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\n/**\n * PaybackGauge Component\n * Clean, minimal design with standard colors and improved spacing\n */\nconst PaybackGauge = ({ paybackPeriod }) => {\n  const theme = useTheme();\n  const canvasRef = useRef(null);\n  \n  // Handle \"no profit\" case\n  const noProfitCase = paybackPeriod === '-';\n  \n  // Define standard colors for the gauge segments\n  const colors = {\n    low: '#d84d9f',      // Standard magenta for 0-25 months\n    medium: '#f5b040',   // Standard orange for 25-50 months\n    high: '#20816e',     // Standard teal for 50-75 months\n    noProfit: '#cccccc'  // Gray for no profit\n  };\n  \n  // Get the value color based on the gauge section\n  const getValueColor = () => {\n    if (noProfitCase) return '#999999';\n    if (paybackPeriod <= 25) return colors.low;\n    if (paybackPeriod <= 50) return colors.medium;\n    return colors.high;\n  };\n  \n  // Draw the gauge using canvas\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const ctx = canvas.getContext('2d');\n    const width = canvas.width;\n    const height = canvas.height;\n    \n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n    \n    // Center of the gauge\n    const centerX = width / 2;\n    const centerY = height * 0.6; // Position gauge higher in the canvas\n    \n    // Gauge radius\n    const radius = Math.min(centerX, centerY) * 0.8;\n    \n    // Gauge angles\n    const startAngle = Math.PI;        // 180 degrees (left)\n    const endAngle = 2 * Math.PI;      // 360 degrees (right)\n    const totalAngle = endAngle - startAngle;\n    \n    // Gauge thickness\n    const thickness = radius * 0.15;\n    \n    // Draw the gauge background (3 colored segments)\n    const drawGaugeSegment = (startPercent, endPercent, color) => {\n      const segmentStartAngle = startAngle + (startPercent * totalAngle);\n      const segmentEndAngle = startAngle + (endPercent * totalAngle);\n      \n      ctx.beginPath();\n      ctx.arc(centerX, centerY, radius, segmentStartAngle, segmentEndAngle);\n      ctx.arc(centerX, centerY, radius - thickness, segmentEndAngle, segmentStartAngle, true);\n      ctx.closePath();\n      ctx.fillStyle = color;\n      ctx.fill();\n    };\n    \n    // Draw three colored segments\n    drawGaugeSegment(0, 1/3, colors.low);      // Magenta (0-25 months)\n    drawGaugeSegment(1/3, 2/3, colors.medium); // Orange (25-50 months)\n    drawGaugeSegment(2/3, 1, colors.high);     // Teal (50-75 months)\n    \n    // Draw minimal but essential labels\n    ctx.fillStyle = '#999999';\n    ctx.font = '11px Arial';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    \n    // Only draw labels for 0, 15, 30, 45, 60, 75\n    const majorTicks = [0, 15, 30, 45, 60, 75];\n    \n    for (let i of majorTicks) {\n      const percent = i / 75;\n      const angle = startAngle + (percent * totalAngle);\n      \n      // Draw label\n      const labelX = centerX + (radius + 20) * Math.cos(angle);\n      const labelY = centerY + (radius + 20) * Math.sin(angle);\n      ctx.fillText(i.toString(), labelX, labelY);\n    }\n    \n    // Calculate needle position based on payback period\n    let needleValue = noProfitCase ? 75 : Math.min(paybackPeriod, 75);\n    const needlePercent = needleValue / 75;\n    const needleAngle = startAngle + (needlePercent * totalAngle);\n    \n    // Draw simplified needle - thin black line\n    const needleLength = radius * 0.9;\n    \n    ctx.beginPath();\n    ctx.moveTo(centerX, centerY);\n    ctx.lineTo(\n      centerX + needleLength * Math.cos(needleAngle),\n      centerY + needleLength * Math.sin(needleAngle)\n    );\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = '#000000';\n    ctx.stroke();\n    \n    // Draw center pivot (white circle)\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, 7, 0, Math.PI * 2);\n    ctx.fillStyle = '#ffffff';\n    ctx.strokeStyle = '#dddddd';\n    ctx.lineWidth = 1;\n    ctx.fill();\n    ctx.stroke();\n    \n  }, [paybackPeriod, noProfitCase, colors]);\n  \n  return (\n    <Box sx={{ \n      width: '100%', \n      height: '100%', \n      display: 'flex', \n      flexDirection: 'column', \n      alignItems: 'center',\n      py: 3\n    }}>\n      <Typography variant=\"h6\" align=\"center\" gutterBottom>\n        Investment Payback Period\n      </Typography>\n      \n      {/* Container with better spacing */}\n      <Box sx={{ \n        position: 'relative', \n        width: '100%', \n        height: '220px', \n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        mt: 2 \n      }}>\n        {/* Canvas for gauge */}\n        <canvas ref={canvasRef} width={400} height={250} style={{ maxWidth: '100%', maxHeight: '100%' }} />\n        \n        {/* Value Display - Position it near the bottom right of the gauge */}\n        <Typography\n          variant=\"h2\"\n          sx={{\n            position: 'absolute',\n            bottom: '20px',\n            right: '30%', // Position it to the right side\n            fontWeight: 'bold',\n            color: getValueColor(),\n            fontSize: '4rem',\n          }}\n        >\n          {noProfitCase ? '-' : Math.round(paybackPeriod)}\n        </Typography>\n      </Box>\n      \n      {/* Status text with better spacing */}\n      <Typography \n        variant=\"body1\" \n        align=\"center\" \n        sx={{ \n          mt: 3,\n          fontWeight: 500 \n        }}\n      >\n        {noProfitCase \n          ? 'No profit with current parameters' \n          : paybackPeriod <= 25 \n            ? 'Excellent payback period' \n            : paybackPeriod <= 50 \n              ? 'Good payback period' \n              : 'Extended payback period'}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default PaybackGauge;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}