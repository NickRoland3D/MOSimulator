{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasgobert/Desktop/Apps/MOSimulator/src/components/SampleImagePanel/SampleImagePanel.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Box, Typography, Divider } from '@mui/material';\nimport { useLanguage } from '../../context/LanguageContext';\n// Alternative way to import images\n// import LisaImage from '../../assets/images/lisa.png';\n\n/**\n * SampleImagePanel Component\n * Displays sample image information for printing examples\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SampleImagePanel = () => {\n  _s();\n  const {\n    language\n  } = useLanguage();\n\n  // Using require for image import as an alternative approach\n  const LisaImage = require('../../assets/images/lisa.png');\n  const captionText = language === 'ja' ? 'このデータを使用して印刷しています' : 'This data is being used for printing';\n  const titleText = language === 'ja' ? 'この画像を印刷した場合' : 'When this image is printed';\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        fontWeight: 600,\n        mb: 1.5,\n        color: 'text.primary'\n      },\n      children: titleText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: LisaImage || '/assets/images/lisa.png' /* Fallback to direct path if import fails */,\n        alt: \"Lisa\",\n        onError: e => {\n          console.error('Image failed to load:', e);\n          // Fallback to a direct public path as another option\n          e.target.src = `${process.env.PUBLIC_URL}/assets/images/lisa.png`;\n        },\n        style: {\n          maxWidth: '100%',\n          height: 'auto',\n          borderRadius: '8px',\n          boxShadow: '0 2px 8px rgba(0,0,0,0.15)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      sx: {\n        my: 1.5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      sx: {\n        fontWeight: 500,\n        color: 'text.secondary',\n        textAlign: 'center',\n        mt: 1\n      },\n      children: captionText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(SampleImagePanel, \"d1ORxvPBup+C3Qetit/BVjvgCJk=\", false, function () {\n  return [useLanguage];\n});\n_c = SampleImagePanel;\nexport default SampleImagePanel;\nvar _c;\n$RefreshReg$(_c, \"SampleImagePanel\");","map":{"version":3,"names":["React","Box","Typography","Divider","useLanguage","jsxDEV","_jsxDEV","SampleImagePanel","_s","language","LisaImage","require","captionText","titleText","children","variant","sx","fontWeight","mb","color","fileName","_jsxFileName","lineNumber","columnNumber","width","display","justifyContent","src","alt","onError","e","console","error","target","process","env","PUBLIC_URL","style","maxWidth","height","borderRadius","boxShadow","my","textAlign","mt","_c","$RefreshReg$"],"sources":["/Users/nicholasgobert/Desktop/Apps/MOSimulator/src/components/SampleImagePanel/SampleImagePanel.js"],"sourcesContent":["import React from 'react';\nimport { Box, Typography, Divider } from '@mui/material';\nimport { useLanguage } from '../../context/LanguageContext';\n// Alternative way to import images\n// import LisaImage from '../../assets/images/lisa.png';\n\n/**\n * SampleImagePanel Component\n * Displays sample image information for printing examples\n */\nconst SampleImagePanel = () => {\n  const { language } = useLanguage();\n\n  // Using require for image import as an alternative approach\n  const LisaImage = require('../../assets/images/lisa.png');\n\n  const captionText = language === 'ja' \n    ? 'このデータを使用して印刷しています'\n    : 'This data is being used for printing';\n\n  const titleText = language === 'ja' \n    ? 'この画像を印刷した場合'\n    : 'When this image is printed';\n\n  return (\n    <Box>\n      <Typography \n        variant=\"body1\" \n        sx={{ \n          fontWeight: 600, \n          mb: 1.5,\n          color: 'text.primary' \n        }}\n      >\n        {titleText}\n      </Typography>\n      \n      {/* Display the actual image with a fallback */}\n      <Box \n        sx={{\n          width: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          mb: 2\n        }}\n      >\n        {/* Try both approaches for the image */}\n        <img \n          src={LisaImage || '/assets/images/lisa.png'} /* Fallback to direct path if import fails */\n          alt=\"Lisa\"\n          onError={(e) => {\n            console.error('Image failed to load:', e);\n            // Fallback to a direct public path as another option\n            e.target.src = `${process.env.PUBLIC_URL}/assets/images/lisa.png`;\n          }}\n          style={{\n            maxWidth: '100%',\n            height: 'auto',\n            borderRadius: '8px',\n            boxShadow: '0 2px 8px rgba(0,0,0,0.15)'\n          }}\n        />\n      </Box>\n      \n      <Divider sx={{ my: 1.5 }} />\n      \n      <Typography \n        variant=\"body2\" \n        sx={{ \n          fontWeight: 500, \n          color: 'text.secondary',\n          textAlign: 'center',\n          mt: 1\n        }}\n      >\n        {captionText}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default SampleImagePanel;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,UAAU,EAAEC,OAAO,QAAQ,eAAe;AACxD,SAASC,WAAW,QAAQ,+BAA+B;AAC3D;AACA;;AAEA;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM;IAAEC;EAAS,CAAC,GAAGL,WAAW,CAAC,CAAC;;EAElC;EACA,MAAMM,SAAS,GAAGC,OAAO,CAAC,8BAA8B,CAAC;EAEzD,MAAMC,WAAW,GAAGH,QAAQ,KAAK,IAAI,GACjC,mBAAmB,GACnB,sCAAsC;EAE1C,MAAMI,SAAS,GAAGJ,QAAQ,KAAK,IAAI,GAC/B,aAAa,GACb,4BAA4B;EAEhC,oBACEH,OAAA,CAACL,GAAG;IAAAa,QAAA,gBACFR,OAAA,CAACJ,UAAU;MACTa,OAAO,EAAC,OAAO;MACfC,EAAE,EAAE;QACFC,UAAU,EAAE,GAAG;QACfC,EAAE,EAAE,GAAG;QACPC,KAAK,EAAE;MACT,CAAE;MAAAL,QAAA,EAEDD;IAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAGbjB,OAAA,CAACL,GAAG;MACFe,EAAE,EAAE;QACFQ,KAAK,EAAE,MAAM;QACbC,OAAO,EAAE,MAAM;QACfC,cAAc,EAAE,QAAQ;QACxBR,EAAE,EAAE;MACN,CAAE;MAAAJ,QAAA,eAGFR,OAAA;QACEqB,GAAG,EAAEjB,SAAS,IAAI,yBAA0B,CAAC;QAC7CkB,GAAG,EAAC,MAAM;QACVC,OAAO,EAAGC,CAAC,IAAK;UACdC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,CAAC,CAAC;UACzC;UACAA,CAAC,CAACG,MAAM,CAACN,GAAG,GAAG,GAAGO,OAAO,CAACC,GAAG,CAACC,UAAU,yBAAyB;QACnE,CAAE;QACFC,KAAK,EAAE;UACLC,QAAQ,EAAE,MAAM;UAChBC,MAAM,EAAE,MAAM;UACdC,YAAY,EAAE,KAAK;UACnBC,SAAS,EAAE;QACb;MAAE;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENjB,OAAA,CAACH,OAAO;MAACa,EAAE,EAAE;QAAE0B,EAAE,EAAE;MAAI;IAAE;MAAAtB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE5BjB,OAAA,CAACJ,UAAU;MACTa,OAAO,EAAC,OAAO;MACfC,EAAE,EAAE;QACFC,UAAU,EAAE,GAAG;QACfE,KAAK,EAAE,gBAAgB;QACvBwB,SAAS,EAAE,QAAQ;QACnBC,EAAE,EAAE;MACN,CAAE;MAAA9B,QAAA,EAEDF;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAACf,EAAA,CArEID,gBAAgB;EAAA,QACCH,WAAW;AAAA;AAAAyC,EAAA,GAD5BtC,gBAAgB;AAuEtB,eAAeA,gBAAgB;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}