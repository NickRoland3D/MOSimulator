{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasgobert/Desktop/Apps/MOSimulator/src/features/visualization/charts/PaybackGauge.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useMemo, useCallback } from 'react';\nimport { Box, Typography, useMediaQuery } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { useLanguage } from '../../../context/LanguageContext';\n\n/**\n * PaybackGauge Component\n * Modern minimal gauge with rounded lines and pastel colors\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaybackGauge = ({\n  paybackPeriod\n}) => {\n  _s();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const {\n    t\n  } = useLanguage(); // Get translation function\n  const canvasRef = useRef(null);\n\n  // Handle \"no profit\" case\n  const noProfitCase = paybackPeriod === '-';\n\n  // Define solid colors for the gauge segments (matching the reference)\n  const colors = useMemo(() => ({\n    good: '#4CAF50',\n    // Solid green for 0-12 months\n    average: '#FF9800',\n    // Solid orange for 12-24 months\n    warning: '#F44336',\n    // Solid red for 24-60 months\n    noProfit: '#9E9E9E' // Solid gray for no profit\n  }), []);\n\n  // Get the needle and value color based on the gauge section\n  const getValueColor = useCallback(() => {\n    if (noProfitCase) return '#9E9E9E'; // Gray\n    if (paybackPeriod <= 12) return '#4CAF50'; // Green\n    if (paybackPeriod <= 24) return '#FF9800'; // Orange\n    return '#F44336'; // Red\n  }, [noProfitCase, paybackPeriod]);\n\n  // Draw the gauge using canvas\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    const width = canvas.width;\n    const height = canvas.height;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n\n    // Center of the gauge\n    const centerX = width / 2;\n    const centerY = height * 0.55; // Position gauge in the middle\n\n    // Gauge radius - smaller on mobile\n    const radius = Math.min(centerX, centerY) * (isMobile ? 0.8 : 0.85);\n\n    // Gauge angles\n    const startAngle = Math.PI; // 180 degrees (left)\n    const endAngle = 2 * Math.PI; // 360 degrees (right)\n    const totalAngle = endAngle - startAngle;\n\n    // Gauge thickness\n    const thickness = radius * (isMobile ? 0.25 : 0.2);\n\n    // Draw a light gray circle border around the gauge\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, radius + 2, startAngle, endAngle);\n    ctx.strokeStyle = '#e0e0e0';\n    ctx.lineWidth = 1;\n    ctx.stroke();\n\n    // Draw the gauge background (3 colored segments with rounded ends)\n    const drawGaugeSegment = (startPercent, endPercent, color) => {\n      const segmentStartAngle = startAngle + startPercent * totalAngle;\n      const segmentEndAngle = startAngle + endPercent * totalAngle;\n      ctx.beginPath();\n      ctx.arc(centerX, centerY, radius, segmentStartAngle, segmentEndAngle);\n      ctx.arc(centerX, centerY, radius - thickness, segmentEndAngle, segmentStartAngle, true);\n      ctx.closePath();\n      ctx.fillStyle = color;\n      ctx.fill();\n    };\n\n    // Draw three colored segments\n    drawGaugeSegment(0, 0.2, colors.good); // Green (0-12 months)\n    drawGaugeSegment(0.2, 0.4, colors.average); // Peach (12-24 months)\n    drawGaugeSegment(0.4, 1, colors.warning); // Pink (24-60 months)\n\n    // Draw minimal labels - smaller for mobile\n    ctx.fillStyle = '#757575';\n    ctx.font = isMobile ? '10px Arial' : '12px Arial';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    // Only draw labels for 0, 12, 24, 60\n    const majorTicks = [0, 12, 24, 60];\n    const labelColors = {\n      0: '#757575',\n      12: '#4CAF50',\n      // Green\n      24: '#FF9800',\n      // Orange\n      60: '#757575'\n    };\n    for (let i of majorTicks) {\n      const percent = i / 60; // Now based on max value of 60\n      const angle = startAngle + percent * totalAngle;\n\n      // Draw label\n      const labelX = centerX + (radius + (isMobile ? 10 : 15)) * Math.cos(angle);\n      const labelY = centerY + (radius + (isMobile ? 10 : 15)) * Math.sin(angle);\n\n      // Set label color\n      ctx.fillStyle = labelColors[i];\n      ctx.fillText(i.toString(), labelX, labelY);\n    }\n\n    // Calculate needle position based on payback period\n    let needleValue = noProfitCase ? 60 : Math.min(paybackPeriod, 60);\n    const needlePercent = needleValue / 60; // Now based on max value of 60\n    const needleAngle = startAngle + needlePercent * totalAngle;\n\n    // Draw thick colored needle\n    const needleLength = radius * 0.85;\n    const needleColor = getValueColor();\n    ctx.beginPath();\n    ctx.moveTo(centerX, centerY);\n    ctx.lineTo(centerX + needleLength * Math.cos(needleAngle), centerY + needleLength * Math.sin(needleAngle));\n    ctx.lineWidth = isMobile ? 6 : 8;\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = needleColor;\n    ctx.stroke();\n\n    // Draw blue circular pivot point\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, isMobile ? 6 : 8, 0, Math.PI * 2);\n    ctx.fillStyle = '#64b5f6'; // Light blue\n    ctx.strokeStyle = '#ffffff';\n    ctx.lineWidth = 2;\n    ctx.fill();\n    ctx.stroke();\n  }, [paybackPeriod, noProfitCase, colors, getValueColor, isMobile]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      py: isMobile ? 1 : 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: isMobile ? \"subtitle1\" : \"h6\",\n      align: \"center\",\n      gutterBottom: true,\n      children: t('investmentPaybackPeriod')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'relative',\n        width: '100%',\n        height: isMobile ? '160px' : '200px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 400,\n        height: 250,\n        style: {\n          maxWidth: '100%',\n          maxHeight: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: isMobile ? \"h4\" : \"h3\",\n      align: \"center\",\n      sx: {\n        fontWeight: 'bold',\n        color: getValueColor(),\n        mt: isMobile ? -1 : -2,\n        mb: isMobile ? 0.5 : 1\n      },\n      children: noProfitCase ? '-' : `${paybackPeriod.toFixed(1)} ${t('months')}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: isMobile ? \"body2\" : \"body1\",\n      align: \"center\",\n      color: \"text.secondary\",\n      sx: {\n        fontWeight: 500\n      },\n      children: noProfitCase ? t('noProfitWithCurrentParameters') : paybackPeriod <= 12 ? t('excellentPaybackPeriod') : paybackPeriod <= 24 ? t('goodPaybackPeriod') : t('extendedPaybackPeriod')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(PaybackGauge, \"CB5BtNhOyVTY/y0bgCPevyva1Ls=\", false, function () {\n  return [useTheme, useMediaQuery, useLanguage];\n});\n_c = PaybackGauge;\nexport default PaybackGauge;\nvar _c;\n$RefreshReg$(_c, \"PaybackGauge\");","map":{"version":3,"names":["React","useEffect","useRef","useMemo","useCallback","Box","Typography","useMediaQuery","useTheme","useLanguage","jsxDEV","_jsxDEV","PaybackGauge","paybackPeriod","_s","theme","isMobile","breakpoints","down","t","canvasRef","noProfitCase","colors","good","average","warning","noProfit","getValueColor","canvas","current","ctx","getContext","width","height","clearRect","centerX","centerY","radius","Math","min","startAngle","PI","endAngle","totalAngle","thickness","beginPath","arc","strokeStyle","lineWidth","stroke","drawGaugeSegment","startPercent","endPercent","color","segmentStartAngle","segmentEndAngle","closePath","fillStyle","fill","font","textAlign","textBaseline","majorTicks","labelColors","i","percent","angle","labelX","cos","labelY","sin","fillText","toString","needleValue","needlePercent","needleAngle","needleLength","needleColor","moveTo","lineTo","lineCap","sx","display","flexDirection","alignItems","py","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","position","justifyContent","ref","style","maxWidth","maxHeight","fontWeight","mt","mb","toFixed","_c","$RefreshReg$"],"sources":["/Users/nicholasgobert/Desktop/Apps/MOSimulator/src/features/visualization/charts/PaybackGauge.js"],"sourcesContent":["import React, { useEffect, useRef, useMemo, useCallback } from 'react';\nimport { Box, Typography, useMediaQuery } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { useLanguage } from '../../../context/LanguageContext';\n\n/**\n * PaybackGauge Component\n * Modern minimal gauge with rounded lines and pastel colors\n */\nconst PaybackGauge = ({ paybackPeriod }) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const { t } = useLanguage(); // Get translation function\n  const canvasRef = useRef(null);\n  \n  // Handle \"no profit\" case\n  const noProfitCase = paybackPeriod === '-';\n  \n  // Define solid colors for the gauge segments (matching the reference)\n  const colors = useMemo(() => ({\n    good: '#4CAF50',      // Solid green for 0-12 months\n    average: '#FF9800',   // Solid orange for 12-24 months\n    warning: '#F44336',   // Solid red for 24-60 months\n    noProfit: '#9E9E9E'   // Solid gray for no profit\n  }), []);\n  \n  // Get the needle and value color based on the gauge section\n  const getValueColor = useCallback(() => {\n    if (noProfitCase) return '#9E9E9E'; // Gray\n    if (paybackPeriod <= 12) return '#4CAF50'; // Green\n    if (paybackPeriod <= 24) return '#FF9800'; // Orange\n    return '#F44336'; // Red\n  }, [noProfitCase, paybackPeriod]);\n  \n  // Draw the gauge using canvas\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const ctx = canvas.getContext('2d');\n    const width = canvas.width;\n    const height = canvas.height;\n    \n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n    \n    // Center of the gauge\n    const centerX = width / 2;\n    const centerY = height * 0.55; // Position gauge in the middle\n    \n    // Gauge radius - smaller on mobile\n    const radius = Math.min(centerX, centerY) * (isMobile ? 0.8 : 0.85);\n    \n    // Gauge angles\n    const startAngle = Math.PI;        // 180 degrees (left)\n    const endAngle = 2 * Math.PI;      // 360 degrees (right)\n    const totalAngle = endAngle - startAngle;\n    \n    // Gauge thickness\n    const thickness = radius * (isMobile ? 0.25 : 0.2);\n    \n    // Draw a light gray circle border around the gauge\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, radius + 2, startAngle, endAngle);\n    ctx.strokeStyle = '#e0e0e0';\n    ctx.lineWidth = 1;\n    ctx.stroke();\n    \n    // Draw the gauge background (3 colored segments with rounded ends)\n    const drawGaugeSegment = (startPercent, endPercent, color) => {\n      const segmentStartAngle = startAngle + (startPercent * totalAngle);\n      const segmentEndAngle = startAngle + (endPercent * totalAngle);\n      \n      ctx.beginPath();\n      ctx.arc(centerX, centerY, radius, segmentStartAngle, segmentEndAngle);\n      ctx.arc(centerX, centerY, radius - thickness, segmentEndAngle, segmentStartAngle, true);\n      ctx.closePath();\n      ctx.fillStyle = color;\n      ctx.fill();\n    };\n    \n    // Draw three colored segments\n    drawGaugeSegment(0, 0.2, colors.good);     // Green (0-12 months)\n    drawGaugeSegment(0.2, 0.4, colors.average); // Peach (12-24 months)\n    drawGaugeSegment(0.4, 1, colors.warning);  // Pink (24-60 months)\n    \n    // Draw minimal labels - smaller for mobile\n    ctx.fillStyle = '#757575';\n    ctx.font = isMobile ? '10px Arial' : '12px Arial';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    \n    // Only draw labels for 0, 12, 24, 60\n    const majorTicks = [0, 12, 24, 60];\n    const labelColors = {\n      0: '#757575',\n      12: '#4CAF50', // Green\n      24: '#FF9800', // Orange\n      60: '#757575'\n    };\n    \n    for (let i of majorTicks) {\n      const percent = i / 60; // Now based on max value of 60\n      const angle = startAngle + (percent * totalAngle);\n      \n      // Draw label\n      const labelX = centerX + (radius + (isMobile ? 10 : 15)) * Math.cos(angle);\n      const labelY = centerY + (radius + (isMobile ? 10 : 15)) * Math.sin(angle);\n      \n      // Set label color\n      ctx.fillStyle = labelColors[i];\n      ctx.fillText(i.toString(), labelX, labelY);\n    }\n    \n    // Calculate needle position based on payback period\n    let needleValue = noProfitCase ? 60 : Math.min(paybackPeriod, 60);\n    const needlePercent = needleValue / 60; // Now based on max value of 60\n    const needleAngle = startAngle + (needlePercent * totalAngle);\n    \n    // Draw thick colored needle\n    const needleLength = radius * 0.85;\n    const needleColor = getValueColor();\n    \n    ctx.beginPath();\n    ctx.moveTo(centerX, centerY);\n    ctx.lineTo(\n      centerX + needleLength * Math.cos(needleAngle),\n      centerY + needleLength * Math.sin(needleAngle)\n    );\n    ctx.lineWidth = isMobile ? 6 : 8;\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = needleColor;\n    ctx.stroke();\n    \n    // Draw blue circular pivot point\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, isMobile ? 6 : 8, 0, Math.PI * 2);\n    ctx.fillStyle = '#64b5f6'; // Light blue\n    ctx.strokeStyle = '#ffffff';\n    ctx.lineWidth = 2;\n    ctx.fill();\n    ctx.stroke();\n    \n  }, [paybackPeriod, noProfitCase, colors, getValueColor, isMobile]);\n  \n  return (\n    <Box sx={{ \n      width: '100%', \n      height: '100%', \n      display: 'flex', \n      flexDirection: 'column', \n      alignItems: 'center',\n      py: isMobile ? 1 : 2\n    }}>\n      <Typography variant={isMobile ? \"subtitle1\" : \"h6\"} align=\"center\" gutterBottom>\n        {t('investmentPaybackPeriod')}\n      </Typography>\n      \n      <Box sx={{ \n        position: 'relative', \n        width: '100%', \n        height: isMobile ? '160px' : '200px', \n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}>\n        <canvas ref={canvasRef} width={400} height={250} style={{ maxWidth: '100%', maxHeight: '100%' }} />\n      </Box>\n      \n      {/* Value display - large, colored, and centered */}\n      <Typography\n        variant={isMobile ? \"h4\" : \"h3\"}\n        align=\"center\"\n        sx={{\n          fontWeight: 'bold',\n          color: getValueColor(),\n          mt: isMobile ? -1 : -2,\n          mb: isMobile ? 0.5 : 1\n        }}\n      >\n        {noProfitCase ? '-' : `${paybackPeriod.toFixed(1)} ${t('months')}`}\n      </Typography>\n      \n      <Typography \n        variant={isMobile ? \"body2\" : \"body1\"}\n        align=\"center\" \n        color=\"text.secondary\"\n        sx={{ fontWeight: 500 }}\n      >\n        {noProfitCase \n          ? t('noProfitWithCurrentParameters') \n          : paybackPeriod <= 12 \n            ? t('excellentPaybackPeriod') \n            : paybackPeriod <= 24 \n              ? t('goodPaybackPeriod') \n              : t('extendedPaybackPeriod')}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default PaybackGauge;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}