{"ast":null,"code":"/**\n * Generate a printable HTML representation of the simulation results\n * @param {Object} results - The simulation results\n * @param {Function} t - Translation function\n * @returns {String} - HTML content to be printed\n */\nexport const generatePrintableHTML = (results, t) => {\n  var _results$inputs, _results$inputs2, _results$inputs3, _results$inputs4, _results$inputs5, _results$inputs6, _results$inputs7;\n  // Helper function to format numbers with commas as thousands separators\n  const formatNumber = (num, decimals = 0) => {\n    if (typeof num === 'string') return num;\n    return num.toLocaleString(undefined, {\n      minimumFractionDigits: decimals,\n      maximumFractionDigits: decimals\n    });\n  };\n\n  // Helper function to format currency\n  const formatCurrency = amount => {\n    // Get the current language from the results\n    const currentLang = results.language || 'en';\n\n    // Place the currency symbol after the number for Japanese\n    if (currentLang === 'ja') {\n      return `${formatNumber(Math.round(amount))}${t('currency')}`;\n    }\n    // Default format for other languages\n    return `${t('currency')} ${formatNumber(Math.round(amount))}`;\n  };\n\n  // Helper function to format percentage\n  const formatPercent = value => {\n    return `${value.toFixed(2)}%`;\n  };\n\n  // Generate HTML content\n  const htmlContent = `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <title>${t('mo180Simulator')} - ${t('simulationResults')}</title>\n      <meta charset=\"UTF-8\">\n      <style>\n        body {\n          font-family: Arial, sans-serif;\n          padding: 20px;\n          max-width: 800px;\n          margin: 0 auto;\n          color: #333;\n        }\n        h1, h2, h3 {\n          color: #008d70;\n        }\n        .header {\n          border-bottom: 2px solid #008d70;\n          padding-bottom: 10px;\n          margin-bottom: 20px;\n        }\n        .date {\n          font-size: 14px;\n          color: #777;\n          text-align: right;\n          margin-bottom: 20px;\n        }\n        table {\n          width: 100%;\n          border-collapse: collapse;\n          margin-bottom: 30px;\n        }\n        th {\n          background-color: #008d70;\n          color: white;\n          padding: 10px;\n          text-align: left;\n        }\n        td {\n          padding: 8px;\n          border-bottom: 1px solid #ddd;\n        }\n        tr:nth-child(even) {\n          background-color: #f2f2f2;\n        }\n        .value-cell {\n          text-align: right;\n        }\n        .footer {\n          margin-top: 30px;\n          text-align: center;\n          color: #777;\n          font-size: 12px;\n          border-top: 1px solid #ddd;\n          padding-top: 10px;\n        }\n        @media print {\n          body {\n            padding: 0;\n          }\n          .no-print {\n            display: none;\n          }\n        }\n      </style>\n    </head>\n    <body>\n      <div class=\"header\">\n        <h1>${t('mo180Simulator')}</h1>\n        <h2>${t('simulationResults')}</h2>\n      </div>\n      \n      <div class=\"date\">\n        ${t('generatedOn')}: ${new Date().toLocaleDateString()}\n      </div>\n      \n      <h3>${t('keySummary')}</h3>\n      <table>\n        <tr>\n          <th>${t('metric')}</th>\n          <th>${t('value')}</th>\n        </tr>\n        <tr>\n          <td>${t('monthlySales')}</td>\n          <td class=\"value-cell\">${formatCurrency(results.monthlySales)}</td>\n        </tr>\n        <tr>\n          <td>${t('monthlyGrossProfit')}</td>\n          <td class=\"value-cell\">${formatCurrency(results.monthlyGrossProfit)}</td>\n        </tr>\n        <tr>\n          <td>${t('grossProfitMargin')}</td>\n          <td class=\"value-cell\">${formatPercent(results.grossProfitMargin)}</td>\n        </tr>\n        <tr>\n          <td>${t('investmentPaybackPeriod')}</td>\n          <td class=\"value-cell\">${results.paybackPeriod === '-' ? 'N/A' : `${results.paybackPeriod.toFixed(1)} ${t('months')}`}</td>\n        </tr>\n        <tr>\n          <td>${t('costPerUnit')}</td>\n          <td class=\"value-cell\">${formatCurrency(results.costPerUnit)}</td>\n        </tr>\n        <tr>\n          <td>${t('operatingHours')}</td>\n          <td class=\"value-cell\">${results.operatingHours.toFixed(1)} ${t('hours')}</td>\n        </tr>\n      </table>\n      \n      <h3>${t('productionDetails')}</h3>\n      <table>\n        <tr>\n          <th>${t('metric')}</th>\n          <th>${t('value')}</th>\n        </tr>\n        <tr>\n          <td>${t('itemsPerPrintJob')}</td>\n          <td class=\"value-cell\">${formatNumber(results.itemsPerPrintJob)} ${t('units')}</td>\n        </tr>\n        <tr>\n          <td>${t('monthlyPrintJobs')}</td>\n          <td class=\"value-cell\">${formatNumber(results.monthlyPrintJobs)} ${t('jobs')}</td>\n        </tr>\n      </table>\n      \n      <h3>${t('inkUsagePerItem')}</h3>\n      <table>\n        <tr>\n          <th>${t('inkType')}</th>\n          <th>${t('volume')}</th>\n        </tr>\n        <tr>\n          <td>${t('white')}</td>\n          <td class=\"value-cell\">${results.inkUsage.white} ${t('cc')}</td>\n        </tr>\n        <tr>\n          <td>${t('cmyk')}</td>\n          <td class=\"value-cell\">${results.inkUsage.cmyk} ${t('cc')}</td>\n        </tr>\n        <tr>\n          <td>${t('primer')}</td>\n          <td class=\"value-cell\">${results.inkUsage.primer} ${t('cc')}</td>\n        </tr>\n        <tr>\n          <td>${t('inkCostPerUnit')}</td>\n          <td class=\"value-cell\">${formatCurrency(results.inkCostPerUnit)}</td>\n        </tr>\n      </table>\n      \n      <h3>${t('simulationParameters')}</h3>\n      <table>\n        <tr>\n          <th>${t('parameter')}</th>\n          <th>${t('value')}</th>\n        </tr>\n        <tr>\n          <td>${t('productDimensions')}</td>\n          <td class=\"value-cell\">${((_results$inputs = results.inputs) === null || _results$inputs === void 0 ? void 0 : _results$inputs.shortEdge) || 0} x ${((_results$inputs2 = results.inputs) === null || _results$inputs2 === void 0 ? void 0 : _results$inputs2.longEdge) || 0} mm</td>\n        </tr>\n        <tr>\n          <td>${t('monthlySalesTarget')}</td>\n          <td class=\"value-cell\">${formatNumber(((_results$inputs3 = results.inputs) === null || _results$inputs3 === void 0 ? void 0 : _results$inputs3.monthlySalesVolume) || 0)} ${t('units')}</td>\n        </tr>\n        <tr>\n          <td>${t('salesPricePerUnit')}</td>\n          <td class=\"value-cell\">${formatCurrency(((_results$inputs4 = results.inputs) === null || _results$inputs4 === void 0 ? void 0 : _results$inputs4.salesPricePerUnit) || 0)}</td>\n        </tr>\n        <tr>\n          <td>${t('materialCostPerUnit')}</td>\n          <td class=\"value-cell\">${formatCurrency(((_results$inputs5 = results.inputs) === null || _results$inputs5 === void 0 ? void 0 : _results$inputs5.materialCostPerUnit) || 0)}</td>\n        </tr>\n        <tr>\n          <td>${t('laborCostPerHour')}</td>\n          <td class=\"value-cell\">${formatCurrency(((_results$inputs6 = results.inputs) === null || _results$inputs6 === void 0 ? void 0 : _results$inputs6.laborCostPerHour) || 0)}</td>\n        </tr>\n        <tr>\n          <td>${t('inkPrice')}</td>\n          <td class=\"value-cell\">${((_results$inputs7 = results.inputs) === null || _results$inputs7 === void 0 ? void 0 : _results$inputs7.inkPricePerCC) || 0} ${t('currency')}/${t('cc')}</td>\n        </tr>\n      </table>\n      \n      <div class=\"footer\">\n        Roland DG MO-180 UV Printer Simulation\n      </div>\n      \n      <button class=\"no-print\" onclick=\"window.print()\" style=\"margin-top: 20px; padding: 10px 20px; background-color: #008d70; color: white; border: none; border-radius: 4px; cursor: pointer;\">\n        ${t('downloadPDF')}\n      </button>\n    </body>\n    </html>\n  `;\n  return htmlContent;\n};\n\n/**\n * Open a new window with printable content\n * @param {Object} results - The simulation results\n * @param {Function} t - Translation function\n */\nexport const printResults = (results, t) => {\n  const html = generatePrintableHTML(results, t);\n  const printWindow = window.open('', '_blank');\n  printWindow.document.write(html);\n  printWindow.document.close();\n  // The user can click the print button in the new window\n};\nexport default printResults;","map":{"version":3,"names":["generatePrintableHTML","results","t","_results$inputs","_results$inputs2","_results$inputs3","_results$inputs4","_results$inputs5","_results$inputs6","_results$inputs7","formatNumber","num","decimals","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","formatCurrency","amount","currentLang","language","Math","round","formatPercent","value","toFixed","htmlContent","Date","toLocaleDateString","monthlySales","monthlyGrossProfit","grossProfitMargin","paybackPeriod","costPerUnit","operatingHours","itemsPerPrintJob","monthlyPrintJobs","inkUsage","white","cmyk","primer","inkCostPerUnit","inputs","shortEdge","longEdge","monthlySalesVolume","salesPricePerUnit","materialCostPerUnit","laborCostPerHour","inkPricePerCC","printResults","html","printWindow","window","open","document","write","close"],"sources":["/Users/nicholasgobert/Desktop/Apps/MOSimulator/src/utils/pdf/generatePDF.js"],"sourcesContent":["/**\n * Generate a printable HTML representation of the simulation results\n * @param {Object} results - The simulation results\n * @param {Function} t - Translation function\n * @returns {String} - HTML content to be printed\n */\nexport const generatePrintableHTML = (results, t) => {\n  // Helper function to format numbers with commas as thousands separators\n  const formatNumber = (num, decimals = 0) => {\n    if (typeof num === 'string') return num;\n    return num.toLocaleString(undefined, { \n      minimumFractionDigits: decimals,\n      maximumFractionDigits: decimals\n    });\n  };\n\n  // Helper function to format currency\n  const formatCurrency = (amount) => {\n    // Get the current language from the results\n    const currentLang = results.language || 'en';\n    \n    // Place the currency symbol after the number for Japanese\n    if (currentLang === 'ja') {\n      return `${formatNumber(Math.round(amount))}${t('currency')}`;\n    }\n    // Default format for other languages\n    return `${t('currency')} ${formatNumber(Math.round(amount))}`;\n  };\n\n  // Helper function to format percentage\n  const formatPercent = (value) => {\n    return `${value.toFixed(2)}%`;\n  };\n\n  // Generate HTML content\n  const htmlContent = `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <title>${t('mo180Simulator')} - ${t('simulationResults')}</title>\n      <meta charset=\"UTF-8\">\n      <style>\n        body {\n          font-family: Arial, sans-serif;\n          padding: 20px;\n          max-width: 800px;\n          margin: 0 auto;\n          color: #333;\n        }\n        h1, h2, h3 {\n          color: #008d70;\n        }\n        .header {\n          border-bottom: 2px solid #008d70;\n          padding-bottom: 10px;\n          margin-bottom: 20px;\n        }\n        .date {\n          font-size: 14px;\n          color: #777;\n          text-align: right;\n          margin-bottom: 20px;\n        }\n        table {\n          width: 100%;\n          border-collapse: collapse;\n          margin-bottom: 30px;\n        }\n        th {\n          background-color: #008d70;\n          color: white;\n          padding: 10px;\n          text-align: left;\n        }\n        td {\n          padding: 8px;\n          border-bottom: 1px solid #ddd;\n        }\n        tr:nth-child(even) {\n          background-color: #f2f2f2;\n        }\n        .value-cell {\n          text-align: right;\n        }\n        .footer {\n          margin-top: 30px;\n          text-align: center;\n          color: #777;\n          font-size: 12px;\n          border-top: 1px solid #ddd;\n          padding-top: 10px;\n        }\n        @media print {\n          body {\n            padding: 0;\n          }\n          .no-print {\n            display: none;\n          }\n        }\n      </style>\n    </head>\n    <body>\n      <div class=\"header\">\n        <h1>${t('mo180Simulator')}</h1>\n        <h2>${t('simulationResults')}</h2>\n      </div>\n      \n      <div class=\"date\">\n        ${t('generatedOn')}: ${new Date().toLocaleDateString()}\n      </div>\n      \n      <h3>${t('keySummary')}</h3>\n      <table>\n        <tr>\n          <th>${t('metric')}</th>\n          <th>${t('value')}</th>\n        </tr>\n        <tr>\n          <td>${t('monthlySales')}</td>\n          <td class=\"value-cell\">${formatCurrency(results.monthlySales)}</td>\n        </tr>\n        <tr>\n          <td>${t('monthlyGrossProfit')}</td>\n          <td class=\"value-cell\">${formatCurrency(results.monthlyGrossProfit)}</td>\n        </tr>\n        <tr>\n          <td>${t('grossProfitMargin')}</td>\n          <td class=\"value-cell\">${formatPercent(results.grossProfitMargin)}</td>\n        </tr>\n        <tr>\n          <td>${t('investmentPaybackPeriod')}</td>\n          <td class=\"value-cell\">${results.paybackPeriod === '-' ? 'N/A' : `${results.paybackPeriod.toFixed(1)} ${t('months')}`}</td>\n        </tr>\n        <tr>\n          <td>${t('costPerUnit')}</td>\n          <td class=\"value-cell\">${formatCurrency(results.costPerUnit)}</td>\n        </tr>\n        <tr>\n          <td>${t('operatingHours')}</td>\n          <td class=\"value-cell\">${results.operatingHours.toFixed(1)} ${t('hours')}</td>\n        </tr>\n      </table>\n      \n      <h3>${t('productionDetails')}</h3>\n      <table>\n        <tr>\n          <th>${t('metric')}</th>\n          <th>${t('value')}</th>\n        </tr>\n        <tr>\n          <td>${t('itemsPerPrintJob')}</td>\n          <td class=\"value-cell\">${formatNumber(results.itemsPerPrintJob)} ${t('units')}</td>\n        </tr>\n        <tr>\n          <td>${t('monthlyPrintJobs')}</td>\n          <td class=\"value-cell\">${formatNumber(results.monthlyPrintJobs)} ${t('jobs')}</td>\n        </tr>\n      </table>\n      \n      <h3>${t('inkUsagePerItem')}</h3>\n      <table>\n        <tr>\n          <th>${t('inkType')}</th>\n          <th>${t('volume')}</th>\n        </tr>\n        <tr>\n          <td>${t('white')}</td>\n          <td class=\"value-cell\">${results.inkUsage.white} ${t('cc')}</td>\n        </tr>\n        <tr>\n          <td>${t('cmyk')}</td>\n          <td class=\"value-cell\">${results.inkUsage.cmyk} ${t('cc')}</td>\n        </tr>\n        <tr>\n          <td>${t('primer')}</td>\n          <td class=\"value-cell\">${results.inkUsage.primer} ${t('cc')}</td>\n        </tr>\n        <tr>\n          <td>${t('inkCostPerUnit')}</td>\n          <td class=\"value-cell\">${formatCurrency(results.inkCostPerUnit)}</td>\n        </tr>\n      </table>\n      \n      <h3>${t('simulationParameters')}</h3>\n      <table>\n        <tr>\n          <th>${t('parameter')}</th>\n          <th>${t('value')}</th>\n        </tr>\n        <tr>\n          <td>${t('productDimensions')}</td>\n          <td class=\"value-cell\">${results.inputs?.shortEdge || 0} x ${results.inputs?.longEdge || 0} mm</td>\n        </tr>\n        <tr>\n          <td>${t('monthlySalesTarget')}</td>\n          <td class=\"value-cell\">${formatNumber(results.inputs?.monthlySalesVolume || 0)} ${t('units')}</td>\n        </tr>\n        <tr>\n          <td>${t('salesPricePerUnit')}</td>\n          <td class=\"value-cell\">${formatCurrency(results.inputs?.salesPricePerUnit || 0)}</td>\n        </tr>\n        <tr>\n          <td>${t('materialCostPerUnit')}</td>\n          <td class=\"value-cell\">${formatCurrency(results.inputs?.materialCostPerUnit || 0)}</td>\n        </tr>\n        <tr>\n          <td>${t('laborCostPerHour')}</td>\n          <td class=\"value-cell\">${formatCurrency(results.inputs?.laborCostPerHour || 0)}</td>\n        </tr>\n        <tr>\n          <td>${t('inkPrice')}</td>\n          <td class=\"value-cell\">${results.inputs?.inkPricePerCC || 0} ${t('currency')}/${t('cc')}</td>\n        </tr>\n      </table>\n      \n      <div class=\"footer\">\n        Roland DG MO-180 UV Printer Simulation\n      </div>\n      \n      <button class=\"no-print\" onclick=\"window.print()\" style=\"margin-top: 20px; padding: 10px 20px; background-color: #008d70; color: white; border: none; border-radius: 4px; cursor: pointer;\">\n        ${t('downloadPDF')}\n      </button>\n    </body>\n    </html>\n  `;\n\n  return htmlContent;\n};\n\n/**\n * Open a new window with printable content\n * @param {Object} results - The simulation results\n * @param {Function} t - Translation function\n */\nexport const printResults = (results, t) => {\n  const html = generatePrintableHTML(results, t);\n  const printWindow = window.open('', '_blank');\n  printWindow.document.write(html);\n  printWindow.document.close();\n  // The user can click the print button in the new window\n};\n\nexport default printResults;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}