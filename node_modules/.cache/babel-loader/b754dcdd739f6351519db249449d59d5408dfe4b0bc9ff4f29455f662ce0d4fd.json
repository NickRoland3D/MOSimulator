{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasgobert/Desktop/Apps/MOSimulator/src/utils/code-splitting/index.js\";\nimport React, { lazy, Suspense } from 'react';\nimport { Box, CircularProgress, Typography } from '@mui/material';\n\n/**\n * Loading component to display while lazy-loaded components are being loaded\n * @param {string} message - Optional message to display during loading\n * @returns {JSX.Element} - Loading component\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Loading = ({\n  message = 'Loading...'\n}) => /*#__PURE__*/_jsxDEV(Box, {\n  sx: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    p: 4\n  },\n  children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n    size: 40,\n    thickness: 4,\n    sx: {\n      mb: 2\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"body2\",\n    color: \"text.secondary\",\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this);\n\n/**\n * Lazy loads a component with a loading fallback\n * @param {Function} importFunc - Import function to lazy load the component\n * @param {Object} options - Options for the lazy loading\n * @returns {JSX.Element} - Lazy-loaded component with suspense fallback\n */\n_c = Loading;\nexport const lazyLoad = (importFunc, options = {}) => {\n  const LazyComponent = /*#__PURE__*/lazy(importFunc);\n  const {\n    fallback = /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 22\n    }, this),\n    ...suspenseProps\n  } = options;\n  return props => /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: fallback,\n    ...suspenseProps,\n    children: /*#__PURE__*/_jsxDEV(LazyComponent, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\nexport default lazyLoad;\nvar _c;\n$RefreshReg$(_c, \"Loading\");","map":{"version":3,"names":["React","lazy","Suspense","Box","CircularProgress","Typography","jsxDEV","_jsxDEV","Loading","message","sx","display","flexDirection","alignItems","justifyContent","p","children","size","thickness","mb","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","_c","lazyLoad","importFunc","options","LazyComponent","fallback","suspenseProps","props","$RefreshReg$"],"sources":["/Users/nicholasgobert/Desktop/Apps/MOSimulator/src/utils/code-splitting/index.js"],"sourcesContent":["import React, { lazy, Suspense } from 'react';\nimport { Box, CircularProgress, Typography } from '@mui/material';\n\n/**\n * Loading component to display while lazy-loaded components are being loaded\n * @param {string} message - Optional message to display during loading\n * @returns {JSX.Element} - Loading component\n */\nexport const Loading = ({ message = 'Loading...' }) => (\n  <Box \n    sx={{ \n      display: 'flex', \n      flexDirection: 'column',\n      alignItems: 'center', \n      justifyContent: 'center',\n      p: 4\n    }}\n  >\n    <CircularProgress size={40} thickness={4} sx={{ mb: 2 }} />\n    <Typography variant=\"body2\" color=\"text.secondary\">\n      {message}\n    </Typography>\n  </Box>\n);\n\n/**\n * Lazy loads a component with a loading fallback\n * @param {Function} importFunc - Import function to lazy load the component\n * @param {Object} options - Options for the lazy loading\n * @returns {JSX.Element} - Lazy-loaded component with suspense fallback\n */\nexport const lazyLoad = (importFunc, options = {}) => {\n  const LazyComponent = lazy(importFunc);\n  const { fallback = <Loading />, ...suspenseProps } = options;\n  \n  return (props) => (\n    <Suspense fallback={fallback} {...suspenseProps}>\n      <LazyComponent {...props} />\n    </Suspense>\n  );\n};\n\nexport default lazyLoad;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,IAAI,EAAEC,QAAQ,QAAQ,OAAO;AAC7C,SAASC,GAAG,EAAEC,gBAAgB,EAAEC,UAAU,QAAQ,eAAe;;AAEjE;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA;AAKA,OAAO,MAAMC,OAAO,GAAGA,CAAC;EAAEC,OAAO,GAAG;AAAa,CAAC,kBAChDF,OAAA,CAACJ,GAAG;EACFO,EAAE,EAAE;IACFC,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,CAAC,EAAE;EACL,CAAE;EAAAC,QAAA,gBAEFT,OAAA,CAACH,gBAAgB;IAACa,IAAI,EAAE,EAAG;IAACC,SAAS,EAAE,CAAE;IAACR,EAAE,EAAE;MAAES,EAAE,EAAE;IAAE;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eAC3DhB,OAAA,CAACF,UAAU;IAACmB,OAAO,EAAC,OAAO;IAACC,KAAK,EAAC,gBAAgB;IAAAT,QAAA,EAC/CP;EAAO;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACV,CACN;;AAED;AACA;AACA;AACA;AACA;AACA;AALAG,EAAA,GAjBalB,OAAO;AAuBpB,OAAO,MAAMmB,QAAQ,GAAGA,CAACC,UAAU,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EACpD,MAAMC,aAAa,gBAAG7B,IAAI,CAAC2B,UAAU,CAAC;EACtC,MAAM;IAAEG,QAAQ,gBAAGxB,OAAA,CAACC,OAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAAE,GAAGS;EAAc,CAAC,GAAGH,OAAO;EAE5D,OAAQI,KAAK,iBACX1B,OAAA,CAACL,QAAQ;IAAC6B,QAAQ,EAAEA,QAAS;IAAA,GAAKC,aAAa;IAAAhB,QAAA,eAC7CT,OAAA,CAACuB,aAAa;MAAA,GAAKG;IAAK;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CACX;AACH,CAAC;AAED,eAAeI,QAAQ;AAAC,IAAAD,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}