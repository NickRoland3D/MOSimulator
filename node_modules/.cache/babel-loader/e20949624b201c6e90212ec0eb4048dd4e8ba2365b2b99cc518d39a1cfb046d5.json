{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasgobert/Desktop/Apps/MOSimulator/src/components/SampleImagePanel/SampleImagePanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Typography, Divider } from '@mui/material';\nimport { useLanguage } from '../../context/LanguageContext';\n\n/**\n * SampleImagePanel Component\n * Displays sample image information for printing examples\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SampleImagePanel = () => {\n  _s();\n  const {\n    language\n  } = useLanguage();\n  const [imageError, setImageError] = useState(false);\n  const captionText = language === 'ja' ? 'このデータを使用して印刷しています' : 'This data is being used for printing';\n  const titleText = language === 'ja' ? 'この画像を印刷した場合' : 'When this image is printed';\n\n  // Try multiple image sources\n  const imageSources = ['/lisa.png',\n  // Direct in public root\n  '/assets/images/lisa.png',\n  // In public assets\n  'lisa.png',\n  // Relative path\n  process.env.PUBLIC_URL + '/lisa.png' // With PUBLIC_URL\n  ];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        fontWeight: 600,\n        mb: 1.5,\n        color: 'text.primary'\n      },\n      children: titleText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), imageError ?\n    /*#__PURE__*/\n    // Fallback to a colored div if all image sources fail\n    _jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        height: '180px',\n        borderRadius: '8px',\n        background: 'linear-gradient(to right, #9733EE, #DA22FF)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: 'white',\n        fontWeight: 'bold',\n        fontSize: '24px',\n        marginBottom: '12px',\n        boxShadow: '0 2px 8px rgba(0,0,0,0.15)'\n      },\n      children: \"Lisa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Try to display the image with one of the multiple sources\n    _jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageSources[0],\n        alt: \"Lisa\",\n        onError: e => {\n          // Try the next source if available\n          const currentIndex = imageSources.indexOf(e.target.src);\n          if (currentIndex < imageSources.length - 1) {\n            e.target.src = imageSources[currentIndex + 1];\n          } else {\n            // If all sources fail, show the fallback\n            setImageError(true);\n          }\n        },\n        style: {\n          maxWidth: '100%',\n          height: 'auto',\n          borderRadius: '8px',\n          boxShadow: '0 2px 8px rgba(0,0,0,0.15)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      sx: {\n        my: 1.5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      sx: {\n        fontWeight: 500,\n        color: 'text.secondary',\n        textAlign: 'center',\n        mt: 1\n      },\n      children: captionText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(SampleImagePanel, \"UUjTfPRRsyItIlA0/vZzjrsAeBw=\", false, function () {\n  return [useLanguage];\n});\n_c = SampleImagePanel;\nexport default SampleImagePanel;\nvar _c;\n$RefreshReg$(_c, \"SampleImagePanel\");","map":{"version":3,"names":["React","useState","Box","Typography","Divider","useLanguage","jsxDEV","_jsxDEV","SampleImagePanel","_s","language","imageError","setImageError","captionText","titleText","imageSources","process","env","PUBLIC_URL","children","variant","sx","fontWeight","mb","color","fileName","_jsxFileName","lineNumber","columnNumber","width","height","borderRadius","background","display","alignItems","justifyContent","fontSize","marginBottom","boxShadow","src","alt","onError","e","currentIndex","indexOf","target","length","style","maxWidth","my","textAlign","mt","_c","$RefreshReg$"],"sources":["/Users/nicholasgobert/Desktop/Apps/MOSimulator/src/components/SampleImagePanel/SampleImagePanel.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Typography, Divider } from '@mui/material';\nimport { useLanguage } from '../../context/LanguageContext';\n\n/**\n * SampleImagePanel Component\n * Displays sample image information for printing examples\n */\nconst SampleImagePanel = () => {\n  const { language } = useLanguage();\n  const [imageError, setImageError] = useState(false);\n\n  const captionText = language === 'ja' \n    ? 'このデータを使用して印刷しています'\n    : 'This data is being used for printing';\n\n  const titleText = language === 'ja' \n    ? 'この画像を印刷した場合'\n    : 'When this image is printed';\n\n  // Try multiple image sources\n  const imageSources = [\n    '/lisa.png', // Direct in public root\n    '/assets/images/lisa.png', // In public assets\n    'lisa.png', // Relative path\n    process.env.PUBLIC_URL + '/lisa.png', // With PUBLIC_URL\n  ];\n\n  return (\n    <Box>\n      <Typography \n        variant=\"body1\" \n        sx={{ \n          fontWeight: 600, \n          mb: 1.5,\n          color: 'text.primary' \n        }}\n      >\n        {titleText}\n      </Typography>\n      \n      {imageError ? (\n        // Fallback to a colored div if all image sources fail\n        <Box \n          sx={{\n            width: '100%',\n            height: '180px',\n            borderRadius: '8px',\n            background: 'linear-gradient(to right, #9733EE, #DA22FF)',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            color: 'white',\n            fontWeight: 'bold',\n            fontSize: '24px',\n            marginBottom: '12px',\n            boxShadow: '0 2px 8px rgba(0,0,0,0.15)'\n          }}\n        >\n          Lisa\n        </Box>\n      ) : (\n        // Try to display the image with one of the multiple sources\n        <Box \n          sx={{\n            width: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            mb: 2\n          }}\n        >\n          <img \n            src={imageSources[0]}\n            alt=\"Lisa\"\n            onError={(e) => {\n              // Try the next source if available\n              const currentIndex = imageSources.indexOf(e.target.src);\n              if (currentIndex < imageSources.length - 1) {\n                e.target.src = imageSources[currentIndex + 1];\n              } else {\n                // If all sources fail, show the fallback\n                setImageError(true);\n              }\n            }}\n            style={{\n              maxWidth: '100%',\n              height: 'auto',\n              borderRadius: '8px',\n              boxShadow: '0 2px 8px rgba(0,0,0,0.15)'\n            }}\n          />\n        </Box>\n      )}\n      \n      <Divider sx={{ my: 1.5 }} />\n      \n      <Typography \n        variant=\"body2\" \n        sx={{ \n          fontWeight: 500, \n          color: 'text.secondary',\n          textAlign: 'center',\n          mt: 1\n        }}\n      >\n        {captionText}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default SampleImagePanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}