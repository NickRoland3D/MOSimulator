{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasgobert/Desktop/Apps/MOSimulator/src/components/Charts/CostBreakdownChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { useLanguage } from '../../context/LanguageContext';\n\n/**\n * CostBreakdownChart Component\n * Displays a donut chart showing the breakdown of costs using CMYK colors\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CostBreakdownChart = ({\n  materialCost,\n  inkCost,\n  laborCost\n}) => {\n  _s();\n  const theme = useTheme();\n  const {\n    t\n  } = useLanguage(); // Get translation function\n  const canvasRef = useRef(null);\n\n  // Calculate total cost and percentages\n  const totalCost = materialCost + inkCost + laborCost;\n  const materialPercentage = materialCost / totalCost * 100;\n  const inkPercentage = inkCost / totalCost * 100;\n  const laborPercentage = laborCost / totalCost * 100;\n\n  // Format currency with thousands separators\n  const formatCurrency = amount => `${t('currency')} ${Math.round(amount).toLocaleString()}`;\n\n  // CMYK-inspired colors for the chart segments as specified in PRD\n  const colors = {\n    material: theme.palette.cmyk.cyan,\n    // Material = Cyan\n    ink: theme.palette.cmyk.magenta,\n    // Ink = Magenta\n    labor: theme.palette.cmyk.yellow // Labor = Yellow\n  };\n\n  // Draw the donut chart\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n    const radius = Math.min(centerX, centerY) * 0.8;\n    const innerRadius = radius * 0.6; // Donut hole size\n\n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw donut segments with enhanced styling\n    const drawSegment = (startAngle, endAngle, color) => {\n      ctx.beginPath();\n      ctx.arc(centerX, centerY, radius, startAngle, endAngle);\n      ctx.arc(centerX, centerY, innerRadius, endAngle, startAngle, true);\n      ctx.closePath();\n      ctx.fillStyle = color;\n      ctx.fill();\n\n      // Add highlight effect\n      ctx.beginPath();\n      ctx.arc(centerX, centerY, radius, startAngle, endAngle);\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.6)';\n      ctx.lineWidth = 2;\n      ctx.stroke();\n    };\n\n    // Convert percentages to radians\n    const materialAngle = materialPercentage / 100 * Math.PI * 2;\n    const inkAngle = inkPercentage / 100 * Math.PI * 2;\n    const laborAngle = laborPercentage / 100 * Math.PI * 2;\n\n    // Starting angle (top of circle)\n    let startAngle = -Math.PI / 2;\n\n    // Draw segments\n    drawSegment(startAngle, startAngle + materialAngle, colors.material);\n    startAngle += materialAngle;\n    drawSegment(startAngle, startAngle + inkAngle, colors.ink);\n    startAngle += inkAngle;\n    drawSegment(startAngle, startAngle + laborAngle, colors.labor);\n\n    // Draw center circle for donut hole with shadow\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, innerRadius, 0, Math.PI * 2);\n    ctx.fillStyle = theme.palette.background.paper;\n    ctx.shadowColor = 'rgba(0, 0, 0, 0.1)';\n    ctx.shadowBlur = 5;\n    ctx.shadowOffsetX = 0;\n    ctx.shadowOffsetY = 2;\n    ctx.fill();\n    ctx.shadowColor = 'transparent';\n\n    // Draw total cost in center with enhanced styling\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = theme.palette.text.primary;\n    ctx.font = 'bold 16px ' + theme.typography.fontFamily;\n    ctx.fillText(formatCurrency(totalCost), centerX, centerY - 10);\n    ctx.font = '12px ' + theme.typography.fontFamily;\n    ctx.fillStyle = theme.palette.text.secondary;\n    ctx.fillText(t('totalCostPerUnit'), centerX, centerY + 15);\n\n    // Add 3D effect to segments (subtle shadow)\n    ctx.shadowColor = 'rgba(0, 0, 0, 0.2)';\n    ctx.shadowBlur = 10;\n    ctx.shadowOffsetX = 0;\n    ctx.shadowOffsetY = 4;\n\n    // Redraw segments with shadow for 3D effect\n    startAngle = -Math.PI / 2;\n    ctx.globalAlpha = 0.1;\n    drawSegment(startAngle, startAngle + materialAngle, 'rgba(0, 0, 0, 0.2)');\n    startAngle += materialAngle;\n    drawSegment(startAngle, startAngle + inkAngle, 'rgba(0, 0, 0, 0.2)');\n    startAngle += inkAngle;\n    drawSegment(startAngle, startAngle + laborAngle, 'rgba(0, 0, 0, 0.2)');\n\n    // Reset settings\n    ctx.globalAlpha = 1;\n    ctx.shadowColor = 'transparent';\n  }, [materialCost, inkCost, laborCost, theme, materialPercentage, inkPercentage, laborPercentage, colors.material, colors.ink, colors.labor, totalCost]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      gutterBottom: true,\n      children: t('costBreakdownPerUnit')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'relative',\n        width: '100%',\n        height: '220px',\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 300,\n        height: 300,\n        style: {\n          maxWidth: '100%',\n          maxHeight: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        gap: 3,\n        mt: 2,\n        flexWrap: 'wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: 12,\n            height: 12,\n            borderRadius: '50%',\n            bgcolor: colors.material,\n            mr: 1,\n            boxShadow: '0 1px 3px rgba(0, 0, 0, 0.12)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          fontWeight: 500,\n          children: [t('material'), \": \", formatCurrency(materialCost), \" (\", Math.round(materialPercentage), \"%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: 12,\n            height: 12,\n            borderRadius: '50%',\n            bgcolor: colors.ink,\n            mr: 1,\n            boxShadow: '0 1px 3px rgba(0, 0, 0, 0.12)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          fontWeight: 500,\n          children: [t('ink'), \": \", formatCurrency(inkCost), \" (\", Math.round(inkPercentage), \"%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: 12,\n            height: 12,\n            borderRadius: '50%',\n            bgcolor: colors.labor,\n            mr: 1,\n            boxShadow: '0 1px 3px rgba(0, 0, 0, 0.12)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          fontWeight: 500,\n          children: [t('labor'), \": \", formatCurrency(laborCost), \" (\", Math.round(laborPercentage), \"%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(CostBreakdownChart, \"Saw3BvN2U8MJxwyio05Tcz8bM6g=\", false, function () {\n  return [useTheme, useLanguage];\n});\n_c = CostBreakdownChart;\nexport default CostBreakdownChart;\nvar _c;\n$RefreshReg$(_c, \"CostBreakdownChart\");","map":{"version":3,"names":["React","useEffect","useRef","Box","Typography","useTheme","useLanguage","jsxDEV","_jsxDEV","CostBreakdownChart","materialCost","inkCost","laborCost","_s","theme","t","canvasRef","totalCost","materialPercentage","inkPercentage","laborPercentage","formatCurrency","amount","Math","round","toLocaleString","colors","material","palette","cmyk","cyan","ink","magenta","labor","yellow","canvas","current","ctx","getContext","centerX","width","centerY","height","radius","min","innerRadius","clearRect","drawSegment","startAngle","endAngle","color","beginPath","arc","closePath","fillStyle","fill","strokeStyle","lineWidth","stroke","materialAngle","PI","inkAngle","laborAngle","background","paper","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","textAlign","textBaseline","text","primary","font","typography","fontFamily","fillText","secondary","globalAlpha","sx","display","flexDirection","alignItems","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","position","justifyContent","ref","style","maxWidth","maxHeight","gap","mt","flexWrap","borderRadius","bgcolor","mr","boxShadow","fontWeight","_c","$RefreshReg$"],"sources":["/Users/nicholasgobert/Desktop/Apps/MOSimulator/src/components/Charts/CostBreakdownChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { useLanguage } from '../../context/LanguageContext';\n\n/**\n * CostBreakdownChart Component\n * Displays a donut chart showing the breakdown of costs using CMYK colors\n */\nconst CostBreakdownChart = ({ materialCost, inkCost, laborCost }) => {\n  const theme = useTheme();\n  const { t } = useLanguage(); // Get translation function\n  const canvasRef = useRef(null);\n  \n  // Calculate total cost and percentages\n  const totalCost = materialCost + inkCost + laborCost;\n  const materialPercentage = (materialCost / totalCost) * 100;\n  const inkPercentage = (inkCost / totalCost) * 100;\n  const laborPercentage = (laborCost / totalCost) * 100;\n  \n  // Format currency with thousands separators\n  const formatCurrency = (amount) => `${t('currency')} ${Math.round(amount).toLocaleString()}`;\n  \n  // CMYK-inspired colors for the chart segments as specified in PRD\n  const colors = {\n    material: theme.palette.cmyk.cyan,      // Material = Cyan\n    ink: theme.palette.cmyk.magenta,        // Ink = Magenta\n    labor: theme.palette.cmyk.yellow        // Labor = Yellow\n  };\n  \n  // Draw the donut chart\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const ctx = canvas.getContext('2d');\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n    const radius = Math.min(centerX, centerY) * 0.8;\n    const innerRadius = radius * 0.6; // Donut hole size\n    \n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n    // Draw donut segments with enhanced styling\n    const drawSegment = (startAngle, endAngle, color) => {\n      ctx.beginPath();\n      ctx.arc(centerX, centerY, radius, startAngle, endAngle);\n      ctx.arc(centerX, centerY, innerRadius, endAngle, startAngle, true);\n      ctx.closePath();\n      ctx.fillStyle = color;\n      ctx.fill();\n      \n      // Add highlight effect\n      ctx.beginPath();\n      ctx.arc(centerX, centerY, radius, startAngle, endAngle);\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.6)';\n      ctx.lineWidth = 2;\n      ctx.stroke();\n    };\n    \n    // Convert percentages to radians\n    const materialAngle = (materialPercentage / 100) * Math.PI * 2;\n    const inkAngle = (inkPercentage / 100) * Math.PI * 2;\n    const laborAngle = (laborPercentage / 100) * Math.PI * 2;\n    \n    // Starting angle (top of circle)\n    let startAngle = -Math.PI / 2;\n    \n    // Draw segments\n    drawSegment(startAngle, startAngle + materialAngle, colors.material);\n    startAngle += materialAngle;\n    \n    drawSegment(startAngle, startAngle + inkAngle, colors.ink);\n    startAngle += inkAngle;\n    \n    drawSegment(startAngle, startAngle + laborAngle, colors.labor);\n    \n    // Draw center circle for donut hole with shadow\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, innerRadius, 0, Math.PI * 2);\n    ctx.fillStyle = theme.palette.background.paper;\n    ctx.shadowColor = 'rgba(0, 0, 0, 0.1)';\n    ctx.shadowBlur = 5;\n    ctx.shadowOffsetX = 0;\n    ctx.shadowOffsetY = 2;\n    ctx.fill();\n    ctx.shadowColor = 'transparent';\n    \n    // Draw total cost in center with enhanced styling\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = theme.palette.text.primary;\n    ctx.font = 'bold 16px ' + theme.typography.fontFamily;\n    ctx.fillText(formatCurrency(totalCost), centerX, centerY - 10);\n    \n    ctx.font = '12px ' + theme.typography.fontFamily;\n    ctx.fillStyle = theme.palette.text.secondary;\n    ctx.fillText(t('totalCostPerUnit'), centerX, centerY + 15);\n    \n    // Add 3D effect to segments (subtle shadow)\n    ctx.shadowColor = 'rgba(0, 0, 0, 0.2)';\n    ctx.shadowBlur = 10;\n    ctx.shadowOffsetX = 0;\n    ctx.shadowOffsetY = 4;\n    \n    // Redraw segments with shadow for 3D effect\n    startAngle = -Math.PI / 2;\n    ctx.globalAlpha = 0.1;\n    \n    drawSegment(startAngle, startAngle + materialAngle, 'rgba(0, 0, 0, 0.2)');\n    startAngle += materialAngle;\n    \n    drawSegment(startAngle, startAngle + inkAngle, 'rgba(0, 0, 0, 0.2)');\n    startAngle += inkAngle;\n    \n    drawSegment(startAngle, startAngle + laborAngle, 'rgba(0, 0, 0, 0.2)');\n    \n    // Reset settings\n    ctx.globalAlpha = 1;\n    ctx.shadowColor = 'transparent';\n    \n  }, [materialCost, inkCost, laborCost, theme, materialPercentage, inkPercentage, laborPercentage, colors.material, colors.ink, colors.labor, totalCost]);\n  \n  return (\n    <Box sx={{ width: '100%', height: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      <Typography variant=\"h6\" align=\"center\" gutterBottom>\n        {t('costBreakdownPerUnit')}\n      </Typography>\n      \n      {/* Canvas for donut chart */}\n      <Box sx={{ position: 'relative', width: '100%', height: '220px', display: 'flex', justifyContent: 'center' }}>\n        <canvas ref={canvasRef} width={300} height={300} style={{ maxWidth: '100%', maxHeight: '100%' }} />\n      </Box>\n      \n      {/* Legend with enhanced styling */}\n      <Box sx={{ display: 'flex', justifyContent: 'center', gap: 3, mt: 2, flexWrap: 'wrap' }}>\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n          <Box sx={{ \n            width: 12, \n            height: 12, \n            borderRadius: '50%', \n            bgcolor: colors.material, \n            mr: 1,\n            boxShadow: '0 1px 3px rgba(0, 0, 0, 0.12)'\n          }} />\n          <Typography variant=\"body2\" fontWeight={500}>\n            {t('material')}: {formatCurrency(materialCost)} ({Math.round(materialPercentage)}%)\n          </Typography>\n        </Box>\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n          <Box sx={{ \n            width: 12, \n            height: 12, \n            borderRadius: '50%', \n            bgcolor: colors.ink, \n            mr: 1,\n            boxShadow: '0 1px 3px rgba(0, 0, 0, 0.12)'\n          }} />\n          <Typography variant=\"body2\" fontWeight={500}>\n            {t('ink')}: {formatCurrency(inkCost)} ({Math.round(inkPercentage)}%)\n          </Typography>\n        </Box>\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n          <Box sx={{ \n            width: 12, \n            height: 12, \n            borderRadius: '50%', \n            bgcolor: colors.labor, \n            mr: 1,\n            boxShadow: '0 1px 3px rgba(0, 0, 0, 0.12)'\n          }} />\n          <Typography variant=\"body2\" fontWeight={500}>\n            {t('labor')}: {formatCurrency(laborCost)} ({Math.round(laborPercentage)}%)\n          </Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default CostBreakdownChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}