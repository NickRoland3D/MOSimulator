{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasgobert/Desktop/Apps/MOSimulator/src/features/visualization/charts/CostBreakdownChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Box, Typography, useMediaQuery } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { useLanguage } from '../../../context/LanguageContext';\n\n/**\n * CostBreakdownChart Component\n * Displays a donut chart showing the breakdown of costs using CMYK colors\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CostBreakdownChart = ({\n  materialCost,\n  inkCost,\n  laborCost\n}) => {\n  _s();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const {\n    t,\n    language\n  } = useLanguage(); // Get translation function and language\n  const canvasRef = useRef(null);\n\n  // Calculate total cost and percentages\n  const totalCost = materialCost + inkCost + laborCost;\n  const materialPercentage = materialCost / totalCost * 100;\n  const inkPercentage = inkCost / totalCost * 100;\n  const laborPercentage = laborCost / totalCost * 100;\n\n  // Format currency with thousands separators - updated for Japanese format\n  const formatCurrency = (amount, isEstimate = false) => {\n    if (language === 'ja') {\n      return isEstimate ? `ç´„${Math.round(amount).toLocaleString()}${t('currency')}` : `${Math.round(amount).toLocaleString()}${t('currency')}`;\n    }\n    return `${t('currency')} ${Math.round(amount).toLocaleString()}`;\n  };\n\n  // CMYK-inspired colors for the chart segments as specified in PRD\n  const colors = {\n    material: theme.palette.cmyk.cyan,\n    // Material = Cyan\n    ink: theme.palette.cmyk.magenta,\n    // Ink = Magenta\n    labor: theme.palette.cmyk.yellow // Labor = Yellow\n  };\n\n  // Draw the donut chart\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n    const radius = Math.min(centerX, centerY) * (isMobile ? 0.75 : 0.8);\n    const innerRadius = radius * (isMobile ? 0.55 : 0.6); // Donut hole size\n\n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw donut segments with enhanced styling\n    const drawSegment = (startAngle, endAngle, color) => {\n      ctx.beginPath();\n      ctx.arc(centerX, centerY, radius, startAngle, endAngle);\n      ctx.arc(centerX, centerY, innerRadius, endAngle, startAngle, true);\n      ctx.closePath();\n      ctx.fillStyle = color;\n      ctx.fill();\n\n      // Add highlight effect\n      ctx.beginPath();\n      ctx.arc(centerX, centerY, radius, startAngle, endAngle);\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.6)';\n      ctx.lineWidth = 2;\n      ctx.stroke();\n    };\n\n    // Convert percentages to radians\n    const materialAngle = materialPercentage / 100 * Math.PI * 2;\n    const inkAngle = inkPercentage / 100 * Math.PI * 2;\n    const laborAngle = laborPercentage / 100 * Math.PI * 2;\n\n    // Starting angle (top of circle)\n    let startAngle = -Math.PI / 2;\n\n    // Draw segments\n    drawSegment(startAngle, startAngle + materialAngle, colors.material);\n    startAngle += materialAngle;\n    drawSegment(startAngle, startAngle + inkAngle, colors.ink);\n    startAngle += inkAngle;\n    drawSegment(startAngle, startAngle + laborAngle, colors.labor);\n\n    // Draw center circle for donut hole with shadow\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, innerRadius, 0, Math.PI * 2);\n    ctx.fillStyle = theme.palette.background.paper;\n    ctx.shadowColor = 'rgba(0, 0, 0, 0.1)';\n    ctx.shadowBlur = 5;\n    ctx.shadowOffsetX = 0;\n    ctx.shadowOffsetY = 2;\n    ctx.fill();\n    ctx.shadowColor = 'transparent';\n\n    // Format the total cost text with correct currency format\n    let displayText;\n    if (language === 'ja') {\n      displayText = `${Math.round(totalCost).toLocaleString()}${t('currency')}`;\n    } else {\n      displayText = `${t('currency')} ${Math.round(totalCost).toLocaleString()}`;\n    }\n\n    // Draw total cost in center with enhanced styling - smaller font on mobile\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = theme.palette.text.primary;\n    ctx.font = `bold ${isMobile ? '14px' : '16px'} ${theme.typography.fontFamily}`;\n    ctx.fillText(displayText, centerX, centerY - (isMobile ? 8 : 10));\n    ctx.font = `${isMobile ? '10px' : '12px'} ${theme.typography.fontFamily}`;\n    ctx.fillStyle = theme.palette.text.secondary;\n    ctx.fillText(t('totalCostPerUnit'), centerX, centerY + (isMobile ? 12 : 15));\n\n    // Add 3D effect to segments (subtle shadow)\n    ctx.shadowColor = 'rgba(0, 0, 0, 0.2)';\n    ctx.shadowBlur = 10;\n    ctx.shadowOffsetX = 0;\n    ctx.shadowOffsetY = 4;\n\n    // Redraw segments with shadow for 3D effect\n    startAngle = -Math.PI / 2;\n    ctx.globalAlpha = 0.1;\n    drawSegment(startAngle, startAngle + materialAngle, 'rgba(0, 0, 0, 0.2)');\n    startAngle += materialAngle;\n    drawSegment(startAngle, startAngle + inkAngle, 'rgba(0, 0, 0, 0.2)');\n    startAngle += inkAngle;\n    drawSegment(startAngle, startAngle + laborAngle, 'rgba(0, 0, 0, 0.2)');\n\n    // Reset settings\n    ctx.globalAlpha = 1;\n    ctx.shadowColor = 'transparent';\n  }, [materialCost, inkCost, laborCost, theme, materialPercentage, inkPercentage, laborPercentage, colors.material, colors.ink, colors.labor, totalCost, language, t, isMobile]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: isMobile ? \"subtitle1\" : \"h6\",\n      align: \"center\",\n      gutterBottom: true,\n      children: t('costBreakdownPerUnit')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'relative',\n        width: '100%',\n        height: isMobile ? '180px' : '220px',\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 300,\n        height: 300,\n        style: {\n          maxWidth: '100%',\n          maxHeight: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: isMobile ? 'column' : 'row',\n        alignItems: isMobile ? 'flex-start' : 'center',\n        justifyContent: 'center',\n        gap: isMobile ? 0.75 : 3,\n        mt: isMobile ? 0.5 : 2,\n        px: isMobile ? 1 : 0,\n        width: '100%',\n        maxWidth: isMobile ? '100%' : '350px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          width: isMobile ? '100%' : 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: isMobile ? 8 : 12,\n            height: isMobile ? 8 : 12,\n            borderRadius: '50%',\n            bgcolor: colors.material,\n            mr: 1,\n            flexShrink: 0,\n            boxShadow: '0 1px 3px rgba(0, 0, 0, 0.12)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: isMobile ? \"caption\" : \"body2\",\n          fontWeight: 500,\n          sx: {\n            fontSize: isMobile ? '0.7rem' : 'inherit',\n            whiteSpace: 'nowrap'\n          },\n          children: [t('material'), \": \", formatCurrency(materialCost), \" (\", Math.round(materialPercentage), \"%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          width: isMobile ? '100%' : 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: isMobile ? 8 : 12,\n            height: isMobile ? 8 : 12,\n            borderRadius: '50%',\n            bgcolor: colors.ink,\n            mr: 1,\n            flexShrink: 0,\n            boxShadow: '0 1px 3px rgba(0, 0, 0, 0.12)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: isMobile ? \"caption\" : \"body2\",\n          fontWeight: 500,\n          sx: {\n            fontSize: isMobile ? '0.7rem' : 'inherit',\n            whiteSpace: 'nowrap'\n          },\n          children: [t('ink'), \": \", language === 'ja' ? formatCurrency(inkCost, true) : formatCurrency(inkCost), \" (\", Math.round(inkPercentage), \"%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          width: isMobile ? '100%' : 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: isMobile ? 8 : 12,\n            height: isMobile ? 8 : 12,\n            borderRadius: '50%',\n            bgcolor: colors.labor,\n            mr: 1,\n            flexShrink: 0,\n            boxShadow: '0 1px 3px rgba(0, 0, 0, 0.12)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: isMobile ? \"caption\" : \"body2\",\n          fontWeight: 500,\n          sx: {\n            fontSize: isMobile ? '0.7rem' : 'inherit',\n            whiteSpace: 'nowrap'\n          },\n          children: [t('labor'), \": \", language === 'ja' ? formatCurrency(laborCost, true) : formatCurrency(laborCost), \" (\", Math.round(laborPercentage), \"%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(CostBreakdownChart, \"qUwpNNkYJz9bCKZBtnzy2RQFTlQ=\", false, function () {\n  return [useTheme, useMediaQuery, useLanguage];\n});\n_c = CostBreakdownChart;\nexport default CostBreakdownChart;\nvar _c;\n$RefreshReg$(_c, \"CostBreakdownChart\");","map":{"version":3,"names":["React","useEffect","useRef","Box","Typography","useMediaQuery","useTheme","useLanguage","jsxDEV","_jsxDEV","CostBreakdownChart","materialCost","inkCost","laborCost","_s","theme","isMobile","breakpoints","down","t","language","canvasRef","totalCost","materialPercentage","inkPercentage","laborPercentage","formatCurrency","amount","isEstimate","Math","round","toLocaleString","colors","material","palette","cmyk","cyan","ink","magenta","labor","yellow","canvas","current","ctx","getContext","centerX","width","centerY","height","radius","min","innerRadius","clearRect","drawSegment","startAngle","endAngle","color","beginPath","arc","closePath","fillStyle","fill","strokeStyle","lineWidth","stroke","materialAngle","PI","inkAngle","laborAngle","background","paper","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","displayText","textAlign","textBaseline","text","primary","font","typography","fontFamily","fillText","secondary","globalAlpha","sx","display","flexDirection","alignItems","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","position","justifyContent","ref","style","maxWidth","maxHeight","gap","mt","px","borderRadius","bgcolor","mr","flexShrink","boxShadow","fontWeight","fontSize","whiteSpace","_c","$RefreshReg$"],"sources":["/Users/nicholasgobert/Desktop/Apps/MOSimulator/src/features/visualization/charts/CostBreakdownChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Box, Typography, useMediaQuery } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { useLanguage } from '../../../context/LanguageContext';\n\n/**\n * CostBreakdownChart Component\n * Displays a donut chart showing the breakdown of costs using CMYK colors\n */\nconst CostBreakdownChart = ({ materialCost, inkCost, laborCost }) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const { t, language } = useLanguage(); // Get translation function and language\n  const canvasRef = useRef(null);\n  \n  // Calculate total cost and percentages\n  const totalCost = materialCost + inkCost + laborCost;\n  const materialPercentage = (materialCost / totalCost) * 100;\n  const inkPercentage = (inkCost / totalCost) * 100;\n  const laborPercentage = (laborCost / totalCost) * 100;\n  \n  // Format currency with thousands separators - updated for Japanese format\n  const formatCurrency = (amount, isEstimate = false) => {\n    if (language === 'ja') {\n      return isEstimate \n        ? `ç´„${Math.round(amount).toLocaleString()}${t('currency')}` \n        : `${Math.round(amount).toLocaleString()}${t('currency')}`;\n    }\n    return `${t('currency')} ${Math.round(amount).toLocaleString()}`;\n  };\n  \n  // CMYK-inspired colors for the chart segments as specified in PRD\n  const colors = {\n    material: theme.palette.cmyk.cyan,      // Material = Cyan\n    ink: theme.palette.cmyk.magenta,        // Ink = Magenta\n    labor: theme.palette.cmyk.yellow        // Labor = Yellow\n  };\n  \n  // Draw the donut chart\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const ctx = canvas.getContext('2d');\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n    const radius = Math.min(centerX, centerY) * (isMobile ? 0.75 : 0.8);\n    const innerRadius = radius * (isMobile ? 0.55 : 0.6); // Donut hole size\n    \n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n    // Draw donut segments with enhanced styling\n    const drawSegment = (startAngle, endAngle, color) => {\n      ctx.beginPath();\n      ctx.arc(centerX, centerY, radius, startAngle, endAngle);\n      ctx.arc(centerX, centerY, innerRadius, endAngle, startAngle, true);\n      ctx.closePath();\n      ctx.fillStyle = color;\n      ctx.fill();\n      \n      // Add highlight effect\n      ctx.beginPath();\n      ctx.arc(centerX, centerY, radius, startAngle, endAngle);\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.6)';\n      ctx.lineWidth = 2;\n      ctx.stroke();\n    };\n    \n    // Convert percentages to radians\n    const materialAngle = (materialPercentage / 100) * Math.PI * 2;\n    const inkAngle = (inkPercentage / 100) * Math.PI * 2;\n    const laborAngle = (laborPercentage / 100) * Math.PI * 2;\n    \n    // Starting angle (top of circle)\n    let startAngle = -Math.PI / 2;\n    \n    // Draw segments\n    drawSegment(startAngle, startAngle + materialAngle, colors.material);\n    startAngle += materialAngle;\n    \n    drawSegment(startAngle, startAngle + inkAngle, colors.ink);\n    startAngle += inkAngle;\n    \n    drawSegment(startAngle, startAngle + laborAngle, colors.labor);\n    \n    // Draw center circle for donut hole with shadow\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, innerRadius, 0, Math.PI * 2);\n    ctx.fillStyle = theme.palette.background.paper;\n    ctx.shadowColor = 'rgba(0, 0, 0, 0.1)';\n    ctx.shadowBlur = 5;\n    ctx.shadowOffsetX = 0;\n    ctx.shadowOffsetY = 2;\n    ctx.fill();\n    ctx.shadowColor = 'transparent';\n    \n    // Format the total cost text with correct currency format\n    let displayText;\n    if (language === 'ja') {\n      displayText = `${Math.round(totalCost).toLocaleString()}${t('currency')}`;\n    } else {\n      displayText = `${t('currency')} ${Math.round(totalCost).toLocaleString()}`;\n    }\n    \n    // Draw total cost in center with enhanced styling - smaller font on mobile\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = theme.palette.text.primary;\n    ctx.font = `bold ${isMobile ? '14px' : '16px'} ${theme.typography.fontFamily}`;\n    ctx.fillText(displayText, centerX, centerY - (isMobile ? 8 : 10));\n    \n    ctx.font = `${isMobile ? '10px' : '12px'} ${theme.typography.fontFamily}`;\n    ctx.fillStyle = theme.palette.text.secondary;\n    ctx.fillText(t('totalCostPerUnit'), centerX, centerY + (isMobile ? 12 : 15));\n    \n    // Add 3D effect to segments (subtle shadow)\n    ctx.shadowColor = 'rgba(0, 0, 0, 0.2)';\n    ctx.shadowBlur = 10;\n    ctx.shadowOffsetX = 0;\n    ctx.shadowOffsetY = 4;\n    \n    // Redraw segments with shadow for 3D effect\n    startAngle = -Math.PI / 2;\n    ctx.globalAlpha = 0.1;\n    \n    drawSegment(startAngle, startAngle + materialAngle, 'rgba(0, 0, 0, 0.2)');\n    startAngle += materialAngle;\n    \n    drawSegment(startAngle, startAngle + inkAngle, 'rgba(0, 0, 0, 0.2)');\n    startAngle += inkAngle;\n    \n    drawSegment(startAngle, startAngle + laborAngle, 'rgba(0, 0, 0, 0.2)');\n    \n    // Reset settings\n    ctx.globalAlpha = 1;\n    ctx.shadowColor = 'transparent';\n    \n  }, [materialCost, inkCost, laborCost, theme, materialPercentage, inkPercentage, laborPercentage, colors.material, colors.ink, colors.labor, totalCost, language, t, isMobile]);\n  \n  return (\n    <Box sx={{ width: '100%', height: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      <Typography variant={isMobile ? \"subtitle1\" : \"h6\"} align=\"center\" gutterBottom>\n        {t('costBreakdownPerUnit')}\n      </Typography>\n      \n      {/* Canvas for donut chart */}\n      <Box sx={{ \n        position: 'relative', \n        width: '100%', \n        height: isMobile ? '180px' : '220px', \n        display: 'flex', \n        justifyContent: 'center' \n      }}>\n        <canvas ref={canvasRef} width={300} height={300} style={{ maxWidth: '100%', maxHeight: '100%' }} />\n      </Box>\n      \n      {/* Legend with enhanced styling - more compact on mobile */}\n      <Box sx={{ \n        display: 'flex', \n        flexDirection: isMobile ? 'column' : 'row',\n        alignItems: isMobile ? 'flex-start' : 'center',\n        justifyContent: 'center', \n        gap: isMobile ? 0.75 : 3, \n        mt: isMobile ? 0.5 : 2,\n        px: isMobile ? 1 : 0,\n        width: '100%',\n        maxWidth: isMobile ? '100%' : '350px'\n      }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', width: isMobile ? '100%' : 'auto' }}>\n          <Box sx={{ \n            width: isMobile ? 8 : 12, \n            height: isMobile ? 8 : 12, \n            borderRadius: '50%', \n            bgcolor: colors.material, \n            mr: 1,\n            flexShrink: 0,\n            boxShadow: '0 1px 3px rgba(0, 0, 0, 0.12)'\n          }} />\n          <Typography \n            variant={isMobile ? \"caption\" : \"body2\"} \n            fontWeight={500}\n            sx={{ fontSize: isMobile ? '0.7rem' : 'inherit', whiteSpace: 'nowrap' }}\n          >\n            {t('material')}: {formatCurrency(materialCost)} ({Math.round(materialPercentage)}%)\n          </Typography>\n        </Box>\n        <Box sx={{ display: 'flex', alignItems: 'center', width: isMobile ? '100%' : 'auto' }}>\n          <Box sx={{ \n            width: isMobile ? 8 : 12, \n            height: isMobile ? 8 : 12, \n            borderRadius: '50%', \n            bgcolor: colors.ink, \n            mr: 1,\n            flexShrink: 0,\n            boxShadow: '0 1px 3px rgba(0, 0, 0, 0.12)'\n          }} />\n          <Typography \n            variant={isMobile ? \"caption\" : \"body2\"} \n            fontWeight={500}\n            sx={{ fontSize: isMobile ? '0.7rem' : 'inherit', whiteSpace: 'nowrap' }}\n          >\n            {t('ink')}: {language === 'ja' ? formatCurrency(inkCost, true) : formatCurrency(inkCost)} ({Math.round(inkPercentage)}%)\n          </Typography>\n        </Box>\n        <Box sx={{ display: 'flex', alignItems: 'center', width: isMobile ? '100%' : 'auto' }}>\n          <Box sx={{ \n            width: isMobile ? 8 : 12, \n            height: isMobile ? 8 : 12,  \n            borderRadius: '50%', \n            bgcolor: colors.labor, \n            mr: 1,\n            flexShrink: 0,\n            boxShadow: '0 1px 3px rgba(0, 0, 0, 0.12)'\n          }} />\n          <Typography \n            variant={isMobile ? \"caption\" : \"body2\"} \n            fontWeight={500}\n            sx={{ fontSize: isMobile ? '0.7rem' : 'inherit', whiteSpace: 'nowrap' }}\n          >\n            {t('labor')}: {language === 'ja' ? formatCurrency(laborCost, true) : formatCurrency(laborCost)} ({Math.round(laborPercentage)}%)\n          </Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default CostBreakdownChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}